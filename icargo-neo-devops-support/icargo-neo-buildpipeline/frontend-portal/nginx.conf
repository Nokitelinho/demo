load_module modules/ngx_http_js_module.so;

# auto detects a good number of processes to run
worker_processes 2;

#Provides the configuration file context in which the directives that affect connection processing are specified.
events {
    # Sets the maximum number of simultaneous connections that can be opened by a worker process.
    worker_connections 100;
    # Tells the worker to accept multiple connections at a time
    multi_accept on;
}


http {
    server_tokens off;
    js_path "/usr/src";
    js_import index.js;

    # what times to include
    include       /etc/nginx/mime.types;
    # what is the default application type
    default_type  application/octet-stream;

    # Sets the path, format, and configuration for a buffered log write
    # log_format compression '$remote_addr - $remote_user [$time_local] '
    #    '"$request" $status $upstream_addr '
    #    '"$http_referer" "$http_user_agent"';

    server {
        # listen on port 8080
        listen 8080;
        # save logs here
        # access_log /var/log/nginx/access.log compression;

        # where the root here
        root /usr/src;
        # what file to server as index
        index index.html index.htm;

        location /nginx-health {
            access_log off;
            return 204;
        }

        # Media: images, icons, video, audio, HTC
        location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
          expires 1M;
          access_log off;
          add_header Cache-Control "public";
        }

        location ~.*/config/[A-Za-z]+/app-config.json {
            js_content index.nginxConfig;
        }

        # Javascript and CSS files
        location ~* \.(?:css|js)$ {
            try_files $uri =404;
            expires 1y;
            access_log off;
            add_header Cache-Control "public";
        }

        # Any route containing a file extension (e.g. /devicesfile.js)
        location ~ ^.+\..+$ {
            try_files $uri =404;
        }
    }
}
