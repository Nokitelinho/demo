<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.4.3</version>
		<relativePath/>
	</parent>
	<groupId>com.ibsplc.neoicargo.devops.snow</groupId>
	<artifactId>neo-snow-adapter</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>neo-snow-adapter</name>
	<description>An adpater to conver Prometheus AlertManager Notifications to SNOW events</description>
	<properties>
		<java.version>11</java.version>
		<cxf.version>3.2.14</cxf.version>
		<sonar.skip>true</sonar.skip>
		<org.mapstruct.version>1.4.1.Final</org.mapstruct.version>
		<aws.java.sdk.version>2.16.70</aws.java.sdk.version>
		<aws-java-sdk-sts.version>1.11.661</aws-java-sdk-sts.version>
		<start-class>com.ibsplc.neoicargo.devops.snow.SnowAdapterApplication</start-class>
		<docker-repository-url>harbor.ibsplc.com/icargo</docker-repository-url>
		<jib-maven-plugin.version>3.1.4</jib-maven-plugin.version>
	</properties>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>software.amazon.awssdk</groupId>
				<artifactId>bom</artifactId>
				<version>${aws.java.sdk.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>software.amazon.awssdk</groupId>
			<artifactId>sns</artifactId>
		</dependency>
		<dependency>
			<groupId>software.amazon.awssdk</groupId>
			<artifactId>sts</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-spring-boot-starter-jaxrs</artifactId>
			<version>${cxf.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-features-logging</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.jaxrs</groupId>
			<artifactId>jackson-jaxrs-json-provider</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${org.mapstruct.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.xml.ws</groupId>
			<artifactId>jaxws-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.owasp.encoder</groupId>
			<artifactId>encoder</artifactId>
			<version>1.2.3</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
<!--			<scope>test</scope>-->
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<executions>
					<execution>
						<id>get-the-git-infos</id>
						<goals>
							<goal>revision</goal>
						</goals>
					</execution>
					<execution>
						<id>validate-the-git-infos</id>
						<goals>
							<goal>validateRevision</goal>
						</goals>
						<phase>compile</phase>
					</execution>
				</executions>
				<configuration>
					<runOnlyOnce>false</runOnlyOnce>
					<generateGitPropertiesFile>true</generateGitPropertiesFile>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.google.cloud.tools</groupId>
				<artifactId>jib-maven-plugin</artifactId>
				<version>${jib-maven-plugin.version}</version>
				<dependencies>
					<dependency>
						<groupId>com.ibsplc.neoicargo</groupId>
						<artifactId>neo-jib-extension</artifactId>
						<version>1.0.0-SNAPSHOT</version>
					</dependency>
				</dependencies>
				<configuration>
					<pluginExtensions combine.children="append">
						<pluginExtension>
							<implementation>com.ibsplc.neoicargo.jib.MavenMetadataSanitizerExtension</implementation>
							<configuration implementation="com.ibsplc.neoicargo.jib.MetadataConfiguration">
								<filters>
									<filter>/app/libs/*.jar</filter>
								</filters>
							</configuration>
						</pluginExtension>
					</pluginExtensions>
					<from>
						<image>gcr.io/distroless/java:11-debug</image>
					</from>
					<to>
						<image>${docker-repository-url}/${project.artifactId}:${git.commit.id.abbrev}</image>
					</to>
					<container>
						<mainClass>${start-class}</mainClass>
						<ports>
							<port>8080</port>
						</ports>
						<labels>
							<git.branch>${git.branch}</git.branch>
							<git.build.time>${git.build.time}</git.build.time>
							<git.commit.id.abbrev>${git.commit.id.abbrev}</git.commit.id.abbrev>
							<git.commit.message.short>${git.commit.message.short}</git.commit.message.short>
							<git.commit.time>${git.commit.time}</git.commit.time>
							<git.commit.user.email>${git.commit.user.email}</git.commit.user.email>
						</labels>
						<format>Docker</format>
						<creationTime>USE_CURRENT_TIMESTAMP</creationTime>
					</container>
					<allowInsecureRegistries>true</allowInsecureRegistries>
					<containerizingMode>exploded</containerizingMode>
					<disableUpdateChecks>true</disableUpdateChecks>
					<alwaysCacheBaseImage>true</alwaysCacheBaseImage>
				</configuration>
				<executions>
					<execution>
						<id>deploy-docker-image</id>
						<goals>
							<goal>build</goal>
						</goals>
						<phase>deploy</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
		</plugins>

	</build>
	<!--Set from settings-->
	<distributionManagement>
		<repository>
			<id>${repo.release.id}</id>
			<name>Internal Release Repository</name>
			<url>${repo.release.url}</url>
		</repository>
		<snapshotRepository>
			<id>${repo.snapshot.id}</id>
			<name>Internal Snapshot Repository</name>
			<url>${repo.snapshot.url}</url>
		</snapshotRepository>
	</distributionManagement>
</project>
