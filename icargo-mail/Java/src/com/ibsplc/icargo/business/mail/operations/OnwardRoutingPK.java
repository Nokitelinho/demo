/*
 * OnwardRoutingPK.java Created on Jun 27, 2016
 *
 * Copyright 2005 IBS Software Services (P) Ltd. All Rights Reserved.
 *
 * This software is the proprietary information of IBS Software Services (P) Ltd.
 * Use is subject to license terms.
 */
package com.ibsplc.icargo.business.mail.operations;

import java.io.Serializable;

import javax.persistence.Embeddable;

import com.ibsplc.xibase.server.framework.persistence.keygen.Key;
import com.ibsplc.xibase.server.framework.persistence.keygen.KeyCondition;
import com.ibsplc.xibase.server.framework.persistence.keygen.KeyTable;
import com.ibsplc.xibase.server.framework.persistence.keygen.TableKeyGenerator;

/**
 * @author a-5991
 *

 */
@KeyTable(table = "MALFLTCONRTGKEY", keyColumn = "KEYTYP", valueColumn = "MAXSEQNUM")
@TableKeyGenerator(name = "ID_GEN", table = "MALFLTCONRTGKEY", key = "RTG_SER_NUM")
@Embeddable
public class OnwardRoutingPK implements Serializable {
     /**
      *  The companyCode
      */

	 private String companyCode;
     
	/**
	 * The containerNumber
	 */
	

    private String containerNumber;
    
	
	/**
	 * The assignmentPort
	 */

    private String assignmentPort;
    
	/**
	 * The carrierId
	 */

    private int carrierId;
    
    /**
     * The flightNumber
     */

    private String flightNumber;
    
    /**
     * The flightSequenceNumber
     */

    private long flightSequenceNumber;

    /**
     * The legSerialNumber
     */

    private int legSerialNumber;
     
    /**
      *  The routingSerialNumber
      */

     private int routingSerialNumber;
    
     /**
      * The Equals method for this objeect
      * @param other
      * @return
      */
     public boolean equals(Object other) {
 		return (other != null) && ((hashCode() == other.hashCode()));
 	}
     
     /**
      * @return 
      */
 	public int hashCode() {
 	    
 		return new StringBuffer(companyCode).
 		        append(containerNumber).
 		        append(assignmentPort).
               append(carrierId).
               append(flightNumber).
               append(flightSequenceNumber).
               append(legSerialNumber).
 				append(routingSerialNumber).
 				toString().hashCode();
 	}  

	public void setContainerNumber(java.lang.String containerNumber) {
		this.containerNumber=containerNumber;
	}
	@KeyCondition(column = "CONNUM")
	public java.lang.String getContainerNumber() {
		return this.containerNumber;
	}

	public void setFlightNumber(java.lang.String flightNumber) {
		this.flightNumber=flightNumber;
	}
    @KeyCondition(column = "FLTNUM")
	public java.lang.String getFlightNumber() {
		return this.flightNumber;
	}

	public void setCompanyCode(java.lang.String companyCode) {
		this.companyCode=companyCode;
	}
	@KeyCondition(column = "CMPCOD")
	public java.lang.String getCompanyCode() {
		return this.companyCode;
	}

	public void setRoutingSerialNumber(int routingSerialNumber) {
		this.routingSerialNumber=routingSerialNumber;
	}
     @Key(generator = "ID_GEN", startAt = "1")
	public int getRoutingSerialNumber() {
		return this.routingSerialNumber;
	}

	public void setAssignmentPort(java.lang.String assignmentPort) {
		this.assignmentPort=assignmentPort;
	}
	@KeyCondition(column = "ASGPRT")
	public java.lang.String getAssignmentPort() {
		return this.assignmentPort;
	}

	public void setLegSerialNumber(int legSerialNumber) {
		this.legSerialNumber=legSerialNumber;
	}
    @KeyCondition(column = "LEGSERNUM")
	public int getLegSerialNumber() {
		return this.legSerialNumber;
	}

	public void setFlightSequenceNumber(long flightSequenceNumber) {
		this.flightSequenceNumber=flightSequenceNumber;
	}
    @KeyCondition(column = "FLTSEQNUM")
	public long getFlightSequenceNumber() {
		return this.flightSequenceNumber;
	}

	public void setCarrierId(int carrierId) {
		this.carrierId=carrierId;
	}
    @KeyCondition(column = "FLTCARIDR")
	public int getCarrierId() {
		return this.carrierId;
	}

	/**
	 * generated by xibase.tostring plugin at 1 October, 2014 1:13:53 PM IST
	 */
	@Override
	public String toString() {
		StringBuilder sbul = new StringBuilder(226);
		sbul.append("OnwardRoutingPK [ ");
		sbul.append("assignmentPort '").append(this.assignmentPort);
		sbul.append("', carrierId '").append(this.carrierId);
		sbul.append("', companyCode '").append(this.companyCode);
		sbul.append("', containerNumber '").append(this.containerNumber);
		sbul.append("', flightNumber '").append(this.flightNumber);
		sbul.append("', flightSequenceNumber '").append(
				this.flightSequenceNumber);
		sbul.append("', legSerialNumber '").append(this.legSerialNumber);
		sbul.append("', routingSerialNumber '")
				.append(this.routingSerialNumber);
		sbul.append("' ]");
		return sbul.toString();
	}
}
