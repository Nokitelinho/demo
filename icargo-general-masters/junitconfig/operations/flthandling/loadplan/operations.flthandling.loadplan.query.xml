<?xml version="1.0" encoding="UTF-8"?>
<QRY:Definitions xmlns:QRY="http://www.ibsplc.com/xibase/persistence/queries" module="operations.flthandling.loadplan">

    <QRY:Definition>  
	  <QRY:Id>1</QRY:Id>
        <QRY:Source Name="operations.flthandling.loadplan.findLatestLoadPlanForFlights" Type="NATIVE"> 
        <![CDATA[	
        WITH FLTDTL AS
  (SELECT SHPDTL.*,
    CURLEG.STA CURLEGSTA
   FROM
  (SELECT BKGFLT.CMPCOD CMPCOD                    ,
    BKGFLT.FLTORG POL                             ,
    BKGFLT.FLTDST POU                             ,
    BKGFLT.CFRPCS BKDPCS                          ,
    BKGFLT.LWRDCKONE LWRDCKONE                    ,
    BKGFLT.LWRDCKTWO LWRDCKTWO                    ,
    BKGFLT.UPRDCKONE UPRDCKONE                    ,
    BKGFLT.UPRDCKTWO UPRDCKTWO                    ,
      COALESCE(SHPMST.MSTDOCNUM,?) AWBNUM ,
    SHPMST.SHPPFX AWBPFX                          ,
    SHPMST.ORGCOD ORG                             ,
    SHPMST.DSTCOD DST                             ,
    OCI.CNTCOD CNTCOD	                          ,
    OCI.INFIDF INFIDF	                          ,
    OCI.CUSINFIDF CUSINFIDF                       ,
    OCI.CUSINF CUSINF                             ,
	SPLREQ.SERNUM SHPSSRSERNUM					  ,
	SPLREQ.SPLSRVREQ SPLSRVREQ					  ,
    SHPRAT.CMDITMNAM COM                          ,
	 RATULD.ULDNUM ULDTYP                          ,
    SHPRAT.NUMULD NUMULD                          ,
    SHPMST.SCCCOD SCC                             ,
      COALESCE(SHPMST.STDPCS,0) STDPCS ,
      COALESCE(ARPSHP.AVLPCS,0) AVLPCS ,
      COALESCE(ARPSHP.AVLWGT,0) AVLWGT ,
      COALESCE(ARPSHP.AVLVOL,0) AVLVOL ,
      -1 PLNPCS ,
      0 PLNWGT ,
      0 PLNVOL ,
      ? POSNUM ,
      BKGDTL.LODPRY LODPRY ,
	  BKGDTL.ULDGRP BKDULD ,
	  BKGDTL.ULDNUM BKDNUMULD ,
      BKGMST.SHPRMK SHPRMK ,
      BKGMST.SHPRDYTIM LAT						  ,
    ? SHPSRC                                      ,
      COALESCE(SHPMST.DUPNUM,   -1) DUPNUM ,
      COALESCE(SHPMST.SEQNUM,   -1) SEQNUM ,
      COALESCE(SHPMST.DOCOWRIDR,-1) DOCOWRIDR ,
    BKGFLT.SEGSERNUM SEGSERNUM                    ,
    BKGFLT.CFRWGT CFRWGT                          ,
    BKGFLT.CFRVOL CFRVOL                          ,
      0 POSSERNUM ,
      NULL ULDNUM ,
	  NULL ULDREFNUM							  ,
      COALESCE(SHPMST.STDWGT,0) STDWGT ,
      COALESCE(SHPMST.GRSVOL,0) GRSVOL ,
    SHPMST.SHPDES SHPDES                          ,
      NULL LSTUPDTIM ,
    SHPMST.AGTNAM AGTNAM                          ,
    SHPMST.AGTCOD AGTCOD                          ,
    SHPMST.PRDCOD                                 ,
    SHPMST.SHPCOD                                 ,
    SHPMST.PRDNAM                                 ,
    BKGMST.UBRNUM UBRNUM                          ,
      BKGFLT.FLTRMK FLTRMK						  ,
    BKGMST.HDLINF                                 ,
    BKGDIM.PCSLEN                                 ,
    BKGDIM.PCSWID                                 ,
    BKGDIM.PCSHGT								  ,
    BKGDIM.PCS DIMPCS							  ,
	BKGDIM.WGT DIMWGT							  ,
	BKGDIM.VOL DIMVOL							  ,
	bkgdim.DIMSERNUM  DIMSERNUM					  ,
      BKGFLT.FLTCARIDR						      ,
      BKGFLT.FLTNUM							      ,
      BKGFLT.FLTSEQNUM							  ,
      BKGFLT.FLTDAT								  ,
      BKGFLT.SHPRNK SHPRNK						  ,
	  SHPMST.GRSVOLUNT STDVOLCOD				  ,
      SHPMST.STDWGTCOD							  ,
	  NULL SVDSHPSRC, 
	  NULL GRPIDR                                 ,
       (SELECT DISTINCT LISTAGG(WHSSHP.LOCCOD, ', ') 
         WITHIN GROUP (ORDER BY WHSSHP.CMPCOD, WHSSHP.ARPCOD, WHSSHP.DOCOWRIDR, WHSSHP.MSTDOCNUM, WHSSHP.DUPNUM, WHSSHP.SEQNUM) 
         From Whsoprshploc WHSSHP Where 
        WHSSHP.CMPCOD = ARPSHP.CMPCOD 
        AND WHSSHP.DOCOWRIDR = ARPSHP.DOCOWRIDR 
        AND WHSSHP.MSTDOCNUM = ARPSHP.MSTDOCNUM 
        And WHSSHP.DUPNUM = ARPSHP.DUPNUM 
        And WHSSHP.SEQNUM = ARPSHP.SEQNUM 
         And WHSSHP.ARPCOD = ARPSHP.ARPCOD 
         ) LOCCOD 
     FROM CAPBKGMST BKGMST
  INNER JOIN CAPBKGFLTDTL BKGFLT
       ON BKGMST.CMPCOD = BKGFLT.CMPCOD
  AND BKGMST.UBRNUM     = BKGFLT.UBRNUM
  INNER JOIN CAPBKGDTL BKGDTL
       ON BKGMST.CMPCOD = BKGDTL.CMPCOD
  AND BKGMST.UBRNUM     = BKGDTL.UBRNUM
  LEFT OUTER JOIN CAPBKGDIM BKGDIM
       ON BKGDTL.CMPCOD = BKGDIM.CMPCOD
  AND BKGDTL.UBRNUM     = BKGDIM.UBRNUM
  AND BKGDTL.SERNUM     = BKGDIM.SERNUM
    LEFT OUTER JOIN OPRSHPMST SHPMST
       ON BKGMST.CMPCOD = SHPMST.CMPCOD
  AND BKGMST.DOCOWRIDR  = SHPMST.DOCOWRIDR
  AND BKGMST.MSTDOCNUM  = SHPMST.MSTDOCNUM
  AND BKGMST.DUPNUM     = SHPMST.DUPNUM
  AND BKGMST.SEQNUM     = SHPMST.SEQNUM
  LEFT OUTER JOIN OPRSHPOCI OCI
  ON OCI.CMPCOD = SHPMST.CMPCOD
  AND OCI.DOCOWRIDR = SHPMST.DOCOWRIDR
  AND OCI.MSTDOCNUM = SHPMST.MSTDOCNUM
  AND OCI.DUPNUM    = SHPMST.DUPNUM
  AND OCI.SEQNUM    = SHPMST.SEQNUM
  LEFT OUTER JOIN OPRSHPSPLSRVREQ SPLREQ
  ON SPLREQ.CMPCOD     = SHPMST.CMPCOD
  AND SPLREQ.DOCOWRIDR = SHPMST.DOCOWRIDR
  AND SPLREQ.MSTDOCNUM = SHPMST.MSTDOCNUM
  AND SPLREQ.DUPNUM    = SHPMST.DUPNUM
  AND SPLREQ.SEQNUM    = SHPMST.SEQNUM
  LEFT OUTER JOIN OPRSHPRATDTL SHPRAT
       ON SHPMST.CMPCOD = SHPRAT.CMPCOD
  AND SHPMST.DOCOWRIDR  = SHPRAT.DOCOWRIDR
  AND SHPMST.MSTDOCNUM  = SHPRAT.MSTDOCNUM
  AND SHPMST.DUPNUM     = SHPRAT.DUPNUM
  AND SHPMST.SEQNUM     = SHPRAT.SEQNUM
  left outer join OPRSHPRATULD  ratuld
  on SHPRAT.CMPCOD=ratuld.CMPCOD AND
		SHPRAT.DOCOWRIDR=ratuld.DOCOWRIDR AND
		SHPRAT.MSTDOCNUM=ratuld.MSTDOCNUM AND
		SHPRAT.DUPNUM =ratuld.DUPNUM AND
		SHPRAT.SEQNUM=ratuld.SEQNUM AND
		SHPRAT.RATLINSERNUM=ratuld.RATLINSERNUM
  LEFT OUTER JOIN OPRARPSHP ARPSHP
       ON SHPMST.CMPCOD = ARPSHP.CMPCOD
  AND SHPMST.DOCOWRIDR  = ARPSHP.DOCOWRIDR
  AND SHPMST.MSTDOCNUM  = ARPSHP.MSTDOCNUM
  AND SHPMST.DUPNUM     = ARPSHP.DUPNUM
  AND SHPMST.SEQNUM     = ARPSHP.SEQNUM
  AND ARPSHP.ARPCOD     = BKGFLT.FLTORG
  WHERE BKGFLT.FLTBKGSTA = ?
  AND BKGFLT.CMPCOD    = ?
  AND BKGFLT.FLTCARIDR = ?
  AND BKGFLT.FLTNUM    = ?
  AND BKGFLT.FLTSEQNUM = ?
    AND BKGFLT.FLTORG      = ?
    UNION ALL
   
   SELECT LODSHP.CMPCOD CMPCOD       ,
    LODSHP.SEGORG POL                ,
    LODSHP.SEGDST POU                ,
    0 BKDPCS                         ,
    0 LWRDCKONE                      ,
    0 LWRDCKTWO                      ,
    0 UPRDCKONE                      ,
    0 UPRDCKTWO                      ,
    LODSHP.MSTDOCNUM AWBNUM ,
    SHPMST.SHPPFX AWBPFX             ,
    SHPMST.ORGCOD ORG                ,
    SHPMST.DSTCOD DST                ,
    OCI.CNTCOD CNTCOD	             ,
    OCI.INFIDF INFIDF	             , 
    OCI.CUSINFIDF CUSINFIDF          ,
    OCI.CUSINF CUSINF                ,
    SPLREQ.SERNUM SHPSSRSERNUM       ,
	SPLREQ.SPLSRVREQ SPLSRVREQ       ,
    SHPRAT.CMDITMNAM COM             ,
     ratuld.ULDNUM ULDTYP,
    0                                ,
    SHPMST.SCCCOD SCC                ,
    SHPMST.STDPCS STDPCS             ,
    ARPSHP.AVLPCS AVLPCS             ,
    ARPSHP.AVLWGT AVLWGT             ,
    ARPSHP.AVLVOL AVLVOL             ,
    LODSHP.PLNPCS PLNPCS             ,
    LODSHP.PLNWGT PLNWGT             ,
    LODSHP.PLNVOL PLNVOL             ,
    COALESCE(LODSHP.POSNUM ,?) POSNUM,
    LODSHP.LODPRY LODPRY             ,
	NULL BKDULD,
	0 BKDNUMULD,
    LODSHP.SHPRMK SHPRMK             ,
      NULL LAT						 ,
    ? SHPSRC                         ,
      LODSHP.DUPNUM DUPNUM ,
      LODSHP.SEQNUM SEQNUM ,
      LODSHP.DOCOWNIDR DOCOWRIDR ,
    LODSHP.SEGSERNUM SEGSERNUM       ,
    0 CFRWGT                         ,
    0 CFRVOL                         ,
    LODSHP.POSSERNUM POSSERNUM       ,
    LODSHP.ULDNUM ULDNUM             ,
	LODSHP.ULDREFNUM ULDREFNUM       ,
    SHPMST.STDWGT STDWGT             ,
    SHPMST.GRSVOL GRSVOL             ,
    SHPMST.SHPDES SHPDES             ,
    LODSHP.LSTUPDTIM LSTUPDTIM       ,
    SHPMST.AGTNAM AGTNAM             ,
    SHPMST.AGTCOD AGTCOD             ,
	    SHPMST.PRDCOD                      ,
    NULL SHPCOD                      ,
    SHPMST.PRDNAM                      ,
    LODSHP.UBRNUM UBRNUM ,
    LODSHP.TBURMK FLTRMK             ,
    NULL HDLINF                      ,
    NULL PCSLEN                      ,
    NULL PCSWID                      ,
    NULL PCSHGT					     ,
    NULL DIMPCS						 ,
	NULL DIMWGT						 ,
	NULL DIMVOL						 ,
	NULL DIMSERNUM					 ,
      LODSHP.FLTCARIDR				 ,
      LODSHP.FLTNUM					 ,
      LODSHP.FLTSEQNUM				 ,
      LODPOL.FLTDAT					 ,
      NULL SHPRNK					 ,
      SHPMST.GRSVOLUNT STDVOLCOD	 ,
      SHPMST.STDWGTCOD				 ,
	  LODSHP.SHPSRC SVDSHPSRC, 
	  LODSHP.GRPIDR GRPIDR,
       (SELECT DISTINCT LISTAGG(WHSSHP.LOCCOD, ', ') 
         WITHIN GROUP (ORDER BY WHSSHP.CMPCOD, WHSSHP.ARPCOD, WHSSHP.DOCOWRIDR, WHSSHP.MSTDOCNUM, WHSSHP.DUPNUM, WHSSHP.SEQNUM) 
         From Whsoprshploc WHSSHP Where 
        WHSSHP.CMPCOD = ARPSHP.CMPCOD 
        AND WHSSHP.DOCOWRIDR = ARPSHP.DOCOWRIDR 
        AND WHSSHP.MSTDOCNUM = ARPSHP.MSTDOCNUM 
        And WHSSHP.DUPNUM = ARPSHP.DUPNUM 
        And WHSSHP.SEQNUM = ARPSHP.SEQNUM 
         And WHSSHP.ARPCOD = ARPSHP.ARPCOD 
         ) LOCCOD 
     FROM OPRLODPLNSHP LODSHP
  INNER JOIN OPRLODPLNPOL LODPOL
       ON LODSHP.CMPCOD = LODPOL.CMPCOD
  AND LODSHP.FLTCARIDR  = LODPOL.FLTCARIDR
  AND LODSHP.FLTNUM     = LODPOL.FLTNUM
  AND LODSHP.FLTSEQNUM  = LODPOL.FLTSEQNUM
  AND LODPOL.POL        = ?
    LEFT OUTER JOIN OPRSHPMST SHPMST
    ON LODSHP.CMPCOD     = SHPMST.CMPCOD
    AND LODSHP.DOCOWNIDR = SHPMST.DOCOWRIDR
    AND LODSHP.MSTDOCNUM = SHPMST.MSTDOCNUM
    AND LODSHP.DUPNUM    = SHPMST.DUPNUM
    AND LODSHP.SEQNUM    = SHPMST.SEQNUM
  LEFT OUTER JOIN OPRSHPOCI OCI
    ON OCI.CMPCOD = SHPMST.CMPCOD
    AND OCI.DOCOWRIDR = SHPMST.DOCOWRIDR
    AND OCI.MSTDOCNUM = SHPMST.MSTDOCNUM
    AND OCI.DUPNUM    = SHPMST.DUPNUM
    AND OCI.SEQNUM    = SHPMST.SEQNUM
  LEFT OUTER JOIN OPRSHPSPLSRVREQ SPLREQ
   ON SPLREQ.CMPCOD     = SHPMST.CMPCOD
   AND SPLREQ.DOCOWRIDR = SHPMST.DOCOWRIDR
   AND SPLREQ.MSTDOCNUM = SHPMST.MSTDOCNUM
   AND SPLREQ.DUPNUM    = SHPMST.DUPNUM
   AND SPLREQ.SEQNUM    = SHPMST.SEQNUM
  LEFT OUTER JOIN OPRSHPRATDTL SHPRAT
       ON SHPMST.CMPCOD = SHPRAT.CMPCOD
  AND SHPMST.DOCOWRIDR  = SHPRAT.DOCOWRIDR
  AND SHPMST.MSTDOCNUM  = SHPRAT.MSTDOCNUM
  AND SHPMST.DUPNUM     = SHPRAT.DUPNUM
  AND SHPMST.SEQNUM     = SHPRAT.SEQNUM
  left outer join OPRSHPRATULD  ratuld
  on SHPRAT.CMPCOD=ratuld.CMPCOD AND
		SHPRAT.DOCOWRIDR=ratuld.DOCOWRIDR AND
		SHPRAT.MSTDOCNUM=ratuld.MSTDOCNUM AND
		SHPRAT.DUPNUM =ratuld.DUPNUM AND
		SHPRAT.SEQNUM=ratuld.SEQNUM AND
		SHPRAT.RATLINSERNUM=ratuld.RATLINSERNUM
  LEFT OUTER JOIN OPRARPSHP ARPSHP
       ON SHPMST.CMPCOD = ARPSHP.CMPCOD
  AND SHPMST.DOCOWRIDR  = ARPSHP.DOCOWRIDR
  AND SHPMST.MSTDOCNUM  = ARPSHP.MSTDOCNUM
  AND SHPMST.DUPNUM     = ARPSHP.DUPNUM
  AND SHPMST.SEQNUM     = ARPSHP.SEQNUM
  AND LODPOL.POL        = ARPSHP.ARPCOD
    WHERE LODSHP.CMPCOD  = ?
  AND LODSHP.FLTCARIDR  = ?
  AND LODSHP.FLTNUM     = ?
  AND LODSHP.FLTSEQNUM  = ?
  
    
    UNION ALL
   
   SELECT BKGFLT.CMPCOD CMPCOD                   ,
    PREFLT.POL POL                               ,
    PREFLT.POU POU                               ,
    0 BKDPCS                                     ,
    0 LWRDCKONE                                  ,
    0 LWRDCKTWO                                  ,
    0 UPRDCKONE                                  ,
    0 UPRDCKTWO                                  ,
    SHPMST.MSTDOCNUM AWBNUM                      ,
    SHPMST.SHPPFX AWBPFX                         ,
    SHPMST.ORGCOD ORG                            ,
    SHPMST.DSTCOD DST                            ,
    OCI.CNTCOD CNTCOD	                         ,
    OCI.INFIDF INFIDF	                         ,
    OCI.CUSINFIDF CUSINFIDF                      ,
    OCI.CUSINF CUSINF                            ,	
	SPLREQ.SERNUM SHPSSRSERNUM                   ,
	SPLREQ.SPLSRVREQ SPLSRVREQ                   ,
    SHPRAT.CMDITMNAM COM                         ,
	RATULD.ULDNUM ULDTYP                          ,
    SHPRAT.NUMULD NUMULD                         ,
    SHPMST.SCCCOD SCC                            ,
    SHPMST.STDPCS STDPCS                         ,
    ARPSHP.AVLPCS AVLPCS                         ,
    ARPSHP.AVLWGT AVLWGT                         ,
    ARPSHP.AVLVOL AVLVOL                         ,
      -1 PLNPCS ,
      0 PLNWGT ,
      0 PLNVOL ,
      ? POSNUM ,
      BKGDTL.LODPRY LODPRY						 ,
	  BKGDTL.ULDGRP BKDULD ,
	  BKGDTL.ULDNUM BKDNUMULD ,
      NULL SHPRMK ,
      NULL LAT									 ,
    ? SHPSRC                                     ,
    SHPMST.DUPNUM DUPNUM                         ,
    SHPMST.SEQNUM SEQNUM                         ,
    SHPMST.DOCOWRIDR DOCOWRIDR                   ,
    PREFLT.SEGSERNUM SEGSERNUM                   ,
    0 CFRWGT                                     ,
    0 CFRVOL                                     ,
      0 POSSERNUM ,
      NULL ULDNUM ,
	  NULL ULDREFNUM ,
    SHPMST.STDWGT STDWGT                         ,
    SHPMST.GRSVOL GRSVOL                         ,
    SHPMST.SHPDES SHPDES                         ,
      NULL LSTUPDTIM ,
    SHPMST.AGTNAM AGTNAM                         ,
    SHPMST.AGTCOD AGTCOD                         ,
	  SHPMST.PRDCOD                                ,
    NULL SHPCOD                                  ,
	  SHPMST.PRDNAM                                ,
      BKGFLT.UBRNUM                                ,
      BKGFLT.FLTRMK FLTRMK ,
    NULL HDLINF                                  ,
      BKGDIM.PCSLEN                                ,
      BKGDIM.PCSWID                                ,
      BKGDIM.PCSHGT								   ,
      BKGDIM.PCS DIMPCS							  ,
	  BKGDIM.WGT DIMWGT							  ,
	  BKGDIM.VOL DIMVOL							 ,
	  BKGDIM.DIMSERNUM      ,
      BKGFLT.FLTCARIDR							 ,
      BKGFLT.FLTNUM								 ,
      BKGFLT.FLTSEQNUM 							 ,
      BKGFLT.FLTDAT								 ,
      BKGFLT.SHPRNK SHPRNK						 ,
      SHPMST.GRSVOLUNT STDVOLCOD				 ,
      SHPMST.STDWGTCOD							 ,
	  NULL SVDSHPSRC, 
	  NULL GRPIDR,
       (SELECT DISTINCT LISTAGG(WHSSHP.LOCCOD, ', ') 
         WITHIN GROUP (ORDER BY WHSSHP.CMPCOD, WHSSHP.ARPCOD, WHSSHP.DOCOWRIDR, WHSSHP.MSTDOCNUM, WHSSHP.DUPNUM, WHSSHP.SEQNUM) 
         From Whsoprshploc WHSSHP Where 
        WHSSHP.CMPCOD = ARPSHP.CMPCOD 
        AND WHSSHP.DOCOWRIDR = ARPSHP.DOCOWRIDR 
        AND WHSSHP.MSTDOCNUM = ARPSHP.MSTDOCNUM 
        And WHSSHP.DUPNUM = ARPSHP.DUPNUM 
        And WHSSHP.SEQNUM = ARPSHP.SEQNUM 
         And WHSSHP.ARPCOD = ARPSHP.ARPCOD 
         ) LOCCOD 
     FROM CAPBKGFLTDTL BKGFLT
  INNER JOIN CAPBKGPREFLT PREFLT
       ON PREFLT.CMPCOD = BKGFLT.CMPCOD
  AND PREFLT.SEGSERNUM  = BKGFLT.SEGSERNUM
  AND PREFLT.FLTCARIDR  = BKGFLT.FLTCARIDR
  AND PREFLT.FLTNUM     = BKGFLT.FLTNUM
  AND PREFLT.FLTSEQNUM  = BKGFLT.FLTSEQNUM
  AND PREFLT.UBRNUM     = BKGFLT.UBRNUM
  INNER JOIN CAPBKGDTL BKGDTL
       ON BKGFLT.CMPCOD = BKGDTL.CMPCOD
  AND BKGFLT.UBRNUM     = BKGDTL.UBRNUM
  LEFT OUTER JOIN CAPBKGDIM BKGDIM
       ON BKGDTL.CMPCOD = BKGDIM.CMPCOD
  AND BKGDTL.UBRNUM     = BKGDIM.UBRNUM
  AND BKGDTL.SERNUM     = BKGDIM.SERNUM
  INNER JOIN OPRSHPMST SHPMST
       ON BKGFLT.CMPCOD = SHPMST.CMPCOD
  AND BKGFLT.DOCOWRIDR  = SHPMST.DOCOWRIDR
  AND BKGFLT.MSTDOCNUM  = SHPMST.MSTDOCNUM
  AND BKGFLT.DUPNUM     = SHPMST.DUPNUM
  AND BKGFLT.SEQNUM     = SHPMST.SEQNUM
  LEFT OUTER JOIN OPRSHPOCI OCI
  ON OCI.CMPCOD = SHPMST.CMPCOD
  AND OCI.DOCOWRIDR = SHPMST.DOCOWRIDR
  AND OCI.MSTDOCNUM = SHPMST.MSTDOCNUM
  AND OCI.DUPNUM    = SHPMST.DUPNUM
  AND OCI.SEQNUM    = SHPMST.SEQNUM
  LEFT OUTER JOIN OPRSHPSPLSRVREQ SPLREQ
  ON SPLREQ.CMPCOD     = SHPMST.CMPCOD
  AND SPLREQ.DOCOWRIDR = SHPMST.DOCOWRIDR
  AND SPLREQ.MSTDOCNUM = SHPMST.MSTDOCNUM
  AND SPLREQ.DUPNUM    = SHPMST.DUPNUM
  AND SPLREQ.SEQNUM    = SHPMST.SEQNUM
  LEFT OUTER JOIN OPRSHPRATDTL SHPRAT
       ON SHPMST.CMPCOD = SHPRAT.CMPCOD
  AND SHPMST.DOCOWRIDR  = SHPRAT.DOCOWRIDR
  AND SHPMST.MSTDOCNUM  = SHPRAT.MSTDOCNUM
  AND SHPMST.DUPNUM     = SHPRAT.DUPNUM
  AND SHPMST.SEQNUM     = SHPRAT.SEQNUM
  left outer join OPRSHPRATULD  ratuld
  on SHPRAT.CMPCOD=ratuld.CMPCOD AND
		SHPRAT.DOCOWRIDR=ratuld.DOCOWRIDR AND
		SHPRAT.MSTDOCNUM=ratuld.MSTDOCNUM AND
		SHPRAT.DUPNUM =ratuld.DUPNUM AND
		SHPRAT.SEQNUM=ratuld.SEQNUM AND
		SHPRAT.RATLINSERNUM=ratuld.RATLINSERNUM	
  LEFT OUTER JOIN OPRARPSHP ARPSHP
       ON SHPMST.CMPCOD = ARPSHP.CMPCOD
  AND SHPMST.DOCOWRIDR  = ARPSHP.DOCOWRIDR
  AND SHPMST.MSTDOCNUM  = ARPSHP.MSTDOCNUM
  AND SHPMST.DUPNUM     = ARPSHP.DUPNUM
  AND SHPMST.SEQNUM     = ARPSHP.SEQNUM
  AND ARPSHP.ARPCOD     = PREFLT.POL
    WHERE PREFLT.CMPCOD     = ?
  AND PREFLT.PREFLTCARIDR = ?
  AND PREFLT.PREFLTNUM    = ?
  AND PREFLT.PREFLTSEQNUM = ?
    AND BKGFLT.FLTORG       = ?
   
    ) SHPDTL
  INNER JOIN FLTOPRLEG CURLEG
  ON CURLEG.FLTCARIDR  = SHPDTL.FLTCARIDR
  AND CURLEG.FLTNUM    = SHPDTL.FLTNUM
  AND CURLEG.FLTSEQNUM = SHPDTL.FLTSEQNUM
  AND CURLEG.LEGORG    = SHPDTL.POL
  AND CURLEG.CMPCOD    = SHPDTL.CMPCOD
  )
SELECT SUBQRY.*,
  BKGFLT.FLTCARCOD CONFLTCARCOD,
  BKGFLT.FLTNUM CONFLTNUM,
  BKGFLT.FLTDAT CONFLTDAT,
  OPRLEG.STD CONFLTSTD,
  NULL INCFLTATA,
  NULL INCFLTETA,
  NULL INCFLTSTA,
  NULL INCFLTNUM,
  NULL INCFLTDAT,
  NULL INCFLTSEQNUM,
  NULL INCFLTORG,
  NULL INCFLTCARCOD,
  NULL INCFLTSEGNUM
FROM FLTDTL SUBQRY
LEFT OUTER JOIN CAPBKGFLTDTL BKGFLT
ON BKGFLT.CMPCOD     = SUBQRY.CMPCOD
AND BKGFLT.DOCOWRIDR = SUBQRY.DOCOWRIDR
AND BKGFLT.MSTDOCNUM = SUBQRY.AWBNUM
AND BKGFLT.DUPNUM    = SUBQRY.DUPNUM
AND BKGFLT.SEQNUM    = SUBQRY.SEQNUM
AND BKGFLT.FLTORG    = SUBQRY.POU
AND BKGFLT.FLTBKGSTA NOT IN ( 'X','R')
LEFT OUTER JOIN FLTOPRLEG OPRLEG
ON OPRLEG.FLTCARIDR       = BKGFLT.FLTCARIDR
AND OPRLEG.FLTNUM         = BKGFLT.FLTNUM
AND OPRLEG.FLTSEQNUM      = BKGFLT.FLTSEQNUM
AND OPRLEG.LEGORG         = BKGFLT.FLTORG
AND OPRLEG.CMPCOD         = BKGFLT.CMPCOD
WHERE SUBQRY.AWBNUM      IS NOT NULL

UNION ALL
SELECT SUBQRY.*,
  NULL CONFLTCARCOD,
  NULL CONFLTNUM,
  NULL CONFLTDAT,
  NULL CONFLTSTD,
  OPRLEG.ATA INCFLTATA,
  OPRLEG.ETA INCFLTETA,
  OPRLEG.STA INCFLTSTA,
  BKGFLT.FLTNUM INCFLTNUM,
  BKGFLT.FLTDAT INCFLTDAT,
  BKGFLT.FLTSEQNUM INCFLTSEQNUM,
  BKGFLT.FLTORG INCFLTORG,
  BKGFLT.FLTCARCOD INCFLTCARCOD,
  BKGFLT.FLTSEGNUM INCFLTSEGNUM
FROM FLTDTL SUBQRY
LEFT OUTER JOIN CAPBKGFLTDTL BKGFLT
ON BKGFLT.CMPCOD     = SUBQRY.CMPCOD
AND BKGFLT.DOCOWRIDR = SUBQRY.DOCOWRIDR
AND BKGFLT.MSTDOCNUM = SUBQRY.AWBNUM
AND BKGFLT.DUPNUM    = SUBQRY.DUPNUM
AND BKGFLT.SEQNUM    = SUBQRY.SEQNUM
AND BKGFLT.FLTDST    = SUBQRY.POL
AND BKGFLT.FLTBKGSTA NOT IN ( 'X','R') 
LEFT OUTER JOIN FLTOPRLEG OPRLEG
ON OPRLEG.FLTCARIDR  = BKGFLT.FLTCARIDR
AND OPRLEG.FLTNUM    = BKGFLT.FLTNUM
AND OPRLEG.FLTSEQNUM = BKGFLT.FLTSEQNUM
AND OPRLEG.LEGORG    = BKGFLT.FLTORG
AND OPRLEG.CMPCOD    = BKGFLT.CMPCOD
WHERE SUBQRY.AWBNUM IS NOT NULL 
AND NVL(BKGFLT.FLTBKGSTA,'NULL') NOT IN ( 'X','R') 
UNION ALL
SELECT SUBQRY.*,
  BKGFLT.FLTCARCOD CONFLTCARCOD,
  BKGFLT.FLTNUM CONFLTNUM,
  BKGFLT.FLTDAT CONFLTDAT,
  OPRLEG.STD CONFLTSTD,
  NULL INCFLTATA,
  NULL INCFLTETA,
  NULL INCFLTSTA,
  NULL INCFLTNUM,
  NULL INCFLTDAT,
  NULL INCFLTSEQNUM,
  NULL INCFLTORG,
  NULL INCFLTCARCOD,
  NULL INCFLTSEGNUM
FROM FLTDTL SUBQRY
LEFT OUTER JOIN CAPBKGFLTDTL BKGFLT
ON BKGFLT.CMPCOD  = SUBQRY.CMPCOD
AND BKGFLT.UBRNUM = SUBQRY.UBRNUM
AND BKGFLT.FLTORG = SUBQRY.POU
AND BKGFLT.FLTBKGSTA NOT IN ( 'X','R')
LEFT OUTER JOIN FLTOPRLEG OPRLEG
ON OPRLEG.FLTCARIDR       = BKGFLT.FLTCARIDR
AND OPRLEG.FLTNUM         = BKGFLT.FLTNUM
AND OPRLEG.FLTSEQNUM      = BKGFLT.FLTSEQNUM
AND OPRLEG.LEGORG         = BKGFLT.FLTORG
AND OPRLEG.CMPCOD         = BKGFLT.CMPCOD
WHERE SUBQRY.AWBNUM      IS NULL

UNION ALL
SELECT SUBQRY.*,
  NULL CONFLTCARCOD,
  NULL CONFLTNUM,
  NULL CONFLTDAT,
  NULL CONFLTSTD,
  OPRLEG.ATA INCFLTATA,
  OPRLEG.ETA INCFLTETA,
  OPRLEG.STA INCFLTSTA,
  BKGFLT.FLTNUM INCFLTNUM,
  BKGFLT.FLTDAT INCFLTDAT,
  BKGFLT.FLTSEQNUM INCFLTSEQNUM,
  BKGFLT.FLTORG INCFLTORG,
  BKGFLT.FLTCARCOD INCFLTCARCOD,
  BKGFLT.FLTSEGNUM INCFLTSEGNUM
FROM FLTDTL SUBQRY
LEFT OUTER JOIN CAPBKGFLTDTL BKGFLT
ON BKGFLT.CMPCOD  = SUBQRY.CMPCOD
AND BKGFLT.UBRNUM = SUBQRY.UBRNUM
AND BKGFLT.FLTDST = SUBQRY.POL
LEFT OUTER JOIN FLTOPRLEG OPRLEG
ON OPRLEG.FLTCARIDR  = BKGFLT.FLTCARIDR
AND OPRLEG.FLTNUM    = BKGFLT.FLTNUM
AND OPRLEG.FLTSEQNUM = BKGFLT.FLTSEQNUM
AND OPRLEG.LEGORG    = BKGFLT.FLTORG
AND OPRLEG.CMPCOD    = BKGFLT.CMPCOD
WHERE SUBQRY.AWBNUM IS NULL
   ]]>
   
        </QRY:Source>
    </QRY:Definition>
    
    <QRY:Definition>  
	  <QRY:Id>2</QRY:Id>
        <QRY:Source Name="operations.flthandling.loadplan.findUldAwbsDetails" Type="NATIVE"> 
			SELECT LODULD.SEGORG POL,
				  LODULD.SEGDST POU,
				  LODULD.ULDNUM LODULD,
				  SEGULDSHP.ULDNUM SEGULD,
				  ULDSHP.ULDNUM SHPULD,
				  SHPMST.MSTDOCNUM AWBNUM,
				  SHPMST.SHPPFX AWBPFX,
				  SHPMST.SEQNUM SEQNUM,
				  SHPMST.DOCOWRIDR DOCOWRIDR,
				  SHPMST.DUPNUM DUPNUM,
				  SHPMST.ORGCOD ORG,
				  SHPMST.SHPDES SHPDES,
				  SHPMST.DSTCOD DST,
				  SHPRAT.CMDITMNAM COM,
				  SHPMST.STDPCS STDPCS,
				  SEGULDSHP.MFTPCS MFTPCS,
				  ULDSHP.NUMPCS NUMPCS,
				  LODULD.LODPRY LODPRY,
				  LODULD.POSNUM POSNUM,
				  LODULD.ACTULDNUM ACTULDNUM,
				  SHPMST.STDWGT STDWGT,
				  SHPMST.GRSVOL GRSVOL,
				  SEGULDSHP.MFTWGT MFTWGT,
				  SEGULDSHP.MFTVOL MFTVOL,
				  ULDSHP.WGT WGT,
				  ULDSHP.VOL VOL,
				  LODULD.LSTUPDTIM LSTUPDTIM,
				  LODULD.CMPCOD CMPCOD,
				  LODULD.TRNSHPDTL,
				  LODULD.FLTCARIDR,
				  LODULD.FLTNUM,
				  LODULD.FLTSEQNUM,
				  LODULD.ULDREFNUM,
				  LODULD.SEGSERNUM
				FROM OPRLODPLNULD LODULD
				INNER JOIN OPRLODPLNPOL LODPOL
				ON LODULD.CMPCOD     = LODPOL.CMPCOD
				AND LODULD.FLTCARIDR = LODPOL.FLTCARIDR
				AND LODULD.FLTNUM    = LODPOL.FLTNUM
				AND LODULD.FLTSEQNUM = LODPOL.FLTSEQNUM
				LEFT OUTER JOIN OPRSEGULDSHP SEGULDSHP
				ON LODULD.CMPCOD     = SEGULDSHP.CMPCOD
				AND LODULD.FLTCARIDR = SEGULDSHP.FLTCARIDR
				AND LODULD.FLTNUM    = SEGULDSHP.FLTNUM
				AND LODULD.FLTSEQNUM = SEGULDSHP.FLTSEQNUM
				AND LODULD.ACTULDNUM    = SEGULDSHP.ULDNUM
				LEFT OUTER JOIN OPRFLTSEG FLTSEG
				ON LODULD.CMPCOD     = FLTSEG.CMPCOD
				AND LODULD.FLTCARIDR = FLTSEG.FLTCARIDR
				AND LODULD.FLTNUM    = FLTSEG.FLTNUM
				AND LODULD.FLTSEQNUM = FLTSEG.FLTSEQNUM
				AND LODULD.SEGORG    = FLTSEG.POL
				AND LODULD.SEGDST    = FLTSEG.POU
				LEFT OUTER JOIN OPRULDSHP ULDSHP
				ON LODULD.CMPCOD  = ULDSHP.CMPCOD
				AND LODULD.ACTULDNUM = ULDSHP.ULDNUM
				AND ULDSHP.ARPCOD = ?
			LEFT OUTER JOIN OPRLODPLNSHP PLNSHP 
        ON LODULD.CMPCOD = PLNSHP.CMPCOD
		AND LODULD.FLTCARIDR = PLNSHP.FLTCARIDR
		AND LODULD.FLTNUM = PLNSHP.FLTNUM 
		AND LODULD.FLTSEQNUM = PLNSHP.FLTSEQNUM
		AND LODULD.SEGORG = PLNSHP.SEGORG
		AND LODULD.SEGDST  = PLNSHP.SEGDST
				AND LODULD.ULDREFNUM = PLNSHP.ULDREFNUM
		
		LEFT OUTER JOIN OPRSHPMST SHPMST
		 ON PLNSHP.CMPCOD = SHPMST.CMPCOD
       AND PLNSHP.DOCOWNIDR = SHPMST.DOCOWRIDR
        AND PLNSHP.MSTDOCNUM = SHPMST.MSTDOCNUM
        AND PLNSHP.DUPNUM = SHPMST.DUPNUM
        AND PLNSHP.SEQNUM = SHPMST.SEQNUM	 
				LEFT OUTER JOIN OPRSHPRATDTL SHPRAT
				ON SHPMST.CMPCOD     = SHPRAT.CMPCOD
				AND SHPMST.DOCOWRIDR = SHPRAT.DOCOWRIDR
				AND SHPMST.MSTDOCNUM = SHPRAT.MSTDOCNUM
				AND SHPMST.DUPNUM    = SHPRAT.DUPNUM
				AND SHPMST.SEQNUM    = SHPRAT.SEQNUM
				WHERE LODPOL.POL     = ?
				AND LODULD.CMPCOD    = ?
				AND LODULD.FLTCARIDR = ?
				AND LODULD.FLTNUM    = ?
				AND LODULD.FLTSEQNUM = ?
				ORDER BY LODULD.SEGORG ,
				  LODULD.SEGDST,
				  LODULD.ULDNUM 
   
        </QRY:Source>
    </QRY:Definition>    
    
        <QRY:Definition>  
	  <QRY:Id>3</QRY:Id>
        <QRY:Source Name="operations.flthandling.loadplan.findUldAwbsFromLoadPlan" Type="NATIVE"> 
			
  SELECT 
  LODSHP.CMPCOD CMPCOD,
  LODSHP.SEGORG POL,
  LODSHP.SEGDST POU,
  LODSHP.ULDNUM LODULD,
  SHPMST.MSTDOCNUM AWBNUM,
  SHPMST.SHPPFX AWBPFX,
  SHPMST.SEQNUM SEQNUM,
  SHPMST.DOCOWRIDR DOCOWRIDR,
  SHPMST.DUPNUM DUPNUM,
  SHPMST.ORGCOD ORG,
  SHPMST.SHPDES SHPDES,
  SHPMST.DSTCOD DST,
  SHPRAT.CMDITMNAM COM,
  SHPMST.STDPCS STDPCS,
  LODSHP.PLNPCS PLNPCS,
  LODSHP.SEGSERNUM SEGSERNUM,
  LODSHP.PLNWGT PLNWGT,
  LODSHP.PLNVOL PLNVOL,
  SHPMST.STDWGT STDWGT,
  SHPMST.GRSVOL GRSVOL,
  LODSHP.POSSERNUM POSSERNUM,
  LODSHP.LSTUPDTIM LSTUPDTIM,
  LODSHP.SHPSRC SHPSRC,
  LODSHP.PREFLG PREFLG,
  LODSHP.ULDREFNUM ULDREFNUM,
  LODSHP.POSNUM
FROM OPRLODPLNSHP LODSHP
INNER JOIN OPRLODPLNPOL LODPOL
ON LODSHP.CMPCOD     = LODPOL.CMPCOD
AND LODSHP.FLTCARIDR = LODPOL.FLTCARIDR
AND LODSHP.FLTNUM    = LODPOL.FLTNUM
AND LODSHP.FLTSEQNUM = LODPOL.FLTSEQNUM
LEFT OUTER JOIN OPRSHPMST SHPMST
ON SHPMST.CMPCOD     = LODSHP.CMPCOD
AND SHPMST.DOCOWRIDR = LODSHP.DOCOWNIDR
AND SHPMST.MSTDOCNUM = LODSHP.MSTDOCNUM
AND SHPMST.DUPNUM    = LODSHP.DUPNUM
AND SHPMST.SEQNUM    = LODSHP.SEQNUM
LEFT OUTER JOIN OPRSHPRATDTL SHPRAT
ON SHPMST.CMPCOD     = SHPRAT.CMPCOD
AND SHPMST.DOCOWRIDR = SHPRAT.DOCOWRIDR
AND SHPMST.MSTDOCNUM = SHPRAT.MSTDOCNUM
AND SHPMST.DUPNUM    = SHPRAT.DUPNUM
AND SHPMST.SEQNUM    = SHPRAT.SEQNUM
WHERE LODPOL.POL     = ?
AND LODSHP.CMPCOD    = ?
AND LODSHP.FLTCARIDR = ?
AND LODSHP.FLTNUM    = ?
AND LODSHP.FLTSEQNUM = ?
AND LODSHP.ULDREFNUM IN 
        </QRY:Source>
    </QRY:Definition>  
    
    <QRY:Definition>  
	  <QRY:Id>4</QRY:Id>
        <QRY:Source Name="operations.flthandling.loadplan.findLoadPlanULDConfigurations" Type="NATIVE"> 
			
			SELECT CFG.ULDTYP ULDTYP,
			CFG.NUMULD NUMULD,
			CFG.POSTYP POSTYP,
				   CFG.CFGSERNUM,
			CFG.CMPCOD,
			CFG.FLTCARIDR,
			CFG.FLTNUM,
			       CFG.FLTSEQNUM,
			CFG.MAXVOL,
			CFG.MAXWGT
			FROM OPRLODPLNPOL POL,
			OPRLODPLNCFG CFG
			WHERE POL.CMPCOD  = CFG.CMPCOD
			AND POL.FLTCARIDR = CFG.FLTCARIDR
			AND POL.FLTNUM    = CFG.FLTNUM
			AND POL.FLTSEQNUM = CFG.FLTSEQNUM
			AND POL.CFGSERNUM = CFG.CFGSERNUM
			AND POL.CMPCOD    = ?
			AND POL.FLTCARIDR = ?
			AND POL.FLTNUM    = ?
			AND POL.FLTSEQNUM = ?
			
        </QRY:Source>
    </QRY:Definition>  
     
    <QRY:Definition>  
	  <QRY:Id>5</QRY:Id>
        <QRY:Source Name="operations.flthandling.loadplan.findPositionDetails" Type="NATIVE"> 
		<![CDATA[	
  SELECT POS.POS POS,
  POS.LODPRY LODPRY,
  POS.POL DTLPOL,
  POS.CMPCOD,
  POS.FLTCARIDR,
  POS.FLTNUM,
  POS.POU,
  POS.FLTSEQNUM,
  POS.ISSULDASG,
  POS.CFGSERNUM,
		POS.DEKTYP,
  POSPOL.RMK,
  POSPOL.ULDCTR,
  POSPOL.ULDNUM,
  POSPOL.UPDVER,
  POSPOL.POL POL,
  POSPOL.GRPIDR GRPIDR
FROM OPRLODPLNPOL POL
INNER JOIN OPRLODPLNPOSDTL POS
ON POL.CMPCOD     = POS.CMPCOD
AND POL.FLTCARIDR = POS.FLTCARIDR
AND POL.FLTNUM    = POS.FLTNUM
AND POL.FLTSEQNUM = POS.FLTSEQNUM
AND POL.CFGSERNUM = POS.CFGSERNUM
LEFT OUTER JOIN OPRLODPLNPOSPOL POSPOL
ON POS.CMPCOD     = POSPOL.CMPCOD
AND POS.FLTCARIDR = POSPOL.FLTCARIDR
AND POS.FLTNUM    = POSPOL.FLTNUM
AND POS.FLTSEQNUM = POSPOL.FLTSEQNUM
AND POS.CFGSERNUM = POSPOL.CFGSERNUM
AND POS.POS = POSPOL.POS
AND POSPOL.POL    = POL.POL
WHERE POL.CMPCOD  = ?
AND POL.FLTCARIDR =?
AND POL.FLTNUM    = ?
AND POL.FLTSEQNUM = ?
			
				]]>       
			
        </QRY:Source>
    </QRY:Definition>  
    <QRY:Definition>  
	  <QRY:Id>7</QRY:Id>
        <QRY:Source Name="operations.flthandling.loadplan.findLoadPlanShipmentsWithVersion" Type="NATIVE"> 
			
			SELECT DISTINCT LODSHP.SEGORG ORG,
  LODSHP.SEGDST DST,
  LODSHP.DOCOWRIDR DOCOWRIDR,
  SHPMST.DSTCOD DSTCOD,
  SHPMST.ORGCOD ORGCOD,
  LODSHP.MSTDOCNUM MSTDOCNUM,
  LODSHP.SEQNUM SEQNUM,
  LODSHP.DUPNUM DUPNUM,
  LODSHP.CMPCOD CMPCOD,
  LODSHP.POSSERNUM POSSERNUM ,
  LODSHP.SEGSERNUM SEGSERNUM,
  LODSHP.POSNUM POSNUM,
  LODSHP.ULDNUM ULDNUM,
  LODSHP.LODPRY LODPRY,
  LODSHP.PLNPCS PLNPCS,
  LODSHP.PREFLG PREFLG,
  LODSHP.PLNWGT PLNWGT,
  LODSHP.PLNVOL PLNVOL,
  LODSHP.SHPRMK SHPRMK,
  LODSHP.SHPSRC SHPSRC,
  SHPMST.STDPCS STDPCS,
  SHPMST.GRSVOL GRSVOL,
  SHPMST.STDWGT STDWGT,
  SHPMST.AGTNAM AGTNAM,
  SHPMST.AGTCOD AGTCOD,
  SHPMST.SHPPFX SHPPFX,
  SHPMST.SCCCOD SCC,
  SHPRAT.CMDITMNAM COM,
  ratuld.ULDNUM ULDTYP,
  SHPRAT.NUMULD NUMULD,
  SHPMST.SHPDES SHPDES,
  ARPSHP.AVLPCS AVLPCS,
  ARPSHP.AVLWGT AVLWGT,
  ARPSHP.AVLVOL AVLVOL,
				   BKGFLT.CFRPCS BKDPCS,
				   BKGFLT.CFRWGT CFRWGT,
				   BKGFLT.CFRVOL CFRVOL,				   
  BKGFLT.UBRNUM UBRNUM,
  COALESCE(LODSHP.TBURMK, BKGFLT.FLTRMK) FLTRMK,
  BKGDIM.PCSLEN,
  BKGDIM.PCSWID,
  BKGDIM.PCSHGT,
  BKGDIM.PCS DIMPCS,
  BKGMST.HDLINF,
			SHPMST.PRDNAM,
  LODARPSHP.ULDREFNUM,
  BKGFLT.FLTORG POL ,
  BKGFLT.FLTDST POU ,
  BKGFLT.LWRDCKONE LWRDCKONE ,
  BKGFLT.LWRDCKTWO LWRDCKTWO ,
  BKGFLT.UPRDCKONE UPRDCKONE ,
  BKGFLT.UPRDCKTWO UPRDCKTWO ,
  LODARPSHP.DISRSN RSNCOD,
  BKGFLT.SHPRNK SHPRNK,

  OCI.CNTCOD,
  OCI.INFIDF,
  OCI.CUSINFIDF,
  OCI.CUSINF
FROM OPRLODPLNVER VER
INNER JOIN OPRLODPLNSHPVER LODSHP
ON VER.CMPCOD     = LODSHP.CMPCOD
AND VER.FLTCARIDR = LODSHP.FLTCARIDR
AND VER.FLTNUM    = LODSHP.FLTNUM
AND VER.FLTSEQNUM = LODSHP.FLTSEQNUM
AND VER.LODVER    = LODSHP.LODVER
INNER JOIN OPRLODPLNARPSHPVER LODARPSHP
ON  LODARPSHP.CMPCOD     = LODSHP.CMPCOD
AND LODARPSHP.FLTCARIDR = LODSHP.FLTCARIDR
AND LODARPSHP.FLTNUM    = LODSHP.FLTNUM
AND LODARPSHP.FLTSEQNUM = LODSHP.FLTSEQNUM
AND LODARPSHP.MSTDOCNUM  = LODSHP.MSTDOCNUM
AND LODARPSHP.DOCOWRIDR =  LODSHP.DOCOWRIDR
AND LODARPSHP.DUPNUM    = LODSHP.DUPNUM
AND LODARPSHP.SEQNUM    = LODSHP.SEQNUM
AND LODARPSHP.LODVER    = LODSHP.LODVER
INNER JOIN OPRSHPMST SHPMST
ON SHPMST.MSTDOCNUM  = LODSHP.MSTDOCNUM
AND SHPMST.DOCOWRIDR = LODSHP.DOCOWRIDR
AND SHPMST.DUPNUM    = LODSHP.DUPNUM
AND SHPMST.SEQNUM    = LODSHP.SEQNUM
AND SHPMST.CMPCOD    = LODSHP.CMPCOD
LEFT OUTER JOIN OPRSHPRATDTL SHPRAT
ON SHPMST.CMPCOD     = SHPRAT.CMPCOD
AND SHPMST.DOCOWRIDR = SHPRAT.DOCOWRIDR
AND SHPMST.MSTDOCNUM = SHPRAT.MSTDOCNUM
AND SHPMST.DUPNUM    = SHPRAT.DUPNUM
AND SHPMST.SEQNUM    = SHPRAT.SEQNUM
left outer join OPRSHPRATULD  ratuld
  on SHPRAT.CMPCOD=ratuld.CMPCOD AND
		SHPRAT.DOCOWRIDR=ratuld.DOCOWRIDR AND
		SHPRAT.MSTDOCNUM=ratuld.MSTDOCNUM AND
		SHPRAT.DUPNUM =ratuld.DUPNUM AND
		SHPRAT.SEQNUM=ratuld.SEQNUM AND
		SHPRAT.RATLINSERNUM=ratuld.RATLINSERNUM		   		   	
LEFT OUTER JOIN OPRARPSHP ARPSHP
ON SHPMST.CMPCOD     = ARPSHP.CMPCOD
AND SHPMST.DOCOWRIDR = ARPSHP.DOCOWRIDR
AND SHPMST.MSTDOCNUM = ARPSHP.MSTDOCNUM
AND SHPMST.DUPNUM    = ARPSHP.DUPNUM
AND SHPMST.SEQNUM    = ARPSHP.SEQNUM
LEFT OUTER JOIN CAPBKGFLTDTL BKGFLT
ON BKGFLT.CMPCOD     = LODSHP.CMPCOD
AND BKGFLT.FLTCARIDR = LODSHP.FLTCARIDR
AND BKGFLT.FLTNUM    = LODSHP.FLTNUM
AND BKGFLT.FLTSEQNUM = LODSHP.FLTSEQNUM
AND BKGFLT.FLTORG    = LODSHP.SEGORG
AND BKGFLT.FLTDST    = LODSHP.SEGDST
AND BKGFLT.MSTDOCNUM = LODSHP.MSTDOCNUM
AND BKGFLT.DOCOWRIDR = LODSHP.DOCOWRIDR
AND BKGFLT.DUPNUM    = LODSHP.DUPNUM
AND BKGFLT.SEQNUM    = LODSHP.SEQNUM
LEFT OUTER JOIN OPRSHPOCI OCI
ON OCI.CMPCOD = LODSHP.CMPCOD
AND OCI.DOCOWRIDR = LODSHP.DOCOWRIDR
AND OCI.MSTDOCNUM = LODSHP.MSTDOCNUM
AND OCI.DUPNUM    = LODSHP.DUPNUM
AND OCI.SEQNUM    = LODSHP.SEQNUM

			 	LEFT OUTER JOIN CAPBKGMST BKGMST
					    ON BKGFLT.CMPCOD = BKGMST.CMPCOD
					  AND BKGFLT.UBRNUM = BKGMST.UBRNUM
					  AND BKGMST.DOCOWRIDR = SHPMST.DOCOWRIDR
					  AND BKGMST.MSTDOCNUM = SHPMST.MSTDOCNUM
					  AND BKGMST.SEQNUM = SHPMST.SEQNUM
					  AND BKGMST.DUPNUM = SHPMST.DUPNUM
       					  AND LODSHP.SHPSRC = ?
LEFT OUTER JOIN CAPBKGDTL BKGDTL
ON BKGFLT.CMPCOD  = BKGDTL.CMPCOD
AND BKGFLT.UBRNUM = BKGDTL.UBRNUM
LEFT OUTER JOIN CAPBKGDIM BKGDIM
ON BKGDTL.CMPCOD  = BKGDIM.CMPCOD
				   AND BKGDTL.UBRNUM = BKGDIM.UBRNUM
				   AND BKGDTL.SERNUM = BKGDIM.SERNUM
WHERE VER.POL     = ?
AND VER.CMPCOD    = ?
AND VER.FLTCARIDR = ?
AND VER.FLTNUM    = ?
AND VER.FLTSEQNUM = ?
AND VER.POLVER    = ?
			
			
			UNION ALL
SELECT LODSHP.SEGORG ORG,
  LODSHP.SEGDST DST,
  LODSHP.DOCOWRIDR DOCOWRIDR,
  BKGMST.DSTCOD DSTCOD,
  BKGMST.ORGCOD ORGCOD,
  LODSHP.MSTDOCNUM MSTDOCNUM,
  LODSHP.SEQNUM SEQNUM,
  LODSHP.DUPNUM DUPNUM,
  LODSHP.CMPCOD CMPCOD,
  LODSHP.POSSERNUM POSSERNUM,
  LODSHP.SEGSERNUM SEGSERNUM,
  LODSHP.POSNUM POSNUM,
  LODSHP.ULDNUM ULDNUM,
  LODSHP.LODPRY LODPRY,
  LODSHP.PLNPCS PLNPCS,
  LODSHP.PREFLG PREFLG,
  LODSHP.PLNWGT PLNWGT,
  LODSHP.PLNVOL PLNVOL,
  LODSHP.SHPRMK SHPRMK,
  LODSHP.SHPSRC SHPSRC,
  0 STDPCS,
  0 GRSVOL,
  0 STDWGT,
  BKGMST.AGTNAM AGTNAM,
  BKGMST.AGTCOD AGTCOD,
  BKGMST.SHPPFX SHPPFX,
  BKGDTL.SCCCOD SCC,
  BKGDTL.COMCOD COM,
  
  BKGDTL.ULDGRP ULDTYP,
  BKGDTL.ULDNUM NUMULD,
  NULL SHPDES,
  0 AVLPCS,
  0 AVLWGT,
  0 AVLVOL,
  BKGFLT.CFRPCS BKDPCS,
  BKGFLT.CFRWGT CFRWGT,
  BKGFLT.CFRVOL CFRVOL,
							 BKGMST.UBRNUM UBRNUM,
  COALESCE(LODSHP.TBURMK, BKGFLT.FLTRMK) FLTRMK,
  BKGDIM.PCSLEN,
  BKGDIM.PCSWID,
  BKGDIM.PCSHGT,
  BKGDIM.PCS DIMPCS,
  BKGMST.HDLINF,
			BKGMST.PRDNAM,
  LODSHP.ULDREFNUM,
  BKGFLT.FLTORG POL ,
  BKGFLT.FLTDST POU ,
  BKGFLT.LWRDCKONE LWRDCKONE ,
  BKGFLT.LWRDCKTWO LWRDCKTWO ,
  BKGFLT.UPRDCKONE UPRDCKONE ,
  BKGFLT.UPRDCKTWO UPRDCKTWO,
  NULL RSNCOD,
  BKGFLT.SHPRNK SHPRNK,
  NULL CNTCOD,
  NULL INFIDF,
  NULL CUSINFIDF,
  NULL CUSINF
FROM OPRLODPLNVER VER
INNER JOIN OPRLODPLNSHPVER LODSHP
ON VER.CMPCOD     = LODSHP.CMPCOD
AND VER.FLTCARIDR = LODSHP.FLTCARIDR
AND VER.FLTNUM    = LODSHP.FLTNUM
AND VER.FLTSEQNUM = LODSHP.FLTSEQNUM
						   AND VER.LODVER = LODSHP.LODVER
							 INNER JOIN CAPBKGMST BKGMST
							 ON BKGMST.CMPCOD = LODSHP.CMPCOD
						   AND BKGMST.UBRNUM = LODSHP.UBRNUM
							 INNER JOIN CAPBKGDTL BKGDTL
							 ON BKGMST.CMPCOD = BKGDTL.CMPCOD
AND BKGMST.UBRNUM = BKGDTL.UBRNUM
LEFT OUTER JOIN CAPBKGDIM BKGDIM
ON BKGDTL.CMPCOD  = BKGDIM.CMPCOD
						   AND BKGDTL.UBRNUM = BKGDIM.UBRNUM
						   AND BKGDTL.SERNUM = BKGDIM.SERNUM
							 INNER JOIN CAPBKGFLTDTL BKGFLT
							 ON BKGFLT.CMPCOD = LODSHP.CMPCOD
						   AND BKGFLT.FLTCARIDR = LODSHP.FLTCARIDR
						   AND BKGFLT.FLTNUM = LODSHP.FLTNUM
						   AND BKGFLT.FLTSEQNUM = LODSHP.FLTSEQNUM
						   AND BKGFLT.FLTORG = LODSHP.SEGORG
						   AND BKGFLT.FLTDST = LODSHP.SEGDST
						   AND BKGFLT.UBRNUM = LODSHP.UBRNUM
						   AND LODSHP.MSTDOCNUM = 'UNK'
						   AND LODSHP.SHPSRC = ?
					   WHERE VER.POL = ?
						 AND VER.CMPCOD = ?
						 AND VER.FLTCARIDR = ?
						 AND VER.FLTNUM = ?
						 AND VER.FLTSEQNUM = ?
						 AND VER.POLVER = ?
ORDER BY POSNUM,
  DOCOWRIDR,
  MSTDOCNUM,
  SEQNUM,
  DUPNUM,
  POSSERNUM,
  CMPCOD,
  ORG,
  DST
	
        </QRY:Source>
    </QRY:Definition>  
    
    <QRY:Definition>  
	  <QRY:Id>8</QRY:Id>
        <QRY:Source Name="operations.flthandling.loadplan.findLoadPlanULDsWithVersion" Type="NATIVE"> 
			
			SELECT LODULD.ULDNUM ULDNUM,LODULD.SEGORG SEGORG,LODULD.SEGDST SEGDST,
				   LODULD.LODPRY LODPRY, 
				   LODULD.POSNUM POSNUM, LODULD.SEGSERNUM SEGSERNUM,
				   LODULD.ACTULDNUM ACTULDNUM, LODULD.TRNSHPDTL,LODULD.ULDREFNUM,
				   LODULD.PLNWGT ULDPLNWGT,
					   LODULD.PLNPCS ULDPLNPCS,
					   LODULD.GRSWGT ULDGRSWGT
			FROM  
	  			OPRLODPLNVER  VER 
        INNER JOIN OPRLODPLNULDVER LODULD ON
							 VER.CMPCOD = LODULD.CMPCOD AND
							 VER.FLTCARIDR = LODULD.FLTCARIDR AND
							 VER.FLTNUM = LODULD.FLTNUM AND
							 VER.FLTSEQNUM = LODULD.FLTSEQNUM AND
							 VER.LODVER = LODULD.LODVER 
			WHERE  
				   VER.POL = ? AND 
				   VER.CMPCOD = ? AND
			       VER.FLTCARIDR = ? AND   
				   VER.FLTNUM = ? AND
				   VER.FLTSEQNUM = ? AND
				   VER.POLVER = ? 
				  ORDER BY LODULD.POSNUM 
			
        </QRY:Source>
    </QRY:Definition>  
    
     <QRY:Definition>  
	  <QRY:Id>9</QRY:Id>
        <QRY:Source Name="operations.flthandling.loadplan.findConfigurationsWithVersion" Type="NATIVE"> 
			SELECT LODCFG.ULDTYP ULDTYP, LODCFG.NUMULD NUMULD,
				  LODCFG.POSTYP POSTYP,LODCFG.CFGSERNUM,
                   LODCFG.MAXWGT, LODCFG.MAXVOL
			FROM  
				  OPRLODPLNVER  VER 
 	  			  INNER JOIN OPRLODPLNCFGVER LODCFG ON
			   			 VER.CMPCOD = LODCFG.CMPCOD AND
			 			 VER.FLTCARIDR = LODCFG.FLTCARIDR AND
			 			 VER.FLTNUM = LODCFG.FLTNUM AND
			 			 VER.FLTSEQNUM = LODCFG.FLTSEQNUM AND
			 			 VER.LODVER = LODCFG.LODVER 
			WHERE  
				   VER.POL = ? AND 
				   VER.CMPCOD = ? AND
			       VER.FLTCARIDR = ? AND   
				   VER.FLTNUM = ? AND
				   VER.FLTSEQNUM = ? AND
				   VER.POLVER = ?
			
        </QRY:Source>
    </QRY:Definition>  
    
     <QRY:Definition>  
	  <QRY:Id>10</QRY:Id>
        <QRY:Source Name="operations.flthandling.loadplan.findPositionDetailsWithVersion" Type="NATIVE"> 
        
		SELECT POSDTL.POS POS,
  POSDTL.LODPRY LODPRY,
  POSDTL.POL DTLPOL,
  POSDTL.POU,
  POSDTL.CMPCOD,
  POSDTL.FLTCARIDR,
  POSDTL.FLTNUM,
  POSDTL.FLTSEQNUM,
  POSDTL.ISSULDASG,
  POSDTL.CFGSERNUM,
  POSDTL.DEKTYP,
  POSPOL.RMK,
  POSPOL.ULDCTR,
  POSPOL.ULDNUM,
  POSPOL.UPDVER,
  POSPOL.POL POL,
  VER.POLVER,
  VER.LODVER
		FROM  
			  OPRLODPLNVER  VER 
			  INNER JOIN OPRLODPLNPOSDTLVER POSDTL ON
			  			 VER.CMPCOD = POSDTL.CMPCOD AND
              VER.FLTCARIDR = POSDTL.FLTCARIDR AND
              VER.FLTNUM = POSDTL.FLTNUM AND
              VER.FLTSEQNUM = POSDTL.FLTSEQNUM and
			 			 VER.LODVER = POSDTL.LODVER 
			 
         JOIN OPRLODPLNPOSPOLVER POSPOL ON
                POSDTL.CMPCOD = POSPOL.CMPCOD AND
              POSDTL.FLTCARIDR = POSPOL.FLTCARIDR AND
              POSDTL.FLTNUM = POSPOL.FLTNUM AND
              POSDTL.FLTSEQNUM = POSPOL.FLTSEQNUM AND
              POSDTL.LODVER=POSPOL.LODVER AND
              POSDTL.POS=POSPOL.POS AND
              POSDTL.CFGSERNUM=POSPOL.CFGSERNUM AND
              VER.POL=POSPOL.POL AND
              VER.CMPCOD = POSPOL.CMPCOD AND
              VER.FLTCARIDR = POSPOL.FLTCARIDR AND
              VER.FLTNUM = POSPOL.FLTNUM AND
              VER.FLTSEQNUM = POSPOL.FLTSEQNUM and
              VER.LODVER=POSPOL.LODVER
		WHERE  
			   VER.POL = ? AND 
			   VER.CMPCOD = ? AND
		       VER.FLTCARIDR = ? AND   
			   VER.FLTNUM = ? AND
			   VER.FLTSEQNUM = ? AND
			   VER.POLVER = ? 			
			
        </QRY:Source>
    </QRY:Definition>  
    
       <QRY:Definition>
       <QRY:Id>11</QRY:Id>
	   <QRY:Source Name="operations.flthandling.loadplan.findutilisedflightsegmentcapacity" Type="NATIVE">
		<![CDATA[			
		   SELECT   SUM (PLNWGT) AS WGT, SUM (PLNVOL) AS VOL, SEGSERNUM
		       FROM OPRSEGSHP
		      WHERE CMPCOD = ?
		        AND FLTSEQNUM = ?
		        AND FLTCARIDR = ?
		        AND FLTNUM = ?
			GROUP BY SEGSERNUM
		]]>
	  </QRY:Source>
	 </QRY:Definition>
	 
	 <QRY:Definition>
       <QRY:Id>12</QRY:Id>
	   <QRY:Source Name="operations.flthandling.loadplan.findPrecarriageShipments" Type="NATIVE">
		<![CDATA[			
		SELECT 	BKGDTL.CMPCOD CMPCOD, BKGDTL.DOCOWRIDR DOCOWRIDR, BKGDTL.MSTDOCNUM MSTDOCNUM, 
			BKGDTL.DUPNUM DUPNUM, BKGDTL.SEQNUM SEQNUM,BKGDTL.FLTORG POL,
			BKGDTL.FLTDST POU,SHPMST.SHPPFX SHPPFX,
			SHPMST.ORGCOD ORG,SHPMST.DSTCOD DST,SHPRAT.CMDITMNAM COM,
			SHPMST.SCCCOD SCC,SHPMST.STDPCS STDPCS,BKGDTL.CFRWGT CFRWGT,
			BKGDTL.CFRVOL CFRVOL,SHPMST.SHPDES SHPDES,'P' SHPSRC,
			BKGDTL.FLTCARIDR FLTCARIDR, BKGDTL.FLTNUM FLTNUM, BKGDTL.FLTSEQNUM FLTSEQNUM, 
			BKGDTL.FLTCARCOD FLTCARCOD,LEG.STD FLTDAT,LEG.LEGORG ARP,
			BKGDTL.SEGSERNUM SEGSERNUM,BKGDTL.UBRNUM UBRNUM,BKGDTL.CFRPCS BKDPCS,
			SHPMST.STDWGT STDWGT,SHPMST.GRSVOL GRSVOL,BKGMST.CUSCOD CUSCOD

		FROM 	 CAPBKGMST BKGMST INNER JOIN CAPBKGFLTDTL BKGDTL ON
					  BKGDTL.CMPCOD = BKGMST.CMPCOD AND
					  BKGDTL.UBRNUM = BKGMST.UBRNUM
				 INNER JOIN FLTOPRLEG LEG ON
					  BKGDTL.CMPCOD = LEG.CMPCOD AND
					  BKGDTL.FLTCARIDR = LEG.FLTCARIDR AND 
					  BKGDTL.FLTNUM = LEG.FLTNUM AND
					  BKGDTL.FLTSEQNUM = LEG.FLTSEQNUM AND 
				  BKGDTL.FLTORG = LEG.LEGORG
				INNER JOIN OPRSHPMST SHPMST ON	  
					 BKGDTL.CMPCOD = SHPMST.CMPCOD AND
					 BKGDTL.DOCOWRIDR = SHPMST.DOCOWRIDR AND
					 BKGDTL.MSTDOCNUM = SHPMST.MSTDOCNUM AND
					 BKGDTL.DUPNUM = SHPMST.DUPNUM AND
					 BKGDTL.SEQNUM = SHPMST.SEQNUM 
				LEFT OUTER JOIN OPRSHPRATDTL SHPRAT ON
					 SHPMST.CMPCOD = SHPRAT.CMPCOD AND
					 SHPMST.DOCOWRIDR = SHPRAT.DOCOWRIDR AND
					 SHPMST.MSTDOCNUM = SHPRAT.MSTDOCNUM AND
					 SHPMST.DUPNUM = SHPRAT.DUPNUM AND
			 SHPMST.SEQNUM = SHPRAT.SEQNUM 
		 
		WHERE BKGDTL.CMPCOD = ? AND 
			  BKGDTL.FLTCARIDR||BKGDTL.FLTNUM||BKGDTL.FLTSEQNUM != ? AND
			  LEG.ATD IS NULL 
		]]>
	  </QRY:Source>
	 </QRY:Definition>
	 
	  <QRY:Definition>
       <QRY:Id>13</QRY:Id>
	   <QRY:Source Name="operations.flthandling.loadplan.checkULDManifested" Type="NATIVE">
		<![CDATA[			
		   
		SELECT FLTNUM
		FROM OPRSEGULD
		WHERE CMPCOD = ? AND
		      ULDNUM = ? AND 
			 FLTCARIDR||FLTNUM||FLTSEQNUM != ? 

		]]>
	  </QRY:Source>
	 </QRY:Definition>
	 
    <QRY:Definition>
       <QRY:Id>14</QRY:Id>
	   <QRY:Source Name="operations.flthandling.loadplan.findLoadPlanVersion" Type="NATIVE">
		<![CDATA[			
		   
	SELECT LODPOL.POLVER POLVER ,
	LODPOL.CFGSERNUM CFGSERNUM,
	LODPOL.RMK,
	PLNCFG.ULDTYP ULDCFG,
	LODPOL.LSTUPDTIM CRTTIM,
	LODPOL.LSTUPDUSR CRTUSR,
	LODPOL.RELVER,
	LODPOL.VERSTLFLG
	FROM OPRLODPLNPOL LODPOL
	LEFT OUTER JOIN OPRLODPLNCFG PLNCFG
	ON LODPOL.CMPCOD     = PLNCFG.CMPCOD
	AND LODPOL.FLTCARIDR = PLNCFG.FLTCARIDR
	AND LODPOL.FLTNUM    = PLNCFG.FLTNUM
	AND LODPOL.FLTSEQNUM = PLNCFG.FLTSEQNUM
	AND LODPOL.CFGSERNUM = PLNCFG.CFGSERNUM
	WHERE LODPOL.CMPCOD  = ?
	AND LODPOL.FLTCARIDR = ?
	AND LODPOL.FLTNUM    = ?
	AND LODPOL.FLTSEQNUM = ?
	AND LODPOL.POL       = ?

		]]>
	  </QRY:Source>
	 </QRY:Definition>
	 
	 <QRY:Definition>
       <QRY:Id>15</QRY:Id>
	   <QRY:Source Name="operations.flthandling.loadplan.findLoadPlanVersionDetails" Type="NATIVE">
		<![CDATA[			
		   
			SELECT POL, MAX(POLVER) VER
			FROM OPRLODPLNVER
			WHERE CMPCOD = ? AND FLTCARIDR = ? AND FLTNUM = ? AND FLTSEQNUM = ?
				  GROUP BY POL

		]]>
	  </QRY:Source>
	 </QRY:Definition>
	 
	  <QRY:Definition>
       <QRY:Id>16</QRY:Id>
	   <QRY:Source Name="operations.flthandling.loadplan.findLoadPlanUldDetails" Type="NATIVE">
		<![CDATA[					   
			SELECT ULDTYPCOD ULDTYP, ULDGRPCOD ULDGRP, MAXVOL MAXVOL
 			 FROM SHRULDTYPMST
 				WHERE CMPCOD = ?
		]]>
	  </QRY:Source>
	 </QRY:Definition>
	
	<QRY:Definition>
	       <QRY:Id>17</QRY:Id>
		   <QRY:Source Name="operations.flthandling.loadplan.findLoadPlanDetailsWithVersion" Type="NATIVE">
			<![CDATA[					   
				SELECT VERMST.POLVER POLVER ,
		PLNCFG.CFGSERNUM CFGSERNUM,
		PLNCFG.ULDTYP ULDCFG,
		LODPOL.LSTUPDTIM CRTTIM,
		LODPOL.LSTUPDUSR CRTUSR,
		LODPOL.RELVER,
		LODPOL.VERSTLFLG,
		VERMST.RMK		
			FROM OPRLODPLNPOL LODPOL
			LEFT OUTER JOIN OPRLODPLNVER VERMST
			ON  LODPOL.CMPCOD     = VERMST.CMPCOD
	     AND LODPOL.FLTCARIDR = VERMST.FLTCARIDR
			AND LODPOL.FLTNUM    = VERMST.FLTNUM
	     AND LODPOL.FLTSEQNUM = VERMST.FLTSEQNUM
			AND LODPOL.POL       = VERMST.POL
		LEFT OUTER JOIN OPRLODPLNCFGVER PLNCFG
			ON VERMST.CMPCOD     = PLNCFG.CMPCOD
			AND VERMST.FLTCARIDR = PLNCFG.FLTCARIDR
			AND VERMST.FLTNUM    = PLNCFG.FLTNUM
			AND VERMST.FLTSEQNUM = PLNCFG.FLTSEQNUM
			AND VERMST.LODVER    = PLNCFG.LODVER
			WHERE LODPOL.CMPCOD  = ?
	   AND LODPOL.FLTCARIDR = ?
			AND LODPOL.FLTNUM    = ?
	   AND LODPOL.FLTSEQNUM = ?
			AND LODPOL.POL       = ?
			AND VERMST.POLVER    = ?
			GROUP BY 
			VERMST.POLVER ,
			PLNCFG.CFGSERNUM ,
			PLNCFG.ULDTYP ,
			LODPOL.LSTUPDTIM ,
			LODPOL.LSTUPDUSR ,
			LODPOL.RELVER,
			LODPOL.VERSTLFLG,
			VERMST.RMK
			]]>
		  </QRY:Source>
	 </QRY:Definition>
	
	<QRY:Definition>
       <QRY:Id>18</QRY:Id>
	   <QRY:Source Name="operations.flthandling.loadplan.pictorialloadplan" Type="NATIVE">
		<![CDATA[	
		SELECT LODSHP.SEGORG ORG,
  LODSHP.SEGDST DST,
  SHPMST.SHPPFX ,
  LODSHP.DOCOWRIDR,
		         LODSHP.MSTDOCNUM MSTDOCNUM,
		         LODSHP.SEQNUM SEQNUM,
		         LODSHP.DUPNUM DUPNUM,
		         LODSHP.CMPCOD CMPCOD,
		         LODSHP.POSSERNUM POSSERNUM,
		         NVL(LODSHP.POSNUM,'UNASG') POSNUM,
		         LODSHP.ULDNUM ULDNUM,
		         LODSHP.LODPRY LODPRY,
		         LODSHP.PLNPCS PLNPCS,
		         LODSHP.PREFLG PREFLG,
		         LODSHP.PLNWGT PLNWGT,
		         LODSHP.PLNVOL PLNVOL,
		         LODSHP.SHPRMK SHPRMK,
		         LODSHP.SHPSRC SHPSRC,
		         SHPRAT.CMDITMNAM COM,
				  ratuld.ULDNUM ULDTYP,
		         SHPRAT.NUMULD NUMULD,
                 SHPMST.DSTCOD DSTCOD,
  LODSHP.SEGSERNUM,
  NULL LODULDNUM,
  NULL SEGORG,
  NULL SEGDST,
		         ULD.TRNSHPDTL TRNSHPDTL,
		         NULL ULDLODPRY,
  POSPOL.ULDCTR,
  POSPOL.ULDNUM POSULDNUM,
  POSPOL.RMK POSRMK,
		         VER.RMK,
		         POS.LODPRY POSLODPRY,
  POS.POU POSPOU,
  LODSHP.UBRNUM UBRNUM,
  SHPMST.SCCCOD,
  SHPMST.PRDCOD,
  SHPMST.PRDNAM,
  SHPMST.STDPCS,
  SHPMST.STDWGT,
  SHPMST.STDWGTCOD,
  SHPMST.GRSDISVOL,
  SHPMST.GRSVOLUNT,
				POSPOL.UPDVER,
				LODSHP.ULDREFNUM,
				ULD.ACTULDNUM,
				ULD.PLNWGT ULDPLNWGT,
				ULD.PLNPCS ULDPLNPCS,
				ULD.GRSWGT ULDGRSWGT,
			    BKGFLT.SHPRNK
		     FROM OPRLODPLNVER VER
INNER JOIN OPRLODPLNSHPVER LODSHP
ON VER.CMPCOD     = LODSHP.CMPCOD
AND VER.FLTCARIDR = LODSHP.FLTCARIDR
AND VER.FLTNUM    = LODSHP.FLTNUM
AND VER.FLTSEQNUM = LODSHP.FLTSEQNUM
AND VER.LODVER    = LODSHP.LODVER
				LEFT OUTER JOIN OPRSHPMST SHPMST
   				ON LODSHP.CMPCOD = SHPMST.CMPCOD
AND LODSHP.DOCOWRIDR = SHPMST.DOCOWRIDR
				AND LODSHP.MSTDOCNUM  = SHPMST.MSTDOCNUM
				AND LODSHP.DUPNUM     = SHPMST.DUPNUM
				AND LODSHP.SEQNUM     = SHPMST.SEQNUM
				LEFT OUTER JOIN OPRSHPRATDTL SHPRAT
     			ON SHPMST.CMPCOD = SHPRAT.CMPCOD
				AND SHPMST.DOCOWRIDR  = SHPRAT.DOCOWRIDR
				AND SHPMST.MSTDOCNUM  = SHPRAT.MSTDOCNUM
				AND SHPMST.DUPNUM     = SHPRAT.DUPNUM
				AND SHPMST.SEQNUM     = SHPRAT.SEQNUM
		        
				 left outer join OPRSHPRATULD  ratuld
  on SHPRAT.CMPCOD=ratuld.CMPCOD AND
		SHPRAT.DOCOWRIDR=ratuld.DOCOWRIDR AND
		SHPRAT.MSTDOCNUM=ratuld.MSTDOCNUM AND
		SHPRAT.DUPNUM =ratuld.DUPNUM AND
		SHPRAT.SEQNUM=ratuld.SEQNUM AND
		SHPRAT.RATLINSERNUM=ratuld.RATLINSERNUM
LEFT OUTER JOIN OPRLODPLNULDVER ULD
ON VER.CMPCOD     = ULD.CMPCOD
AND VER.FLTCARIDR = ULD.FLTCARIDR
AND VER.FLTNUM    = ULD.FLTNUM
AND VER.FLTSEQNUM = ULD.FLTSEQNUM
AND VER.LODVER    = ULD.LODVER
				AND LODSHP.ULDREFNUM = ULD.ULDREFNUM
		         LEFT OUTER JOIN CAPBKGMST BKGMST
		         ON LODSHP.CMPCOD = BKGMST.CMPCOD
AND LODSHP.DOCOWRIDR = BKGMST.DOCOWRIDR
		       AND LODSHP.MSTDOCNUM = BKGMST.MSTDOCNUM
		       AND LODSHP.DUPNUM = BKGMST.DUPNUM
		       AND LODSHP.SEQNUM = BKGMST.SEQNUM
		       AND BKGMST.BKGSTA <> 'X'
LEFT OUTER JOIN CAPBKGFLTDTL BKGFLT ON
BKGFLT.CMPCOD  	 =LODSHP.CMPCOD
AND BKGFLT.UBRNUM=LODSHP.UBRNUM
LEFT OUTER JOIN OPRLODPLNPOSDTLVER POS
		         ON VER.CMPCOD = POS.CMPCOD
		       AND VER.FLTCARIDR = POS.FLTCARIDR
		       AND VER.FLTNUM = POS.FLTNUM
		       AND VER.FLTSEQNUM = POS.FLTSEQNUM
AND VER.LODVER                  = POS.LODVER
		       AND LODSHP.POSNUM = POS.POS
LEFT OUTER JOIN OPRLODPLNPOSPOLVER POSPOL
ON VER.CMPCOD                   = POSPOL.CMPCOD
AND VER.FLTCARIDR               = POSPOL.FLTCARIDR
AND VER.FLTNUM                  = POSPOL.FLTNUM
AND VER.FLTSEQNUM               = POSPOL.FLTSEQNUM
AND VER.LODVER                  = POSPOL.LODVER
AND LODSHP.POSNUM               = POSPOL.POS
AND VER.POL                   = POSPOL.POL
		   WHERE VER.CMPCOD = ?
		     AND VER.FLTCARIDR = ?
		     AND VER.FLTNUM = ?
		     AND VER.FLTSEQNUM = ?
		     AND VER.POLVER = ?
		     AND VER.POL = ?
		     AND LODSHP.MSTDOCNUM <> 'UNK'
		     AND NVL(LODSHP.POSNUM,'UNASG') <> 'UNASG'
		UNION ALL
SELECT LODSHP.SEGORG ORG,
  LODSHP.SEGDST DST,
  SHPMST.SHPPFX,
  LODSHP.DOCOWRIDR,
  LODSHP.MSTDOCNUM,
  LODSHP.SEQNUM,
  LODSHP.DUPNUM,
  LODULD.CMPCOD CMPCOD,
  LODSHP.POSSERNUM,
  NVL(LODULD.POSNUM,'UNASG') POSNUM,
  LODSHP.ULDNUM,
  LODSHP.LODPRY,
  LODSHP.PLNPCS,
  LODSHP.PREFLG,
  LODSHP.PLNWGT,
  LODSHP.PLNVOL,
  LODSHP.SHPRMK,
  LODSHP.SHPSRC,
  SHPRAT.CMDITMNAM COM,
  ratuld.ULDNUM ULDTYP,
  SHPRAT.NUMULD NUMULD,
  SHPMST.DSTCOD,
  LODULD.SEGSERNUM,
  LODULD.ULDNUM LODULDNUM,
  LODULD.SEGORG,
  LODULD.SEGDST,
  LODULD.TRNSHPDTL,
  LODULD.LODPRY ULDLODPRY,
  POSPOL.ULDCTR,
  POSPOL.ULDNUM POSULDNUM,
  POSPOL.RMK POSRMK,
  VER.RMK,		         
  POS.LODPRY POSLODPRY,
  POS.POU POSPOU,
  LODSHP.UBRNUM UBRNUM,
  SHPMST.SCCCOD,
  SHPMST.PRDCOD,
  SHPMST.PRDNAM,
  SHPMST.STDPCS,
  SHPMST.STDWGT,
  SHPMST.STDWGTCOD,
  SHPMST.GRSDISVOL,
  SHPMST.GRSVOLUNT,
  POSPOL.UPDVER,
  LODULD.ULDREFNUM,
  LODULD.ACTULDNUM,
  LODULD.PLNWGT ULDPLNWGT,
  LODULD.PLNPCS ULDPLNPCS,
  LODULD.GRSWGT ULDGRSWGT,
  BKGFLT.SHPRNK
FROM OPRLODPLNVER VER
INNER JOIN OPRLODPLNULDVER LODULD
ON VER.CMPCOD = LODULD.CMPCOD
AND VER.FLTCARIDR = LODULD.FLTCARIDR
AND VER.FLTNUM = LODULD.FLTNUM
AND VER.FLTSEQNUM = LODULD.FLTSEQNUM
AND VER.LODVER = LODULD.LODVER
AND VER.POL = LODULD.SEGORG
INNER JOIN OPRLODPLNSHPVER LODSHP
ON VER.CMPCOD     = LODSHP.CMPCOD
AND VER.FLTCARIDR = LODSHP.FLTCARIDR
AND VER.FLTNUM    = LODSHP.FLTNUM
AND VER.FLTSEQNUM = LODSHP.FLTSEQNUM
AND VER.LODVER    = LODSHP.LODVER
AND LODULD.ULDREFNUM    = LODSHP.ULDREFNUM
LEFT OUTER JOIN CAPBKGFLTDTL BKGFLT ON
BKGFLT.CMPCOD  =LODSHP.CMPCOD
AND BKGFLT.UBRNUM=LODSHP.UBRNUM
LEFT OUTER JOIN OPRSHPMST SHPMST
ON LODSHP.CMPCOD     = SHPMST.CMPCOD
AND LODSHP.DOCOWRIDR = SHPMST.DOCOWRIDR
AND LODSHP.MSTDOCNUM = SHPMST.MSTDOCNUM
AND LODSHP.DUPNUM    = SHPMST.DUPNUM
AND LODSHP.SEQNUM    = SHPMST.SEQNUM
LEFT OUTER JOIN OPRSHPRATDTL SHPRAT
ON SHPMST.CMPCOD     = SHPRAT.CMPCOD
AND SHPMST.DOCOWRIDR = SHPRAT.DOCOWRIDR
AND SHPMST.MSTDOCNUM = SHPRAT.MSTDOCNUM
AND SHPMST.DUPNUM    = SHPRAT.DUPNUM
AND SHPMST.SEQNUM    = SHPRAT.SEQNUM
 left outer join OPRSHPRATULD  ratuld
  on SHPRAT.CMPCOD=ratuld.CMPCOD AND
		SHPRAT.DOCOWRIDR=ratuld.DOCOWRIDR AND
		SHPRAT.MSTDOCNUM=ratuld.MSTDOCNUM AND
		SHPRAT.DUPNUM =ratuld.DUPNUM AND
		SHPRAT.SEQNUM=ratuld.SEQNUM AND
		SHPRAT.RATLINSERNUM=ratuld.RATLINSERNUM
LEFT OUTER JOIN OPRLODPLNPOSDTLVER POS
ON VER.CMPCOD     = POS.CMPCOD
AND VER.FLTCARIDR = POS.FLTCARIDR
AND VER.FLTNUM    = POS.FLTNUM
AND VER.FLTSEQNUM = POS.FLTSEQNUM
AND VER.LODVER    = POS.LODVER
AND LODULD.POSNUM = POS.POS
LEFT OUTER JOIN OPRLODPLNPOSPOLVER POSPOL
ON VER.CMPCOD                   = POSPOL.CMPCOD
AND VER.FLTCARIDR               = POSPOL.FLTCARIDR
AND VER.FLTNUM                  = POSPOL.FLTNUM
AND VER.FLTSEQNUM               = POSPOL.FLTSEQNUM
AND VER.LODVER                  = POSPOL.LODVER
AND LODULD.POSNUM               = POSPOL.POS
AND VER.POL                     = POSPOL.POL
		   WHERE VER.CMPCOD = ?
		     AND VER.FLTCARIDR = ?
		     AND VER.FLTNUM = ?
		     AND VER.FLTSEQNUM = ?
		     AND VER.POLVER = ?
		     AND VER.POL = ?
		     AND NVL(LODULD.POSNUM,'UNASG') <> 'UNASG'
		ORDER BY POSNUM,
  DOCOWRIDR,
		         MSTDOCNUM,
		         SEQNUM,
		         DUPNUM,
		         POSSERNUM,
		         CMPCOD



		]]>
	  </QRY:Source>
	 </QRY:Definition>
	
	<QRY:Definition>
	       <QRY:Id>19</QRY:Id>
		   <QRY:Source Name="operations.flthandling.loadplan.polversionforpol" Type="NATIVE">
			<![CDATA[					   
				SELECT MAX (   POLVER) POLVER
				  FROM OPRLODPLNVER
				 WHERE CMPCOD = ?
				   AND FLTCARIDR = ?
				   AND FLTNUM = ?
   				   AND FLTSEQNUM = ?
				   AND POL = ?
			]]>
		  </QRY:Source>
	 </QRY:Definition>
	 
	 
	<QRY:Definition>
	       <QRY:Id>20</QRY:Id>
		   <QRY:Source Name="operations.flthandling.loadplan.curversionforpol" Type="NATIVE">
			<![CDATA[					   
				SELECT POLVER
				  FROM OPRLODPLNPOL POL
				 WHERE POL.CMPCOD = ?
				   AND POL.FLTCARIDR = ?
				   AND POL.FLTNUM = ?
				   AND POL.FLTSEQNUM = ?
				   AND POL.POL = ?
			]]>
		  </QRY:Source>
	 </QRY:Definition>
	 
	 <QRY:Definition>
	       <QRY:Id>21</QRY:Id>
		   <QRY:Source Name="operations.flthandling.loadplan.shipmentforcurrentversion" Type="NATIVE">
			<![CDATA[					   
				SELECT LODSHP.CMPCOD, LODSHP.FLTCARIDR,
				       LODSHP.FLTNUM, LODSHP.FLTSEQNUM,
 				       LODSHP.SEGORG, LODSHP.SEGDST,
				       LODSHP.DOCOWNIDR, LODSHP.MSTDOCNUM,
				       LODSHP.SEQNUM, LODSHP.DUPNUM,
 				       LODSHP.POSSERNUM, LODSHP.POSNUM,
				       LODSHP.ULDNUM, LODSHP.LODPRY,
				       LODSHP.PLNPCS, LODSHP.PREFLG,
				       LODSHP.PLNWGT, LODSHP.PLNVOL,
				       LODSHP.SHPRMK, LODSHP.RELVOL,LODSHP.RELWGT,LODSHP.RELPCS,
				       LODSHP.SHPSRC, LODSHP.LSTUPDTIM,
				       LODSHP.LSTUPDUSR,LODSHP.OTHSEGSHPFLG,
				       LODSHP.UBRNUM,LODSHP.TBURMK,
					   LODSHP.ULDREFNUM
					   FROM OPRLODPLNSHPVER LODSHP
				 WHERE LODSHP.CMPCOD = ?
				   AND LODSHP.FLTCARIDR = ?
				   AND LODSHP.FLTNUM = ?
				   AND LODSHP.FLTSEQNUM = ?
					   AND LODSHP.LODVER = ?
			]]>
		  </QRY:Source>
	 </QRY:Definition>	 
	 
	<QRY:Definition>
	       <QRY:Id>22</QRY:Id>
		   <QRY:Source Name="operations.flthandling.loadplan.uldforcurrentversion" Type="NATIVE">
			<![CDATA[					   
				SELECT LODULD.POU, LODULD.LODPRY,
				       LODULD.POSNUM,
				       LODULD.SEGSERNUM, LODULD.LSTUPDTIM,
				       LODULD.LSTUPDUSR,
				       LODULD.TRNSHPDTL, LODULD.FLTNUM,
				       LODULD.FLTCARIDR, LODULD.FLTSEQNUM,
				       LODULD.CFGSERNUM,
				       LODULD.ULDNUM, LODULD.SEGORG,
				       LODULD.SEGDST, LODULD.CMPCOD,LODULD.ACTULDNUM,LODULD.ULDREFNUM,
					   LODULD.PLNWGT ULDPLNWGT,
					   LODULD.PLNPCS ULDPLNPCS,
					   LODULD.GRSWGT ULDGRSWGT
					   FROM OPRLODPLNULDVER LODULD
				 WHERE LODULD.CMPCOD = ?
				   AND LODULD.FLTCARIDR = ?
				   AND LODULD.FLTNUM = ?
				   AND LODULD.FLTSEQNUM = ?
					   AND LODULD.LODVER=?
				   
			]]>
		  </QRY:Source>
	 </QRY:Definition>
	 
	<QRY:Definition>
	       <QRY:Id>23</QRY:Id>
		   <QRY:Source Name="operations.flthandling.loadplan.findpolsforflight" Type="NATIVE">
			<![CDATA[					   
				SELECT POL.CMPCOD, POL.FLTCARIDR, POL.FLTNUM,
				       POL.FLTSEQNUM, POL.POL, POL.CFGSERNUM,
				       POL.LSTUPDTIM, POL.LSTUPDUSR,POL.POLVER CURVER
				  FROM OPRLODPLNPOL POL
				 WHERE POL.CMPCOD = ?
				   AND POL.FLTCARIDR = ?
				   AND POL.FLTNUM = ?
				   AND POL.FLTSEQNUM = ?
			]]>
		  </QRY:Source>
	 </QRY:Definition>	
	 
	<QRY:Definition>
	       <QRY:Id>24</QRY:Id>
		   <QRY:Source Name="operations.flthandling.loadplan.finduldcfgforversion" Type="NATIVE">
			<![CDATA[					   
			SELECT CFG.ULDTYP ULDTYP, CFG.NUMULD NUMULD,
			       CFG.POSTYP POSTYP,
			       CFG.CMPCOD, CFG.FLTCARIDR, CFG.FLTNUM,
			       CFG.FLTSEQNUM, CFG.CFGSERNUM,
				   CFG.MAXWGT, CFG.MAXVOL
					FROM OPRLODPLNVER POL
					INNER JOIN OPRLODPLNCFGVER CFG ON
					POL.CMPCOD=CFG.CMPCOD AND
						POL.FLTCARIDR=CFG.FLTCARIDR AND
						POL.FLTNUM=CFG.FLTNUM AND
						POL.FLTSEQNUM=CFG.FLTSEQNUM AND 
					POL.LODVER=CFG.LODVER
					WHERE CFG.CMPCOD = ?
			   AND CFG.FLTCARIDR = ?
			   AND CFG.FLTNUM = ?
			   AND CFG.FLTSEQNUM = ?
					AND CFG.LODVER=?
			]]>
		  </QRY:Source>
	 </QRY:Definition>
	 
	<QRY:Definition>
	       <QRY:Id>25</QRY:Id>
		   <QRY:Source Name="operations.flthandling.loadplan.findPositionDetailsforversion" Type="NATIVE">
			<![CDATA[					   
			SELECT POS.POS POS, POS.POL DTLPOL,
			       POS.LODPRY LODPRY, POS.CMPCOD,
			       POS.FLTCARIDR, POS.FLTNUM, POS.FLTSEQNUM,
			       POS.CFGSERNUM,POS.POU,POS.ISSULDASG,POS.DEKTYP,
				   POSPOL.RMK,POSPOL.ULDCTR,
				   POSPOL.ULDNUM,POSPOL.UPDVER,POSPOL.POL POL
			  FROM OPRLODPLNPOSDTLVER POS,OPRLODPLNPOSPOLVER POSPOL
			  WHERE POS.CMPCOD = POSPOL.CMPCOD(+)
			   AND POS.FLTCARIDR =POSPOL.FLTCARIDR(+)
			   AND POS.FLTNUM = POSPOL.FLTNUM(+)
			   AND POS.FLTSEQNUM = POSPOL.FLTSEQNUM(+)
			   AND POS.POS=POSPOL.POL(+)
			   AND POS.CFGSERNUM=POSPOL.CFGSERNUM(+)
			   AND POS.CMPCOD=?
			   AND POS.FLTCARIDR = ?
			   AND POS.FLTNUM = ?
			   AND POS.FLTSEQNUM = ?
			   AND POS.LODVER = ?
			]]>
		  </QRY:Source>
	 </QRY:Definition>	 
	
	
	<QRY:Definition>
	       <QRY:Id>26</QRY:Id>
		   <QRY:Source Name="operations.flthandling.loadplan.findremarksforflight" Type="NATIVE">
			<![CDATA[					   
			 SELECT RMK
			 FROM OPRLODPLNVER VERMST
		 	 WHERE CMPCOD = ?
			   AND FLTCARIDR = ?
			   AND FLTSEQNUM = ?
			   AND FLTNUM = ?
			   AND POL = ?
			   AND LODVER IN (
					   SELECT MAX (   LODVER)
						 FROM OPRLODPLNVER
						WHERE CMPCOD = VERMST.CMPCOD
						  AND FLTCARIDR = VERMST.FLTCARIDR
						  AND FLTSEQNUM = VERMST.FLTSEQNUM
						  AND FLTNUM = VERMST.FLTNUM
						  AND POL = VERMST.POL)

			]]>
		  </QRY:Source>
	 </QRY:Definition>
	
	<QRY:Definition>
	       <QRY:Id>27</QRY:Id>
		   <QRY:Source Name="operations.flthandling.loadplan.finduldconfigforpictorialloadplan" Type="NATIVE">
			<![CDATA[					   

				SELECT CFG.ULDTYP,
  VER.LODVER,
				VER.CRTTIM,
				VER.CRTUSR,
				CFG.NUMULD,
  CFG.POSTYP
FROM OPRLODPLNVER VER
LEFT OUTER JOIN OPRLODPLNCFGVER CFG
ON VER.CMPCOD     = CFG.CMPCOD
AND VER.FLTCARIDR = CFG.FLTCARIDR
AND VER.FLTNUM    = CFG.FLTNUM
AND VER.FLTSEQNUM = CFG.FLTSEQNUM
AND VER.LODVER    = CFG.LODVER
WHERE VER.CMPCOD  = ?
AND VER.FLTCARIDR = ?
AND VER.FLTNUM    = ?
AND VER.FLTSEQNUM =?
AND VER.POL       = ?
				AND VER.POLVER	  = ?
				ORDER BY VER.LODVER DESC,
				ULDTYP ASC

		

			]]>
		  </QRY:Source>
	 </QRY:Definition>
	 <QRY:Definition>
	 <QRY:Id>32</QRY:Id>
	  <QRY:Source Name="operations.flthandling.loadplan.findAcceptedActualULDNumbers" Type="NATIVE">
		   <![CDATA[
			SELECT SUM(ULD.ULDWGT) OVER ( PARTITION BY ULD.ULDNUM,ULD.CMPCOD) ULDWGT,
			SUM(ULD.ACPPCS) OVER 
( PARTITION BY ULD.ULDNUM,ULD.CMPCOD) ULDPCS,
			SUM(ULD.ACPVOL) OVER ( PARTITION BY ULD.ULDNUM,ULD.CMPCOD) 
ULDVOL,
			ULD.ULDNUM,
			ULD.CMPCOD,
			ULD.DOCOWRIDR,
			ULD.MSTDOCNUM,
			ULD.DUPNUM,
			ULD.SEQNUM,
			
			ULD.ULDCTR
  FROM
    (SELECT SUBSTR(AWB, 1,INSTR(AWB,'|',1,1)-1) MSTDOCNUM,
      SUBSTR(AWB, INSTR(AWB,'|',1,1)        
+1,INSTR(AWB,'|',1,2)-INSTR(AWB,'|',1,1)-1) DOCOWRIDR,
      SUBSTR(AWB, INSTR(AWB,'|',1,2)        +1,INSTR(AWB,'|',1,3)-INSTR(AWB,'|',1,2)-1) 
DUPNUM,
      SUBSTR(AWB, INSTR(AWB,'|',1,3)        +1) SEQNUM
    FROM
      (SELECT SUBSTR ( CSVAWB 
, DECODE(LEVEL, 1, 1, INSTR(CSVAWB, DELIMITER, 1, LEVEL-1)+1) , INSTR(CSVAWB, DELIMITER, 1, LEVEL) - 
DECODE(LEVEL, 1, 1, INSTR(CSVAWB, DELIMITER, 1, LEVEL-1)+1) ) AWB
      FROM
        (SELECT ? AS CSVAWB, 
',' AS DELIMITER FROM DUAL
        )
        CONNECT BY INSTR(CSVAWB, DELIMITER, 1, LEVEL)> 0
      )
    
    )SHP
			INNER JOIN OPRULDACPDTL ULD
  ON SHP.DOCOWRIDR  = ULD.DOCOWRIDR
  AND SHP.MSTDOCNUM = ULD.MSTDOCNUM
  
  AND SHP.DUPNUM    = ULD.DUPNUM
  AND SHP.SEQNUM    = ULD.SEQNUM
  WHERE ULD.CMPCOD  = ?
  AND ULD.ARPCOD    
= ?
  
UNION
SELECT SUM(ULD.BDPWGT) OVER ( PARTITION BY ULD.ULDNUM,ULD.CMPCOD) ULDWGT,
  SUM(ULD.BDPPCS) 
OVER ( PARTITION BY ULD.ULDNUM,ULD.CMPCOD) ULDPCS,
  SUM(NVL(ULD.BDPVOL,0.0)) OVER ( PARTITION BY ULD.ULDNUM,ULD.CMPCOD) 
ULDVOL,
  ULD.ULDNUM,
  ULD.CMPCOD,
  ULD.DOCOWRIDR,
  ULD.MSTDOCNUM,
  ULD.DUPNUM,
  ULD.SEQNUM,
  SEGULD.ULDCTR
FROM 
OPRSEGULDSHP ULD
INNER JOIN OPRSEGULD SEGULD
ON SEGULD.CMPCOD     =ULD.CMPCOD
AND SEGULD.FLTNUM    =ULD.FLTNUM
AND 
SEGULD.FLTCARIDR =ULD.FLTCARIDR
AND SEGULD.FLTSEQNUM =ULD.FLTSEQNUM
AND SEGULD.SEGSERNUM =ULD.SEGSERNUM
AND 
SEGULD.ULDNUM    =ULD.ULDNUM
AND ULD.MFTPCS > 0 
INNER JOIN
  (SELECT ULD.ULDNUM,
    ULD.FLTNUM,
    
    ULD.FLTCARIDR,
    ULD.FLTSEQNUM
  FROM
    (SELECT SUBSTR(AWB, 1,INSTR(AWB,'|',1,1)-1) MSTDOCNUM,
      
      SUBSTR(AWB, INSTR(AWB,'|',1,1)        +1,INSTR(AWB,'|',1,2)-INSTR(AWB,'|',1,1)-1) DOCOWRIDR,
      SUBSTR(AWB, 
INSTR(AWB,'|',1,2)        +1,INSTR(AWB,'|',1,3)-INSTR(AWB,'|',1,2)-1) DUPNUM,
      SUBSTR(AWB, INSTR(AWB,'|',1,3)        
+1) SEQNUM
    FROM
      (SELECT SUBSTR ( CSVAWB , DECODE(LEVEL, 1, 1, INSTR(CSVAWB, DELIMITER, 1, LEVEL-1)+1) 
, INSTR(CSVAWB, DELIMITER, 1, LEVEL) - DECODE(LEVEL, 1, 1, INSTR(CSVAWB, DELIMITER, 1, LEVEL-1)+1) ) 
AWB
      FROM
        (SELECT ? AS CSVAWB, ',' AS DELIMITER FROM DUAL
        )
        CONNECT BY INSTR(CSVAWB, 
DELIMITER, 1, LEVEL)> 0
      )
    )SHP
  INNER JOIN OPRSEGULDSHP ULD
  ON ULD.MSTDOCNUM          = 
SHP.MSTDOCNUM
  AND ULD.DOCOWRIDR         = SHP.DOCOWRIDR
  AND ULD.DUPNUM            = SHP.DUPNUM
  
  AND ULD.SEQNUM            = SHP.SEQNUM
  ) ULDVAL ON SEGULD.ULDNUM = ULDVAL.ULDNUM
AND ULDVAL.FLTNUM           
= ULD.FLTNUM
AND ULDVAL.FLTCARIDR        = ULD.FLTCARIDR
AND ULDVAL.FLTSEQNUM        = ULD.FLTSEQNUM
INNER 
JOIN OPRFLTSEG LEG
ON LEG.CMPCOD     = ULD.CMPCOD
AND LEG.FLTNUM    = ULD.FLTNUM
AND LEG.FLTCARIDR = 
ULD.FLTCARIDR
AND LEG.FLTSEQNUM = ULD.FLTSEQNUM
WHERE ULD.CMPCOD  = ?
AND LEG.POU       = ?
AND SEGULD.ULDNUM 
<> 'BULK'
AND NVL(SEGULD.BARROWFLG,'N') = 'N'
UNION
SELECT
	  SUM(ULDSHP.WGT) OVER ( PARTITION BY ULDSHP.ULDNUM,ULDSHP.CMPCOD) 
ULDWGT,
	  SUM(ULDSHP.NUMPCS) OVER ( PARTITION BY ULDSHP.ULDNUM, ULDSHP.CMPCOD) ULDPCS,
	  SUM(ULDSHP.VOL) 
OVER ( PARTITION BY ULDSHP.ULDNUM,ULDSHP.CMPCOD) ULDVOL,
	  ULD.ULDNUM,
	  ULD.CMPCOD,
	  ULDSHP.DOCOWRIDR,
	  
ULDSHP.MSTDOCNUM,
	  ULDSHP.DUPNUM,
	  ULDSHP.SEQNUM,
	  ULD.ULDCTR
	FROM
	  OPRULDSHP ULDSHP
	INNER 
JOIN
	  (
		SELECT
		  SUBSTR(AWB, 1,INSTR(AWB,'|',1,1)-1) MSTDOCNUM,
		  SUBSTR(AWB, INSTR(AWB,'|',1,1)  
+1,INSTR(AWB,'|',1,2)-INSTR(AWB,'|',1,1)-
		  1) DOCOWRIDR,
		  SUBSTR(AWB, INSTR(AWB,'|',1,2) +1,INSTR(AWB,'|',1,3)-INSTR(AWB,'|',1,2)-1
		  
) DUPNUM,
		  SUBSTR(AWB, INSTR(AWB,'|',1,3) +1) SEQNUM
		FROM
		  (
			SELECT
			  SUBSTR ( CSVAWB , 
DECODE(LEVEL, 1, 1, INSTR(CSVAWB, DELIMITER, 1,
			  LEVEL                                -1)+1) , INSTR(CSVAWB, 
DELIMITER, 1, LEVEL) - DECODE(LEVEL, 1,
			  1 , INSTR(CSVAWB, DELIMITER, 1, LEVEL-1)+1) ) AWB
			FROM
			  
(
				SELECT ? AS CSVAWB, ',' AS DELIMITER
				FROM
				  DUAL
			  )
			  CONNECT BY INSTR(CSVAWB, DELIMITER, 
1, LEVEL)> 0
		  )
	  )
	  SHP
	ON
	  SHP.DOCOWRIDR   = ULDSHP.DOCOWRIDR
	AND SHP.MSTDOCNUM = ULDSHP.MSTDOCNUM
	
AND SHP.DUPNUM    = ULDSHP.DUPNUM
	AND SHP.SEQNUM    = ULDSHP.SEQNUM
	INNER JOIN OPRARPULD ULD
	ON
	  
ULDSHP.ULDNUM   = ULD.ULDNUM
	AND ULDSHP.ARPCOD = ULD.ARPCOD
	AND ULDSHP.CMPCOD = ULD.CMPCOD
	WHERE
	  
ULD.CMPCOD   = ?
	AND ULD.ARPCOD = ?
			]]>
	  </QRY:Source>
	 </QRY:Definition>
	 <QRY:Definition>
		<QRY:Id>32</QRY:Id>
		<QRY:Source Name="operations.flthandling.loadplan.findAcceptedActualULDNumbersTZB" Type="NATIVE">
		   <![CDATA[
SELECT SUM(ULDSHP.WGT) OVER ( PARTITION BY ULDSHP.ULDNUM,ULDSHP.CMPCOD) ULDWGT,
  SUM(ULDSHP.NUMPCS) OVER ( PARTITION BY ULDSHP.ULDNUM, ULDSHP.CMPCOD) ULDPCS,
  SUM(ULDSHP.VOL) OVER ( PARTITION BY ULDSHP.ULDNUM, ULDSHP.CMPCOD) ULDVOL,
  ULD.ULDNUM,
  ULD.CMPCOD,
  ULDSHP.DOCOWRIDR,
  ULDSHP.MSTDOCNUM,
  ULDSHP.DUPNUM,
  ULDSHP.SEQNUM,
  ULD.ULDCTR
		  FROM OPRARPULD ULD
		 LEFT OUTER JOIN OPRULDSHP ULDSHP
ON ULDSHP.ULDNUM  = ULD.ULDNUM
			AND ULDSHP.ARPCOD = ULD.ARPCOD
			AND ULDSHP.CMPCOD = ULD.CMPCOD
		 WHERE ULD.CMPCOD  = ?
AND ULD.ARPCOD    = ?
		   AND ULD.ULDBKGIDR = ?
AND ULD.BKGTYP    = 'TZB'
				UNION
SELECT SUM(SEGSHP.BDPWGT) OVER ( PARTITION BY SEGSHP.ULDNUM,SEGSHP.CMPCOD) ULDWGT,
  SUM(SEGSHP.BDPPCS) OVER ( PARTITION BY SEGSHP.ULDNUM, SEGSHP.CMPCOD) ULDPCS,
  SUM(NVL(SEGSHP.BDPVOL,0.0)) OVER ( PARTITION BY SEGSHP.ULDNUM,SEGSHP.CMPCOD) ULDVOL,
  SEGULD.ULDNUM,
  SEGULD.CMPCOD,
  SEGSHP.DOCOWRIDR,
  SEGSHP.MSTDOCNUM,
  SEGSHP.DUPNUM,
  SEGSHP.SEQNUM,
  SEGULD.ULDCTR
FROM OPRSEGULD SEGULD
LEFT OUTER JOIN OPRSEGULDSHP SEGSHP
ON SEGSHP.FLTNUM     = SEGULD.FLTNUM
AND SEGSHP.FLTCARIDR = SEGULD.FLTCARIDR
AND SEGSHP.FLTSEQNUM = SEGULD.FLTSEQNUM
AND SEGSHP.SEGSERNUM = SEGULD.SEGSERNUM
AND SEGSHP.ULDNUM    = SEGULD.ULDNUM
AND SEGSHP.CMPCOD    = SEGULD.CMPCOD
WHERE SEGULD.CMPCOD  = ?
AND SEGULD.ULDBKGIDR = ?
AND SEGULD.BKGTYP    = 'TZB'
			]]>
	  </QRY:Source>
	 </QRY:Definition>
	 <QRY:Definition>
	 <QRY:Id>33</QRY:Id>
		<QRY:Source Name="operations.flthandling.loadplan.findimportedactualulds" Type="NATIVE">
		   <![CDATA[
			SELECT SUM(ULD.ULDWGT) OVER ( PARTITION BY ULD.ULDNUM,ULD.CMPCOD) ULDWGT,
  SUM(ULD.ACPPCS) OVER ( 
PARTITION BY ULD.ULDNUM,ULD.CMPCOD) ULDPCS,
  SUM(ULD.ACPVOL) OVER ( PARTITION BY ULD.ULDNUM,ULD.CMPCOD) 
ULDVOL,
			ULD.ULDNUM,
			ULD.CMPCOD,
			ULD.DOCOWRIDR,
			ULD.MSTDOCNUM,
			ULD.DUPNUM,
			ULD.SEQNUM,
  
  ULD.ULDCTR
FROM OPRULDACPDTL ULD
INNER JOIN OPRLODPLNSHP LODSHP
ON ULD.CMPCOD     = LODSHP.CMPCOD
AND 
ULD.DOCOWRIDR = LODSHP.DOCOWNIDR
AND ULD.MSTDOCNUM = LODSHP.MSTDOCNUM
AND ULD.DUPNUM    = LODSHP.DUPNUM
AND 
ULD.SEQNUM    = LODSHP.SEQNUM
INNER JOIN 
  (SELECT SUBSTR ( CSVULD , DECODE(LEVEL, 1, 1, INSTR(CSVULD, 
DELIMITER, 1, LEVEL -1)+1) , INSTR(CSVULD, DELIMITER, 1, LEVEL) - DECODE(LEVEL, 1, 1 , INSTR(CSVULD, 
DELIMITER, 1, LEVEL-1)+1) ) ULDNUM
      FROM
        ( SELECT ? AS CSVULD, ',' AS DELIMITER FROM DUAL
        
        )
      CONNECT BY INSTR(CSVULD, DELIMITER, 1, LEVEL)> 1
  ) ULDVAL
ON ULDVAL.ULDNUM     =ULD.ULDNUM
WHERE 
ULD.CMPCOD     =?
AND ULD.ARPCOD       =?
AND LODSHP.FLTCARIDR = ?
AND LODSHP.FLTNUM    = ?
AND LODSHP.FLTSEQNUM 
= ?
UNION
SELECT SUM(ULD.BDPWGT) OVER ( PARTITION BY ULD.ULDNUM,ULD.CMPCOD) ULDWGT,
  SUM(ULD.BDPPCS) 
OVER ( PARTITION BY ULD.ULDNUM,ULD.CMPCOD) ULDPCS,
  SUM(ULD.BDPVOL) OVER ( PARTITION BY ULD.ULDNUM,ULD.CMPCOD) 
ULDVOL,
  ULD.ULDNUM,
  ULD.CMPCOD,
  ULD.DOCOWRIDR,
  ULD.MSTDOCNUM,
  ULD.DUPNUM,
  ULD.SEQNUM,
			
			SEGULD.ULDCTR
			FROM OPRSEGULDSHP ULD
INNER JOIN OPRLODPLNSHP LODSHP
ON ULD.CMPCOD     = LODSHP.CMPCOD
AND 
ULD.DOCOWRIDR = LODSHP.DOCOWNIDR
AND ULD.MSTDOCNUM = LODSHP.MSTDOCNUM
AND ULD.DUPNUM    = LODSHP.DUPNUM
AND 
ULD.SEQNUM    = LODSHP.SEQNUM
			INNER JOIN OPRSEGULD SEGULD 
ON SEGULD.CMPCOD     =ULD.CMPCOD
AND SEGULD.FLTNUM    
=ULD.FLTNUM
			AND SEGULD.FLTCARIDR =ULD.FLTCARIDR
			AND SEGULD.FLTSEQNUM =ULD.FLTSEQNUM
			AND SEGULD.SEGSERNUM 
=ULD.SEGSERNUM  
AND SEGULD.ULDNUM    =ULD.ULDNUM
INNER JOIN
(SELECT SUBSTR ( CSVULD , DECODE(LEVEL, 
1, 1, INSTR(CSVULD, DELIMITER, 1, LEVEL -1)+1) , INSTR(CSVULD, DELIMITER, 1, LEVEL) - DECODE(LEVEL, 1, 
1 , INSTR(CSVULD, DELIMITER, 1, LEVEL-1)+1) ) ULDNUM
      FROM
( SELECT ? AS CSVULD, ',' AS DELIMITER 
FROM DUAL
)
CONNECT BY INSTR(CSVULD, DELIMITER, 1, LEVEL)> 1
  ) ULDVAL
ON ULDVAL.ULDNUM=SEGULD.ULDNUM
INNER 
JOIN OPRFLTSEG LEG
ON LEG.CMPCOD        = ULD.CMPCOD
AND LEG.FLTNUM       = ULD.FLTNUM
AND LEG.FLTCARIDR    
= ULD.FLTCARIDR
AND LEG.FLTSEQNUM    = ULD.FLTSEQNUM
WHERE ULD.CMPCOD     = ?
AND LEG.POU          = 
?
AND LODSHP.FLTCARIDR = ?
AND LODSHP.FLTNUM    = ?
AND LODSHP.FLTSEQNUM = ?
UNION
SELECT
	  SUM(ULDSHP.WGT) 
OVER ( PARTITION BY ULDSHP.ULDNUM,ULDSHP.CMPCOD) ULDWGT,
  SUM(ULDSHP.NUMPCS) OVER ( PARTITION BY ULDSHP.ULDNUM, 
ULDSHP.CMPCOD) ULDPCS,
  SUM(ULDSHP.VOL) OVER ( PARTITION BY ULDSHP.ULDNUM,ULDSHP.CMPCOD) ULDVOL,
	  
  ULD.ULDNUM,
  ULD.CMPCOD,
  ULDSHP.DOCOWRIDR,
  ULDSHP.MSTDOCNUM,
  ULDSHP.DUPNUM,
  ULDSHP.SEQNUM,
	  
    ULD.ULDCTR
	FROM
	  OPRARPULD ULD
INNER JOIN
	  (
		SELECT
		  SUBSTR ( CSVULD , DECODE(LEVEL, 1, 1, 
INSTR(CSVULD, DELIMITER, 1, LEVEL -
		  1)                                                                      
+
		  1) , INSTR(CSVULD, DELIMITER, 1, LEVEL)                                 -
		  DECODE(LEVEL, 1, 
1 , INSTR(CSVULD, DELIMITER, 1, LEVEL                  -
		  1)                                                                      
+
		  1) ) ULDNUM
  FROM
		  (
			SELECT
			  ? AS CSVULD,
			  ',' AS DELIMITER
  FROM
			  DUAL
		  
    )
    CONNECT BY INSTR(CSVULD, DELIMITER, 1, LEVEL)> 1
	  )
	  ULDVAL
	ON
	  ULDVAL.ULDNUM=ULD.ULDNUM
	
LEFT OUTER JOIN OPRULDSHP ULDSHP
	ON
	  ULDSHP.ULDNUM   = ULD.ULDNUM
			AND ULDSHP.ARPCOD = ULD.ARPCOD
	
			AND ULDSHP.CMPCOD = ULD.CMPCOD
	INNER JOIN OPRLODPLNSHP LODSHP
	ON
	  ULDSHP.CMPCOD      = LODSHP.CMPCOD
	
AND ULDSHP.DOCOWRIDR = LODSHP.DOCOWNIDR
	AND ULDSHP.MSTDOCNUM = LODSHP.MSTDOCNUM
	AND ULDSHP.DUPNUM    
= LODSHP.DUPNUM
	AND ULDSHP.SEQNUM    = LODSHP.SEQNUM
	WHERE
	  ULD.CMPCOD   = ?
	AND ULD.ARPCOD = ?
	
AND LODSHP.FLTCARIDR = ?
	AND LODSHP.FLTNUM    = ?
	AND LODSHP.FLTSEQNUM = ?
			]]>
		  </QRY:Source>
	 </QRY:Definition>
	 
	 <QRY:Definition>
	       <QRY:Id>28</QRY:Id>
		   <QRY:Source Name="operations.flthandling.loadplan.findloadplanmismatchdetails" Type="NATIVE">
			<![CDATA[
				SELECT MISMCHMST.CMPCOD,
				  MISMCHMST.FLTCARIDR,
				  MISMCHMST.FLTNUM,
				  MISMCHMST.FLTSEQNUM,
				  MISMCHMST.POL,
				  MISMCHMST.REQULDCFG,
				  MISMCHMST.AVLULDCFG,
				  MISMCHDTL.ULDCAT,
				  MISMCHDTL.ULDTYP,
				  MISMCHDTL.REQNUM,
				  MISMCHDTL.AVLNUM
				FROM OPRLODPLNMISMCHMST MISMCHMST,
				  OPRLODPLNMISMCHDTL MISMCHDTL
				WHERE MISMCHMST.CMPCOD = MISMCHDTL.CMPCOD
				 AND MISMCHMST.FLTCARIDR = MISMCHDTL.FLTCARIDR
				 AND MISMCHMST.FLTNUM = MISMCHDTL.FLTNUM
				 AND MISMCHMST.FLTSEQNUM = MISMCHDTL.FLTSEQNUM
				 AND MISMCHMST.CMPCOD = ?
				 AND MISMCHMST.FLTCARIDR = ?
				 AND MISMCHMST.FLTNUM = ?
				 AND MISMCHMST.FLTSEQNUM = ?
 				 AND MISMCHMST.POL = ?
			]]>
		  </QRY:Source>
	 </QRY:Definition>	  
	 
	 <QRY:Definition>
            <QRY:Id>17</QRY:Id>
         <QRY:Source Name="operations.flthandling.loadplan.jto.findLoadPlanPositionDetails" Type="NATIVE">
        <![CDATA[            
        
				 SELECT POL.FLTNUM,
					  POL.FLTCARIDR,
					  DTL.FLTSEQNUM,
					  SUM(PLNSHP.PLNPCS) PLNPCS,
					  SUM(PLNSHP.PLNWGT) PLNWGT,
					  SUM(PLNSHP.PLNVOL) PLNVOL,
					  COUNT(
					CASE
					WHEN PLNSHP.RNUM = 1 THEN 1
					ELSE NULL
					END) AWBCNT,
					  DTL.MANPOS,
					  DTL.LWRPOS,
					  DTL.POS,
					  DTL.POU,
					  DTL.CTG,
					  DTL.CNTPOS,
					  DTL.BLKPOS,
					  DTL.GRPRMK,
					  SCCSTR.SCC,
					  DTL.DTACPTFLG,
					  SUM(
					CASE
					WHEN BKGSUM.MABOLYPLN = 'H' THEN 1
					ELSE 0
					END) MABOLYPLNFLG,
					  SUM(
					CASE
					WHEN BKGSUM.IRRFLG = 'Y' THEN 1
					ELSE 0
					END) IRRFLG
					FROM OPRLODPLNPOSDTL DTL
					INNER JOIN OPRLODPLNPOL POL ON DTL.CMPCOD = POL.CMPCOD
					 AND DTL.FLTNUM = POL.FLTNUM
					 AND DTL.FLTSEQNUM = POL.FLTSEQNUM
					 AND DTL.FLTCARIDR = POL.FLTCARIDR
					
					 LEFT
					OUTER JOIN
					  (SELECT SHP.CMPCOD,
					     SHP.MSTDOCNUM,
					     SHP.DUPNUM,
					     SHP.SEQNUM,
					     SHP.DOCOWNIDR,
					     SHP.POSNUM,
					     SHP.SEGORG,
					     SHP.FLTCARIDR,
					     SHP.FLTSEQNUM,
					     SHP.FLTNUM,
					     SHP.PLNPCS,
					     SHP.PLNVOL,
					     SHP.PLNWGT,
					     ROW_NUMBER() OVER(PARTITION BY SHP.POSNUM,    SHP.CMPCOD,    SHP.MSTDOCNUM,    SHP.DUPNUM,    SHP.SEQNUM,    SHP.DOCOWNIDR
					   ORDER BY SHP.POSNUM) RNUM
					   FROM OPRLODPLNSHP SHP
					   WHERE SHP.FLTNUM = ?
					   AND SHP.FLTCARIDR = ?
					   AND SHP.CMPCOD = ?
					   AND SHP.FLTSEQNUM = ?)
					PLNSHP ON
					
					 DTL.POS = PLNSHP.POSNUM
					 AND DTL.CMPCOD = PLNSHP.CMPCOD
					 AND DTL.FLTNUM = PLNSHP.FLTNUM
					 AND DTL.FLTSEQNUM = PLNSHP.FLTSEQNUM
					 AND DTL.FLTCARIDR = PLNSHP.FLTCARIDR
					
					 LEFT
					OUTER JOIN(
					
					/* SYS_CONNECT_BY_PATH HELPS TO COMMA SEPARATE THE SCCCOD. STARTS WITH RNM =1 AND THEN FINDS THE NEXT RECORD FOR THE SAME FLIGHT PK,SEGMENT WITH (RNM OF NEXT REC) = (RNM OF CURR REC) +1 */
					SELECT CMPCOD,   FLTNUM,   FLTSEQNUM,   FLTCARIDR,   SEGORG,   POSNUM,   LTRIM(SYS_CONNECT_BY_PATH(SCCCOD,   ' , '),   ' , ') SCC
					FROM(
					
					/* A ROW NUMBER IS ASSIGNED TO THE SCCS ON THE FLIGHT. THIS IS TO IDENTIFY FROM WHICH SCC TO START (ROW_NUMBER =1) AND TO HELP TO CONNECT THE SCCS TO FORM A LOOP OF SCCS WHICH HAS TO BE COMMA SEPARATED*/
					SELECT SCCCOD,   CMPCOD,   FLTNUM,   FLTSEQNUM,   FLTCARIDR,   SEGORG,   POSNUM,   ROW_NUMBER() OVER(PARTITION BY CMPCOD,   FLTNUM,   FLTSEQNUM,   FLTCARIDR,   SEGORG,   POSNUM
					ORDER BY SCCCOD) RNM
					FROM
					  (SELECT DISTINCT SCCCOD,    CMPCOD,    FLTNUM,    FLTSEQNUM,    FLTCARIDR,    SEGORG,    POSNUM
					   FROM(
					
					  /* SCCS OF SHIPMENTS ON THE FLIGHT IS FETCHED FROM OPRSHPMST AND OPRSHPSCC*/
					   SELECT SHPSCCTAB.CMPCOD,    FLTNUM,    FLTSEQNUM,    FLTCARIDR,    SEGORG,    SCCCOD,    POSNUM
					   FROM OPRLODPLNSHP SEGSHP
					   WHERE SCCCOD IS NOT NULL
					   AND SEGSHP.CMPCOD = ?
					   AND SEGSHP.FLTNUM = ?
					   AND SEGSHP.FLTCARIDR = ?
					   AND SEGSHP.FLTSEQNUM = ?
					   AND SEGSHP.SEGORG = ?
					   UNION ALL
					   SELECT SHPSCCTAB.CMPCOD,    FLTNUM,    FLTSEQNUM,    FLTCARIDR,    SEGORG,    SCCCOD,    POSNUM
					   FROM OPRLODPLNSHP SEGSHP,    OPRSHPMST SHPSCCTAB
					   WHERE SCCCOD IS NOT NULL
					   AND SHPSCCTAB.CMPCOD = SEGSHP.CMPCOD
					   AND SHPSCCTAB.DUPNUM = SEGSHP.DUPNUM
					   AND SHPSCCTAB.SEQNUM = SEGSHP.SEQNUM
					   AND SHPSCCTAB.MSTDOCNUM = SEGSHP.MSTDOCNUM
					   AND SHPSCCTAB.DOCOWRIDR = SEGSHP.DOCOWNIDR
					   AND SEGSHP.CMPCOD = ?
					   AND SEGSHP.FLTNUM = ?
					   AND SEGSHP.FLTCARIDR = ?
					   AND SEGSHP.FLTSEQNUM = ?
					   AND SEGSHP.SEGORG = ?) SHPSCCTAB)) B
					   WHERE CONNECT_BY_ISLEAF = 1 CONNECT BY PRIOR FLTNUM = FLTNUM
					   AND PRIOR FLTSEQNUM = FLTSEQNUM
					   AND PRIOR FLTCARIDR = FLTCARIDR
					   AND PRIOR SEGORG = SEGORG
					   AND PRIOR CMPCOD = CMPCOD
					   AND PRIOR POSNUM = POSNUM
					   AND PRIOR RNM = RNM -1 START WITH RNM = 1)
					SCCSTR ON SCCSTR.FLTNUM = POL.FLTNUM
					 AND SCCSTR.FLTCARIDR = POL.FLTCARIDR
					 AND SCCSTR.FLTSEQNUM = POL.FLTSEQNUM
					 AND SCCSTR.SEGORG = POL.POL
					 AND SCCSTR.CMPCOD = POL.CMPCOD
					 AND SCCSTR.POSNUM = PLNSHP.POSNUM LEFT
					OUTER JOIN OPRLODPLNBKGSUM BKGSUM ON BKGSUM.FLTCARIDR = PLNSHP.FLTCARIDR
					 AND BKGSUM.CMPCOD = PLNSHP.CMPCOD
					 AND BKGSUM.FLTNUM = PLNSHP.FLTNUM
					 AND BKGSUM.FLTSEQNUM = PLNSHP.FLTSEQNUM
					 AND BKGSUM.MSTDOCNUM = PLNSHP.MSTDOCNUM
					 AND BKGSUM.DUPNUM = PLNSHP.DUPNUM
					 AND BKGSUM.DOCOWRIDR = PLNSHP.DOCOWNIDR
					 AND BKGSUM.SEQNUM = PLNSHP.SEQNUM
					 AND(NVL(BKGSUM.MABOLYPLN,   'N') = 'H' OR NVL(BKGSUM.IRRFLG,   'I') = 'Y')
					WHERE POL.CMPCOD = ?
					 AND POL.FLTNUM = ?
					 AND POL.FLTCARIDR = ?
					 AND POL.FLTSEQNUM = ?
					 AND POL.POL = ?

			
   
        ]]>	
        </QRY:Source>
  		</QRY:Definition>  
        
        <QRY:Definition>
      <QRY:Id>18</QRY:Id>
      <QRY:Source Name="operations.flthandling.loadplan.planningsummary.findloadplanningsummarydetails" Type="NATIVE">
      <![CDATA[
        
				SELECT
				PLNPOL.CURVER,
				PLNPOL.FCTVER,
				  FLTOPR.SEGDST POU,
				  SUM(NVL(POSDTL.MANPOS,   0)) AS
				MANPOS,
				  SUM(NVL(POSDTL.LWRPOS,   0)) AS
				LWRPOS,
				  SUM(NVL(POSDTL.CNTPOS,   0)) AS
				CNTPOS,
				  SUM(NVL(POSDTL.BLKPOS,   0)) AS
				BLKPOS,
				  NVL( FLTSEG.FCTWGT, 0 ) FCTWGT               ,
				  NVL( FLTSEG.PRTWGT, 0 ) PRTWGT               ,
				  NVL( FLTSEG.MILWGT, 0 ) MILWGT               ,
				  FLTSEG.LODPLNSUMRMK                          ,
				  FLTOPR.SEGSERNUM                             ,
				  (NVL( BKGSUM.BKGWGTSUM, 0 ) + NVL(LYGSUM.LYGWGTSUM,0)) BKGWGTSUM         ,
				  SCCSUM.SCC SCCCOD                            ,
				  NVL(FLTSEG.EICMANPLNPOS,   0) AS
				EICMANPLNPOS,
				  NVL(FLTSEG.EICLWRPLNPOS,   0) AS
				EICLWRPLNPOS,
				  NVL(FLTSEG.EICCNTPLNPOS,   0) AS
				EICCNTPLNPOS
				   FROM OPRLODPLNPOSDTL POSDTL,
				  OPRLODPLNPOL PLNPOL         ,
				  OPRFLTSEG FLTSEG            ,
				  FLTOPRSEG FLTOPR            ,
				  (SELECT CMPCOD              ,
					FLTCARIDR                 ,
					FLTSEQNUM                 ,
					FLTNUM                    ,
					SEGORG                    ,
					SEGDST                    ,
					 SUM(BKGWGT) AS
				  BKGWGTSUM
					 FROM OPRLODPLNBKGSUM
				 GROUP BY CMPCOD,
					FLTCARIDR   ,
					FLTSEQNUM   ,
					FLTNUM      ,
					SEGORG      ,
					 SEGDST)
				BKGSUM,
				(SELECT CMPCOD              ,
					FLTCARIDR                 ,
					FLTSEQNUM                 ,
					FLTNUM                    ,
					SEGORG                    ,
					SEGDST                    ,
					SUM(LYGWGT) AS
					LYGWGTSUM
					FROM OPRLODPLNLYGSHP
					GROUP BY CMPCOD,
					FLTCARIDR   ,
					FLTSEQNUM   ,
					FLTNUM      ,
					SEGORG      ,
					SEGDST)LYGSUM,
				  (
				  /* SYS_CONNECT_BY_PATH helps to comma separate the SCCCOD. Starts with RNM =1 and then finds the next record for the same Flight PK,Segment with (RNM of next rec) = (RNM of curr rec) +1 */
				SELECT B.*,   LTRIM(SYS_CONNECT_BY_PATH(SCCCOD,   ' , '),   ' , ') SCC
				FROM(

					/* A row number is assigned to the SCCs on the flight. This is to identify from which scc to start (ROW_NUMBER =1) and to help to connect the SCCs to form a loop of SCCs which has to be comma separated*/
				SELECT SCCCOD,   CMPCOD,   FLTNUM,   FLTSEQNUM,   FLTCARIDR,   SEGORG,   SEGDST,   ROW_NUMBER() OVER(PARTITION BY CMPCOD,   FLTNUM,   FLTSEQNUM,   FLTCARIDR,   SEGORG,   SEGDST
				ORDER BY SCCCOD) RNM
					   FROM
				  (SELECT DISTINCT SCCCOD,    CMPCOD,    FLTNUM,    FLTSEQNUM,    FLTCARIDR,    SEGORG,    SEGDST
				   FROM(

						/* SCCs of shipments on the flight is fetched from OPRSHPMST and OPRSHPSCC*/
				   SELECT SHPSCCTAB.CMPCOD,    FLTNUM,    FLTSEQNUM,    FLTCARIDR,    SEGORG,    SEGDST,    SCCCOD
				   FROM OPRLODPLNSHP SEGSHP,    OPRSHPSCC SHPSCCTAB
						  WHERE SCCCOD         IS NOT NULL
						AND SHPSCCTAB.CMPCOD    = SEGSHP.CMPCOD
						AND SHPSCCTAB.DUPNUM    = SEGSHP.DUPNUM
						AND SHPSCCTAB.SEQNUM    = SEGSHP.SEQNUM
						AND SHPSCCTAB.MSTDOCNUM = SEGSHP.MSTDOCNUM
						AND SHPSCCTAB.DOCOWRIDR = SEGSHP.DOCOWNIDR
						AND SEGSHP.CMPCOD       = ?
						AND SEGSHP.FLTNUM       = ?
						AND SEGSHP.FLTCARIDR    = ?
						AND SEGSHP.FLTSEQNUM    = ?
						AND SEGSHP.SEGORG       = ?
					  
					  UNION ALL
				   SELECT SHPSCCTAB.CMPCOD,    FLTNUM,    FLTSEQNUM,    FLTCARIDR,    SEGORG,    SEGDST,    SCCCOD
				   FROM OPRLODPLNSHP SEGSHP,    OPRSHPMST SHPSCCTAB
						  WHERE SCCCOD         IS NOT NULL
						AND SHPSCCTAB.CMPCOD    = SEGSHP.CMPCOD
						AND SHPSCCTAB.DUPNUM    = SEGSHP.DUPNUM
						AND SHPSCCTAB.SEQNUM    = SEGSHP.SEQNUM
						AND SHPSCCTAB.MSTDOCNUM = SEGSHP.MSTDOCNUM
						AND SHPSCCTAB.DOCOWRIDR = SEGSHP.DOCOWNIDR
						AND SEGSHP.CMPCOD       = ?
						AND SEGSHP.FLTNUM       = ?
						AND SEGSHP.FLTCARIDR    = ?
						AND SEGSHP.FLTSEQNUM    = ?
				   AND SEGSHP.SEGORG = ?) SHPSCCTAB)) B
					WHERE CONNECT_BY_ISLEAF = 1 CONNECT BY PRIOR SEGDST = SEGDST
				  AND PRIOR FLTNUM          = FLTNUM
				  AND PRIOR FLTSEQNUM       = FLTSEQNUM
				  AND PRIOR FLTCARIDR       = FLTCARIDR
				  AND PRIOR SEGORG          = SEGORG
				  AND PRIOR CMPCOD          = CMPCOD
				   AND PRIOR RNM = RNM -1 START WITH RNM = 1)
				SCCSUM
				WHERE

				  FLTOPR.FLTCARIDR = PLNPOL.FLTCARIDR(+)
				 AND FLTOPR.FLTSEQNUM = PLNPOL.FLTSEQNUM(+)
				 AND FLTOPR.SEGORG = PLNPOL.POL(+)
				 AND FLTOPR.CMPCOD = PLNPOL.CMPCOD(+)
				 AND FLTOPR.FLTNUM = PLNPOL.FLTNUM(+)

				 AND FLTOPR.CMPCOD = BKGSUM.CMPCOD(+)
				 AND FLTOPR.FLTCARIDR = BKGSUM.FLTCARIDR(+)
				 AND FLTOPR.FLTSEQNUM = BKGSUM.FLTSEQNUM(+)
				 AND FLTOPR.FLTNUM = BKGSUM.FLTNUM(+)
				 AND FLTOPR.SEGORG = BKGSUM.SEGORG(+)
				 AND FLTOPR.SEGDST = BKGSUM.SEGDST(+)

				AND FLTOPR.CMPCOD = LYGSUM.CMPCOD(+)
				AND FLTOPR.FLTCARIDR = LYGSUM.FLTCARIDR(+)
				AND FLTOPR.FLTSEQNUM = LYGSUM.FLTSEQNUM(+)
				AND FLTOPR.FLTNUM = LYGSUM.FLTNUM(+)
				AND FLTOPR.SEGORG = LYGSUM.SEGORG(+)
				AND FLTOPR.SEGDST = LYGSUM.SEGDST(+)
         

				 AND FLTOPR.FLTCARIDR = POSDTL.FLTCARIDR(+)
				 AND FLTOPR.FLTSEQNUM = POSDTL.FLTSEQNUM(+)
				 AND FLTOPR.FLTNUM = POSDTL.FLTNUM(+)
				AND FLTOPR.SEGDST = POSDTL.POU(+)
				AND FLTOPR.CMPCOD = POSDTL.CMPCOD(+)

				AND FLTOPR.FLTCARIDR = FLTSEG.FLTCARIDR(+)
				AND FLTOPR.FLTSEQNUM = FLTSEG.FLTSEQNUM(+)
				AND FLTOPR.FLTNUM = FLTSEG.FLTNUM(+)
				AND FLTOPR.SEGORG = FLTSEG.POL(+)
				AND FLTOPR.SEGDST = FLTSEG.POU(+)
				AND FLTOPR.CMPCOD = FLTSEG.CMPCOD(+)

				AND FLTOPR.CMPCOD        = ?
				AND FLTOPR.FLTNUM        = ?
				AND FLTOPR.FLTCARIDR     = ?
				AND FLTOPR.FLTSEQNUM     = ?
				AND FLTOPR.SEGORG        = ?
				AND FLTOPR.SEGSTA !='D'
				AND SCCSUM.FLTNUM (+)    = FLTSEG.FLTNUM
				AND SCCSUM.FLTCARIDR (+) = FLTSEG.FLTCARIDR
				AND SCCSUM.FLTSEQNUM (+) = FLTSEG.FLTSEQNUM
				AND SCCSUM.SEGORG (+)    = FLTSEG.POL
				AND SCCSUM.CMPCOD (+)    = FLTSEG.CMPCOD
				AND SCCSUM.SEGDST (+)    = FLTSEG.POU 
				GROUP BY PLNPOL.CURVER         ,
				  PLNPOL.FCTVER                ,
				  FLTOPR.SEGDST                ,
				  POSDTL.CTG                   ,
				  NVL( FLTSEG.FCTWGT, 0 )      ,
				  NVL( FLTSEG.PRTWGT, 0 )      ,
				  NVL( FLTSEG.MILWGT, 0 )      ,
				  FLTSEG.LODPLNSUMRMK          ,
				  (NVL( BKGSUM.BKGWGTSUM, 0 ) + NVL(LYGSUM.LYGWGTSUM,0))   ,
				  SCCSUM.SCC                   ,
				  FLTOPR.SEGSERNUM             ,
				  NVL( FLTSEG.EICMANPLNPOS, 0 ),
				  NVL( FLTSEG.EICLWRPLNPOS, 0 ),
				  NVL( FLTSEG.EICCNTPLNPOS, 0 )
				ORDER BY FLTOPR.SEGDST
        
        ]]>
      </QRY:Source>
  </QRY:Definition>  	  	
  
  <QRY:Definition>
        <QRY:Id>19</QRY:Id>
           <QRY:Source Name="operations.flthandling.loadplan.findGroupDetails" Type="NATIVE">
          <![CDATA[            
       SELECT POSDTL.POS, POSDTL.POU, 
    
     POSDTL.CFGSERNUM,
     
      COUNT(
      CASE
        WHEN BDPPCS > 0
        THEN MSTDOCNUM
        ELSE NULL
      END ) BDPAWBCNT,
      COUNT(
      CASE
        WHEN AVLPCS > 0
        THEN MSTDOCNUM
        ELSE NULL
      END ) AVLAWBCNT,
      COUNT(
      CASE
        WHEN PLNPCS > 0
        AND PLNPCS > (AVLPCS+BDPPCS)
        THEN MSTDOCNUM
        ELSE NULL
      END ) REMAWBCNT,
      COUNT(
      CASE
        WHEN PLNPCS > 0
        THEN MSTDOCNUM
        ELSE NULL
      END ) PLNAWBCNT,
	   SHPDTL.SEGSERNUM,
   SUM(
  CASE
    WHEN MABOLYPLN = 'H'
    THEN 1
    ELSE 0
  END) MABOLYPLNFLG,
  SUM(
  CASE
    WHEN IRRFLG = 'Y'
    THEN 1
    ELSE 0
  END) IRRFLG,
 SHPDTL.SCC SCC
       FROM OPRLODPLNPOSDTL POSDTL,
      (SELECT ARPSHP.CMPCOD       ,
        ARPSHP.ARPCOD             ,
        PLNSHP.FLTNUM             ,
        PLNSHP.FLTCARIDR          ,
        PLNSHP.FLTSEQNUM          ,
        PLNSHP.POSNUM             ,
        ARPSHP.MSTDOCNUM          ,
        ROW_NUMBER() OVER(PARTITION BY PLNSHP.POSNUM,ARPSHP.CMPCOD,    ARPSHP.MSTDOCNUM,    ARPSHP.DOCOWRIDR,    ARPSHP.SEQNUM,    ARPSHP.DUPNUM
     	ORDER BY ARPSHP.MSTDOCNUM) RNUM,
        ARPSHP.BDPPCS             ,
        ARPSHP.AVLPCS             ,
        PLNSHP.PLNPCS,
		PLNSHP.SEGSERNUM		  ,
		BKGSUM.MABOLYPLN          ,
		BKGSUM.IRRFLG             ,
  		SCCSTR.SCC
         FROM OPRARPSHP ARPSHP,
        OPRLODPLNSHP PLNSHP,
        OPRLODPLNBKGSUM BKGSUM,
        OPRLODPLNLYGSHP LYGSHP,
        (
		  /* SYS_CONNECT_BY_PATH HELPS TO COMMA SEPARATE THE SCCCOD. STARTS WITH RNM =1 AND THEN FINDS THE NEXT RECORD FOR THE SAME FLIGHT PK,SEGMENT WITH (RNM OF NEXT REC) = (RNM OF CURR REC) +1 */
		   SELECT CMPCOD,
		    FLTNUM      ,
		    FLTSEQNUM   ,
		    FLTCARIDR   ,
		    SEGORG      ,
		    POSNUM      ,
		    LTRIM(SYS_CONNECT_BY_PATH(SCCCOD, ' , '), ' , ') SCC
		     FROM
		    (
		    /* A ROW NUMBER IS ASSIGNED TO THE SCCS ON THE FLIGHT. THIS IS TO IDENTIFY FROM WHICH SCC TO START (ROW_NUMBER =1) AND TO HELP TO CONNECT THE SCCS TO FORM A LOOP OF SCCS WHICH HAS TO BE COMMA SEPARATED*/
		     SELECT SCCCOD,
		      CMPCOD      ,
		      FLTNUM      ,
		      FLTSEQNUM   ,
		      FLTCARIDR   ,
		      SEGORG      ,
		      POSNUM      ,
		      ROW_NUMBER() OVER(PARTITION BY CMPCOD, FLTNUM, FLTSEQNUM, FLTCARIDR, SEGORG,POSNUM ORDER BY SCCCOD) RNM
		       FROM
		      (SELECT DISTINCT SCCCOD,
		        CMPCOD               ,
		        FLTNUM               ,
		        FLTSEQNUM            ,
		        FLTCARIDR            ,
		        SEGORG               ,
		        POSNUM
		         FROM
		        (
		        /* SCCS OF SHIPMENTS ON THE FLIGHT IS FETCHED FROM OPRSHPMST AND OPRSHPSCC*/
		         SELECT SHPSCCTAB.CMPCOD,
		          FLTNUM                ,
		          FLTSEQNUM             ,
		          FLTCARIDR             ,
		          SEGORG                ,
		          SCCCOD				,
		          POSNUM
		           FROM OPRLODPLNSHP SEGSHP,
		          OPRSHPSCC SHPSCCTAB
		          WHERE SCCCOD         IS NOT NULL
		        AND SHPSCCTAB.CMPCOD    = SEGSHP.CMPCOD
		        AND SHPSCCTAB.DUPNUM    = SEGSHP.DUPNUM
		        AND SHPSCCTAB.SEQNUM    = SEGSHP.SEQNUM
		        AND SHPSCCTAB.MSTDOCNUM = SEGSHP.MSTDOCNUM
		        AND SHPSCCTAB.DOCOWRIDR = SEGSHP.DOCOWNIDR
		        AND SEGSHP.SEGORG       = ?
		        AND SEGSHP.FLTNUM       = ?
		        AND SEGSHP.FLTCARIDR    = ?
		        AND SEGSHP.FLTSEQNUM    = ?
		       	AND SEGSHP.CMPCOD       = ?

		      UNION ALL

		         SELECT SHPSCCTAB.CMPCOD,
		          FLTNUM                ,
		          FLTSEQNUM             ,
		          FLTCARIDR             ,
		          SEGORG                ,
		          SCCCOD				,
		          POSNUM
		           FROM OPRLODPLNSHP SEGSHP,
		          OPRSHPMST SHPSCCTAB
		          WHERE SCCCOD         IS NOT NULL
		        AND SHPSCCTAB.CMPCOD    = SEGSHP.CMPCOD
		        AND SHPSCCTAB.DUPNUM    = SEGSHP.DUPNUM
		        AND SHPSCCTAB.SEQNUM    = SEGSHP.SEQNUM
		        AND SHPSCCTAB.MSTDOCNUM = SEGSHP.MSTDOCNUM
		        AND SHPSCCTAB.DOCOWRIDR = SEGSHP.DOCOWNIDR
		        AND SEGSHP.SEGORG       = ?
				AND SEGSHP.FLTNUM       = ?
				AND SEGSHP.FLTCARIDR    = ?
				AND SEGSHP.FLTSEQNUM    = ?
		       	AND SEGSHP.CMPCOD       = ?
		        ) SHPSCCTAB
		      )
		    ) B
		    WHERE CONNECT_BY_ISLEAF = 1 CONNECT BY PRIOR FLTNUM = FLTNUM
		  AND PRIOR FLTSEQNUM       = FLTSEQNUM
		  AND PRIOR FLTCARIDR       = FLTCARIDR
		  AND PRIOR SEGORG          = SEGORG
		  AND PRIOR CMPCOD          = CMPCOD
		  AND PRIOR POSNUM		    = POSNUM
		  AND PRIOR RNM             = RNM -1 START
		  WITH RNM                  = 1
  ) SCCSTR
        WHERE ARPSHP.MSTDOCNUM = PLNSHP.MSTDOCNUM
      AND ARPSHP.DOCOWRIDR     = PLNSHP.DOCOWNIDR
      AND ARPSHP.DUPNUM        = PLNSHP.DUPNUM
      AND ARPSHP.SEQNUM        = PLNSHP.SEQNUM
      AND ARPSHP.CMPCOD        = PLNSHP.CMPCOD
      AND ARPSHP.ARPCOD    = PLNSHP.SEGORG
      
		AND PLNSHP.DOCOWNIDR     = BKGSUM.DOCOWRIDR(+)
		AND PLNSHP.DUPNUM        = BKGSUM.DUPNUM(+)
		AND PLNSHP.SEQNUM        = BKGSUM.SEQNUM(+)
		AND PLNSHP.CMPCOD        = BKGSUM.CMPCOD(+)
		AND PLNSHP.MSTDOCNUM     = BKGSUM.MSTDOCNUM(+)
		AND PLNSHP.FLTCARIDR     = BKGSUM.FLTCARIDR(+)
		AND PLNSHP.FLTNUM        = BKGSUM.FLTNUM(+)
		AND PLNSHP.FLTSEQNUM     = BKGSUM.FLTSEQNUM(+)
		
		AND PLNSHP.DOCOWNIDR     = LYGSHP.DOCOWRIDR(+)
		AND PLNSHP.DUPNUM        = LYGSHP.DUPNUM(+)
		AND PLNSHP.SEQNUM        = LYGSHP.SEQNUM(+)
		AND PLNSHP.CMPCOD        = LYGSHP.CMPCOD(+)
		AND PLNSHP.MSTDOCNUM     = LYGSHP.MSTDOCNUM(+)
		AND PLNSHP.FLTCARIDR     = LYGSHP.FLTCARIDR(+)
		AND PLNSHP.FLTNUM        = LYGSHP.FLTNUM(+)
		AND PLNSHP.FLTSEQNUM     = LYGSHP.FLTSEQNUM(+)
	  
	  AND SCCSTR.FLTNUM(+)     = PLNSHP.FLTNUM
	  AND SCCSTR.FLTCARIDR(+)  = PLNSHP.FLTCARIDR
	  AND SCCSTR.fltseqnum(+)  = PLNSHP.fltseqnum
	  AND SCCSTR.CMPCOD(+)     = PLNSHP.CMPCOD
 	  AND SCCSTR.POSNUM(+) 	   = PLNSHP.POSNUM
      AND ARPSHP.ARPCOD    = ?
       AND PLNSHP.FLTNUM    =  ?
       AND PLNSHP.FLTCARIDR =  ?
             AND PLNSHP.FLTSEQNUM =  ?
      AND PLNSHP.CMPCOD    =  ?
       ORDER BY PLNSHP.POSNUM,ARPSHP.CMPCOD,
       ARPSHP.MSTDOCNUM,
       ARPSHP.DOCOWRIDR,
       ARPSHP.SEQNUM,
       ARPSHP.DUPNUM)
  		SHPDTL
     
      WHERE SHPDTL.POSNUM(+) = POSDTL.POS
    AND SHPDTL.FLTCARIDR(+)  = POSDTL.FLTCARIDR
    AND SHPDTL.FLTNUM(+)     = POSDTL.FLTNUM
    AND SHPDTL.FLTSEQNUM(+)  = POSDTL.FLTSEQNUM
    AND SHPDTL.CMPCOD(+)     = POSDTL.CMPCOD
    AND POSDTL.FLTNUM        =  ?
    AND POSDTL.FLTCARIDR     =  ?
    AND POSDTL.FLTSEQNUM     =  ?
    AND POSDTL.CMPCOD        =  ?
    AND SHPDTL.RNUM(+) = 1
    GROUP BY POSDTL.POS, POSDTL.POU, POSDTL.CTG, POSDTL.MANPOS, POSDTL.BLKPOS, POSDTL.CNTPOS, POSDTL.LWRPOS, POSDTL.GRPRMK,POSDTL.LODVER, POSDTL.SERNUM
    ,POSDTL.ONTPOU, POSDTL.ONTFLTNUM, POSDTL.ONTFLTCARCOD, POSDTL.ONTFLTDAT, SHPDTL.SEGSERNUM,SHPDTL.SCC
                  
          ]]>
           </QRY:Source>
  </QRY:Definition>  
  
  <QRY:Definition>
        <QRY:Id>21</QRY:Id>
           <QRY:Source Name="operations.flthandling.loadplan.findPoolGroupDetail" Type="NATIVE">
          <![CDATA[            
         SELECT 'POOL' POS , '' POU, '' CTG, 
			SUM(MANPOS) MANPOS,SUM(BLKPOS) BLKPOS,SUM(CNTPOS) CNTPOS, SUM(LWRPOS) LWRPOS, 
			0 LODVER,0 SERNUM,'' GRPRMK,
			NULL ONTPOU, NULL ONTFLTNUM, NULL ONTFLTCARCOD, NULL ONTFLTDAT,
			0 BDPAWBCNT, 0 AVLAWBCNT, 0 REMAWBCNT, COUNT(MSTDOCNUM) PLNAWBCNT,0 SEGSERNUM,  0 MABOLYPLN, 0 IRRFLG,NULL SCC
	        FROM OPRLODPLNBKGSUM BKG
	        WHERE
			BKG.SEGORG =  ?
			AND BKG.FLTNUM =  ?
			AND BKG.FLTCARIDR =  ?
			AND BKG.FLTSEQNUM =  ?
			AND BKG.CMPCOD =  ?
			AND NOT EXISTS 
			(SELECT 1 FROM OPRLODPLNSHP PLNSHP 
			WHERE PLNSHP.CMPCOD = BKG.CMPCOD
			AND PLNSHP.MSTDOCNUM = BKG.MSTDOCNUM
			AND PLNSHP.DOCOWNIDR = BKG.DOCOWRIDR
			AND PLNSHP.DUPNUM = BKG.DUPNUM
			AND PLNSHP.SEQNUM = BKG.SEQNUM)
	GROUP BY 'POOL'         
          ]]>
           </QRY:Source>
  </QRY:Definition>
  
   <QRY:Definition>
    <QRY:Id>22</QRY:Id>
    <QRY:Source Name="operations.flthandling.loadplan.exportflightlisting.findforecastdetails" Type="NATIVE">
    <![CDATA[
      SELECT ARLMST.TWOAPHCOD, POSDTL.FLTNUM, LEG.STD, LEG.LEGORG, LEG.TALNUM,POSDTL.POU, POSDTL.CTG,
          SUM(POSDTL.MANPOS) AS MANPOS,
          SUM(POSDTL.LWRPOS) AS LWRPOS,
          SUM(POSDTL.CNTPOS) AS CNTPOS,
          SUM(POSDTL.BLKPOS) AS BLKPOS,
          FLTSEG.FCTWGT, FLTSEG.PRTWGT,BKGSUM.SEGDST,
          FLTSEG.MILWGT, FLTSEG.LODPLNSUMRMK,
          (NVL(BKGSUM.BKGWGTSUM,0)+NVL(LYGSUM.LYGWGTSUM,0))       BKGWGTSUM    ,		  	
          SCCSUM.SCC SCCCOD,
          EXP.FLTSEQNUM
      FROM  OPRLODPLNPOSDTL POSDTL,OPRLODPLNPOL PLNPOL,OPRFLTSEG FLTSEG,
        (SELECT CMPCOD, FLTCARIDR,FLTSEQNUM, FLTNUM, SEGORG,SEGDST,SUM(BKGWGT) AS BKGWGTSUM
          FROM OPRLODPLNBKGSUM
          GROUP BY CMPCOD, FLTCARIDR,FLTSEQNUM, FLTNUM, SEGORG,SEGDST) BKGSUM, 
          (SELECT CMPCOD              ,
	      FLTCARIDR                 ,
	      FLTSEQNUM                 ,
	      FLTNUM                    ,
	      SEGORG                    ,
	      SEGDST                    ,
	      SUM(LYGWGT) AS LYGWGTSUM
	       FROM OPRLODPLNLYGSHP
	   GROUP BY CMPCOD,
	      FLTCARIDR   ,
	      FLTSEQNUM   ,
	      FLTNUM      ,
	      SEGORG      ,
	      SEGDST
  ) LYGSUM,
          (
		  				  /* SYS_CONNECT_BY_PATH helps to comma separate the SCCCOD. Starts with RNM =1 and then finds the next record for the same Flight PK,Segment with (RNM of next rec) = (RNM of curr rec) +1 */
		  				   SELECT B.*,
		  					LTRIM( SYS_CONNECT_BY_PATH( SCCCOD, ' , ' ), ' , ' ) SCC
		  					 FROM
		  					(
		  					/* A row number is assigned to the SCCs on the flight. This is to identify from which scc to start (ROW_NUMBER =1) and to help to connect the SCCs to form a loop of SCCs which has to be comma separated*/
		  					 SELECT SCCCOD,
		  					  CMPCOD      ,
		  					  FLTNUM      ,
		  					  FLTSEQNUM   ,
		  					  FLTCARIDR   ,
		  					  SEGORG      ,
		  					  SEGDST      ,
		  					  ROW_NUMBER( ) OVER( PARTITION BY CMPCOD, FLTNUM, FLTSEQNUM, FLTCARIDR, SEGORG, SEGDST ORDER BY SCCCOD ) RNM
		  					   FROM
		  					  ( SELECT DISTINCT SCCCOD,
		  						CMPCOD                ,
		  						FLTNUM                ,
		  						FLTSEQNUM             ,
		  						FLTCARIDR             ,
		  						SEGORG                ,
		  						SEGDST
		  						 FROM
		  						(
		  						/* SCCs of shipments on the flight is fetched from OPRSHPMST and OPRSHPSCC*/
		  						 SELECT SHPSCCTAB.CMPCOD,
		  						  FLTNUM                ,
		  						  FLTSEQNUM             ,
		  						  FLTCARIDR             ,
		  						  SEGORG                ,
		  						  SEGDST                ,
		  						  SCCCOD
		  						   FROM OPRLODPLNSHP SEGSHP
		  					  UNION ALL
		  						 SELECT SHPSCCTAB.CMPCOD,
		  						  FLTNUM                ,
		  						  FLTSEQNUM             ,
		  						  FLTCARIDR             ,
		  						  SEGORG                ,
		  						  SEGDST                ,
		  						  SCCCOD
		  						   FROM OPRLODPLNSHP SEGSHP,
		  						  OPRSHPMST SHPSCCTAB
		  						  WHERE SCCCOD         IS NOT NULL
		  						AND SHPSCCTAB.CMPCOD    = SEGSHP.CMPCOD
		  						AND SHPSCCTAB.DUPNUM    = SEGSHP.DUPNUM
		  						AND SHPSCCTAB.SEQNUM    = SEGSHP.SEQNUM
		  						AND SHPSCCTAB.MSTDOCNUM = SEGSHP.MSTDOCNUM
		  						AND SHPSCCTAB.DOCOWRIDR = SEGSHP.DOCOWNIDR
		  						) SHPSCCTAB
		  					  )
		  					) B
		  					WHERE CONNECT_BY_ISLEAF = 1 CONNECT BY PRIOR SEGDST = SEGDST
		  				  AND PRIOR FLTNUM          = FLTNUM
		  				  AND PRIOR FLTSEQNUM       = FLTSEQNUM
		  				  AND PRIOR FLTCARIDR       = FLTCARIDR
		  				  AND PRIOR SEGORG          = SEGORG
		  				  AND PRIOR CMPCOD          = CMPCOD
		  				  AND PRIOR RNM             = RNM - 1 START
		  				  WITH RNM                  = 1
				  ) SCCSUM,
        FLTOPRLEG LEG, FLTOPRMST EXP, OPREXPFLTHIS HIS ,SHRARLMST ARLMST
      WHERE PLNPOL.FLTNUM = POSDTL.FLTNUM
         AND PLNPOL.FLTCARIDR = POSDTL.FLTCARIDR
         AND PLNPOL.FLTSEQNUM = POSDTL.FLTSEQNUM
         AND PLNPOL.CMPCOD = POSDTL.CMPCOD

         AND PLNPOL.FLTNUM = EXP.FLTNUM(+)
         AND PLNPOL.FLTCARIDR = EXP.FLTCARIDR(+)
         AND PLNPOL.FLTSEQNUM = EXP.FLTSEQNUM(+)
         AND PLNPOL.CMPCOD = EXP.CMPCOD(+)

         AND PLNPOL.FLTNUM = HIS.FLTNUM(+)
         AND PLNPOL.FLTCARIDR = HIS.FLTCARIDR(+)
         AND PLNPOL.FLTSEQNUM = HIS.FLTSEQNUM(+)
         AND PLNPOL.CMPCOD = HIS.CMPCOD(+)
         AND PLNPOL.POL = HIS.ARPCOD(+)
         AND HIS.ARPCOD(+) = ?
         AND POSDTL.FLTNUM = FLTSEG.FLTNUM(+)
         AND POSDTL.FLTCARIDR = FLTSEG.FLTCARIDR(+)
         AND POSDTL.FLTSEQNUM = FLTSEG.FLTSEQNUM(+)
         AND POSDTL.CMPCOD = FLTSEG.CMPCOD(+)
         AND POSDTL.POU = FLTSEG.POU(+)
         AND FLTSEG.POL(+) = ?
         AND POSDTL.CMPCOD        = BKGSUM.CMPCOD(+)
AND POSDTL.FLTCARIDR     = BKGSUM.FLTCARIDR(+)
AND POSDTL.FLTSEQNUM     = BKGSUM.FLTSEQNUM(+)
AND POSDTL.FLTNUM        = BKGSUM.FLTNUM(+)
AND POSDTL.POU          = BKGSUM.SEGDST(+)
AND POSDTL.CMPCOD        = LYGSUM.CMPCOD(+)
AND POSDTL.FLTCARIDR     = LYGSUM.FLTCARIDR(+)
AND POSDTL.FLTSEQNUM     = LYGSUM.FLTSEQNUM(+)
AND POSDTL.FLTNUM        = LYGSUM.FLTNUM(+)
AND POSDTL.POU          = LYGSUM.SEGDST(+)
         AND PLNPOL.FLTNUM = LEG.FLTNUM(+)
         AND PLNPOL.FLTCARIDR = LEG.FLTCARIDR(+)
         AND PLNPOL.FLTSEQNUM = LEG.FLTSEQNUM(+)
         AND PLNPOL.CMPCOD = LEG.CMPCOD(+)
         AND PLNPOL.POL = LEG.LEGORG(+)
         AND SCCSUM.FLTNUM (+)    = FLTSEG.FLTNUM
		 AND SCCSUM.FLTCARIDR (+) = FLTSEG.FLTCARIDR
		 AND SCCSUM.FLTSEQNUM (+) = FLTSEG.FLTSEQNUM
		 AND SCCSUM.SEGORG (+)    = FLTSEG.POL
		 AND SCCSUM.CMPCOD (+)    = FLTSEG.CMPCOD
		 AND SCCSUM.SEGDST (+)    = FLTSEG.POU
		 AND ARLMST.ARLIDR  =  EXP.FLTCARIDR
         AND LEG.CMPCOD(+) = ?
      ]]>
    </QRY:Source>
  </QRY:Definition>
  
  <QRY:Definition>
        <QRY:Id>23</QRY:Id>
           <QRY:Source Name="operations.flthandling.loadplan.findHouseTransactionDetailsForLoadPlan" Type="NATIVE">
          <![CDATA[     
                 
			 SELECT MST.CMPCOD CMPCOD          ,
			  MST.MSTDOCNUM MSTDOCNUM          ,
			  HSE.DOCNUM                       ,
			  MST.DOCOWRIDR DOCOWRIDR          ,
			  MST.DUPNUM DUPNUM                ,
			  BKGSUM.SEQNUM MSTSEQNUM          ,
			  COALESCE(HSE.SEQNUM,   0) HSESEQNUM,
			  HSE.SERNUM                       ,
			  HSE.PCS                          ,
			  HSE.WGT                          ,
			  HSE.TXNCOD                       ,
			  HSE.TXNREFONE                    ,
			  HSE.TXNREFTWO                    ,
			  HSE.TXNREFTHR                    ,
			  HSE.TXNREFFOR AS	TXNREFFOR,
			  HSE.TXNREFFIV                    ,
			  HSE.TXNREFSIX                    ,
			  MST.STDPCS                       ,
			  MST.STDWGT                       ,
			  HSE.ARPCOD
			FROM OPRLODPLNBKGSUM BKGSUM,
			  OPRSHPMST MST,
			  OPRTXNHSE HSE
			WHERE BKGSUM.MSTDOCNUM = MST.MSTDOCNUM
			 AND BKGSUM.DOCOWRIDR = MST.DOCOWRIDR
			 AND BKGSUM.DUPNUM = MST.DUPNUM
			 AND BKGSUM.CMPCOD = MST.CMPCOD			
			 AND MST.CMPCOD = HSE.CMPCOD
			 AND MST.MSTDOCNUM = HSE.MSTDOCNUM
			 AND MST.DUPNUM = HSE.DUPNUM
			 AND MST.DOCOWRIDR = HSE.DOCOWRIDR
			 AND MST.SEQNUM = HSE.SEQNUM
			 AND BKGSUM.FLTCARIDR = HSE.TXNREFONE
			 AND BKGSUM.FLTNUM = HSE.TXNREFTWO
			 AND BKGSUM.FLTSEQNUM = HSE.TXNREFTHR 
			 AND BKGSUM.FLTCARIDR = ?
			 AND BKGSUM.FLTNUM = ?
			 AND BKGSUM.FLTSEQNUM = ?
			 AND BKGSUM.CMPCOD = ?
			 AND HSE.ARPCOD(+) = ?
			 AND HSE.TXNCOD(+) = ?
			
			UNION ALL
			 
			 SELECT MST.CMPCOD CMPCOD          ,
			  MST.MSTDOCNUM MSTDOCNUM          ,
			  HSE.DOCNUM                       ,
			  MST.DOCOWRIDR DOCOWRIDR          ,
			  MST.DUPNUM DUPNUM                ,
			  LYGSHP.SEQNUM MSTSEQNUM          ,
			  COALESCE(HSE.SEQNUM, 0) HSESEQNUM,
			  HSE.SERNUM                       ,
			  HSE.PCS                          ,
			  HSE.WGT                          ,
			  HSE.TXNCOD                       ,
			  HSE.TXNREFONE                    ,
			  HSE.TXNREFTWO                    ,
			  HSE.TXNREFTHR                    ,
			  HSE.TXNREFFOR AS TXNREFFOR       ,
			  HSE.TXNREFFIV                    ,
			  HSE.TXNREFSIX                    ,
			  MST.STDPCS                       ,
			  MST.STDWGT                       ,
			  HSE.ARPCOD
			   FROM OPRLODPLNLYGSHP LYGSHP,
			  OPRSHPMST MST               ,
			  OPRTXNHSE HSE
			  WHERE LYGSHP.MSTDOCNUM = MST.MSTDOCNUM
			AND LYGSHP.DOCOWRIDR     = MST.DOCOWRIDR
			AND LYGSHP.DUPNUM        = MST.DUPNUM
			AND LYGSHP.CMPCOD        = MST.CMPCOD
			AND MST.CMPCOD           = HSE.CMPCOD
			AND MST.MSTDOCNUM        = HSE.MSTDOCNUM
			AND MST.DUPNUM           = HSE.DUPNUM
			AND MST.DOCOWRIDR        = HSE.DOCOWRIDR
			AND MST.SEQNUM           = HSE.SEQNUM
			AND LYGSHP.FLTCARIDR     = HSE.TXNREFONE
			AND LYGSHP.FLTNUM        = HSE.TXNREFTWO
			AND LYGSHP.FLTSEQNUM     = HSE.TXNREFTHR
			AND LYGSHP.FLTCARIDR     = ?
			AND LYGSHP.FLTNUM        = ?
			AND LYGSHP.FLTSEQNUM     = ?
			AND LYGSHP.CMPCOD        = ?
			AND HSE.ARPCOD(+)        = ?
			AND HSE.TXNCOD(+)        = ?
			ORDER BY CMPCOD,
			  MSTDOCNUM    ,
			  DOCOWRIDR    ,
			  DUPNUM       ,
			  TXNREFFOR,
			  HSESEQNUM       
			  

          ]]>
           </QRY:Source>
  </QRY:Definition>
  
  <QRY:Definition>
        <QRY:Id>24</QRY:Id>
           <QRY:Source Name="operations.flthandling.loadplan.findHouseShipmentsForLoadPlan" Type="NATIVE">
          <![CDATA[            
       
			 SELECT MST.CMPCOD CMPCOD                     ,
			  MST.MSTDOCNUM MSTDOCNUM                     ,
			  MST.DOCNUM,
			  MST.DOCOWRIDR DOCOWRIDR                     ,
			  MST.DUPNUM DUPNUM                           ,
			  MST.SEQNUM SEQNUM                           ,
			  MST.STDPCS,
			  MST.STDWGT,
			  (MST.STDPCS -SUM(NVL(HSE.PCS,   0))) AS REMPCS,			
			  (MST.STDWGT -SUM(NVL(HSE.WGT,   0))) AS REMWGT
			   FROM OPRLODPLNBKGSUM BKGSUM
			JOIN OPRSHPMST MST
				 ON BKGSUM.MSTDOCNUM = MST.MSTDOCNUM
			 AND BKGSUM.DOCOWRIDR = MST.DOCOWRIDR
			 AND BKGSUM.DUPNUM = MST.DUPNUM
			 AND BKGSUM.CMPCOD = MST.CMPCOD
			 AND BKGSUM.FLTCARIDR = ?
			 AND BKGSUM.FLTNUM = ?
			 AND BKGSUM.FLTSEQNUM = ?
			 AND BKGSUM.CMPCOD = ?
			LEFT OUTER JOIN OPRTXNHSE HSE
				 ON MST.MSTDOCNUM = HSE.MSTDOCNUM
			 AND MST.DUPNUM = HSE.DUPNUM
			 AND MST.DOCOWRIDR = HSE.DOCOWRIDR
			 AND MST.CMPCOD = HSE.CMPCOD
			 AND MST.SEQNUM = HSE.SEQNUM
			 AND HSE.ARPCOD = ?
			AND( (HSE.TXNCOD      = 'LDP'
			AND (HSE.CMPCOD
			  || '-'
			  || HSE.TXNREFONE
			  || '-'
			  || HSE.TXNREFTWO
			  || '-'
			  || HSE.TXNREFTHR                          = ?)
			 AND BKGSUM.MABOLYPLN <> 'M') 
			OR (HSE.TXNCOD                              = 'ACP'
			 AND(HSE.CMPCOD,   HSE.ARPCOD,   HSE.TXNREFFOR) IN
			  (SELECT CMPCOD,
				ARPCOD      ,
				ULDNUM
			   FROM OPRULDACPDTL
			   WHERE ARPCOD = ?
			   AND CMPCOD = ?
			   AND MSTDOCNUM = HSE.MSTDOCNUM
			  AND DOCOWRIDR  = HSE.DOCOWRIDR
			  ))
			OR(HSE.TXNCOD = 'MFT'
			AND (HSE.CMPCOD
			  || '-'
			  || HSE.TXNREFONE
			  || '-'
			  || HSE.TXNREFTWO
			  || '-'
			  || HSE.TXNREFTHR != ?)
			AND EXISTS
			  (SELECT 1
				 FROM OPRARPEXPFLT FLT
			   WHERE FLT.CMPCOD= HSE.CMPCOD
			   AND FLT.FLTCARIDR = HSE.TXNREFONE
			   AND FLT.FLTNUM = HSE.TXNREFTWO
			   AND FLT.FLTSEQNUM = HSE.TXNREFTHR
			   AND FLT.ARPCOD = HSE.ARPCOD
			  AND FLT.FINFLG    = 'Y'
			  ) )
			 OR( HSE.TXNCOD = 'BDP'
			   AND (HSE.CMPCOD,   HSE.ARPCOD,   HSE.TXNREFFOR, HSE.MSTDOCNUM, HSE.DOCOWRIDR) IN
			  (SELECT CMPCOD,
				ARPCOD      ,
				ULDNUM      ,
				MSTDOCNUM   ,
				DOCOWRIDR
			   FROM OPRULDSHP
			   WHERE ARPCOD = ?
			   AND CMPCOD = ?
			   UNION ALL
			   
			   SELECT CMPCOD,
				SEGORG      ,
				ULDNUM      ,
				MSTDOCNUM   ,
				DOCOWNIDR
			   FROM OPRLODPLNSHP
			   WHERE SEGORG = ?
			   AND CMPCOD = ?
			   AND FLTCARIDR = ?
			   AND FLTNUM  = ?
			   AND FLTSEQNUM = ?
			   AND SERNUM = 1
			   AND LODVER = 1
			  AND ULDNUM    IS NOT NULL
			  ) ))
			GROUP BY MST.CMPCOD,
			  MST.MSTDOCNUM,
			  MST.DOCNUM,
			  MST.DOCOWRIDR,
			  MST.DUPNUM,
			  MST.SEQNUM,
			  MST.STDPCS,
			  MST.STDWGT

			UNION ALL
			 
			 SELECT MST.CMPCOD CMPCOD                     ,
			  MST.MSTDOCNUM MSTDOCNUM                     ,
			  MST.DOCNUM                                  ,
			  MST.DOCOWRIDR DOCOWRIDR                     ,
			  MST.DUPNUM DUPNUM                           ,
			  MST.SEQNUM SEQNUM                           ,
			  MST.STDPCS                                  ,
			  MST.STDWGT                                  ,
			  (MST.STDPCS -SUM(NVL(HSE.PCS, 0))) AS REMPCS,
			  (MST.STDWGT -SUM(NVL(HSE.WGT, 0))) AS REMWGT
			   FROM OPRLODPLNLYGSHP LYGSHP
			JOIN OPRSHPMST MST
				 ON LYGSHP.MSTDOCNUM = MST.MSTDOCNUM
			AND LYGSHP.DOCOWRIDR     = MST.DOCOWRIDR
			AND LYGSHP.DUPNUM        = MST.DUPNUM
			AND LYGSHP.CMPCOD        = MST.CMPCOD
			AND LYGSHP.FLTCARIDR     = ?
			AND LYGSHP.FLTNUM        = ?
			AND LYGSHP.FLTSEQNUM     = ?
			AND LYGSHP.CMPCOD        = ?
			LEFT OUTER JOIN OPRTXNHSE HSE
				 ON MST.MSTDOCNUM = HSE.MSTDOCNUM
			AND MST.DUPNUM        = HSE.DUPNUM
			AND MST.DOCOWRIDR     = HSE.DOCOWRIDR
			AND MST.CMPCOD        = HSE.CMPCOD
			AND MST.SEQNUM        = HSE.SEQNUM
			AND HSE.ARPCOD        = ?
			AND( (HSE.TXNCOD      = 'LDP'
			AND (HSE.CMPCOD
			  || '-'
			  || HSE.TXNREFONE
			  || '-'
			  || HSE.TXNREFTWO
			  || '-'
			  || HSE.TXNREFTHR                          = ?)
			AND LYGSHP.MABPLNFLG                       <> 'M')
			OR (HSE.TXNCOD                              = 'ACP'
			AND(HSE.CMPCOD, HSE.ARPCOD, HSE.TXNREFFOR) IN
			  (SELECT CMPCOD,
				ARPCOD      ,
				ULDNUM
				 FROM OPRULDACPDTL
				WHERE ARPCOD = ?
			  AND CMPCOD     = ?
			  AND MSTDOCNUM  = HSE.MSTDOCNUM
			  AND DOCOWRIDR  = HSE.DOCOWRIDR
			  ))
			OR(HSE.TXNCOD = 'MFT'
			AND (HSE.CMPCOD
			  || '-'
			  || HSE.TXNREFONE
			  || '-'
			  || HSE.TXNREFTWO
			  || '-'
			  || HSE.TXNREFTHR != ?)
			AND EXISTS
			  (SELECT 1
				 FROM OPRARPEXPFLT FLT
				WHERE FLT.CMPCOD= HSE.CMPCOD
			  AND FLT.FLTCARIDR = HSE.TXNREFONE
			  AND FLT.FLTNUM    = HSE.TXNREFTWO
			  AND FLT.FLTSEQNUM = HSE.TXNREFTHR
			  AND FLT.ARPCOD    = HSE.ARPCOD
			  AND FLT.FINFLG    = 'Y'
			  ) )
			OR( HSE.TXNCOD                                                             = 'BDP'
			AND (HSE.CMPCOD, HSE.ARPCOD, HSE.TXNREFFOR, HSE.MSTDOCNUM, HSE.DOCOWRIDR) IN
			  (SELECT CMPCOD,
				ARPCOD      ,
				ULDNUM      ,
				MSTDOCNUM   ,
				DOCOWRIDR
				 FROM OPRULDSHP
				WHERE ARPCOD = ?
			  AND CMPCOD     = ?

			UNION ALL
			   
			   SELECT CMPCOD,
				SEGORG      ,
				ULDNUM      ,
				MSTDOCNUM   ,
				DOCOWNIDR
				 FROM OPRLODPLNSHP
				WHERE SEGORG = ?
			  AND CMPCOD     = ?
			  AND FLTCARIDR  = ?
			  AND FLTNUM     = ?
			  AND FLTSEQNUM  = ?
			  AND SERNUM     = 1
			  AND LODVER     = 1
			  AND ULDNUM    IS NOT NULL
			  ) ))
			GROUP BY MST.CMPCOD,
			  MST.MSTDOCNUM,
			  MST.DOCNUM       ,
			  MST.DOCOWRIDR,
			  MST.DUPNUM,
			  MST.SEQNUM       ,
			  MST.STDPCS       ,
			  MST.STDWGT
			ORDER BY CMPCOD,
			  MSTDOCNUM    ,
			  DOCOWRIDR    ,
			  DUPNUM       ,
			  SEQNUM      

          ]]>
           </QRY:Source>
  </QRY:Definition>
  
  <QRY:Definition>
<QRY:Id>25</QRY:Id>
<QRY:Source Name="operations.flthandling.loadplan.findhousesforloadplanshipment" Type="NATIVE">
  <![CDATA[
    SELECT HSE.CMPCOD, HSE.MSTDOCNUM, HSE.DOCOWRIDR, HSE.DUPNUM, HSE.SEQNUM,
           HSE.DOCNUM, HSE.HSEPTH, HSE.PARSEQNUM, MST.STDPCS, MST.STDWGT
      FROM OPRSHPHSE HSE, OPRSHPMST  MST
     WHERE MST.CMPCOD = HSE.CMPCOD
       AND MST.MSTDOCNUM = HSE.MSTDOCNUM
       AND MST.DOCOWRIDR = HSE.DOCOWRIDR
       AND MST.DUPNUM = HSE.DUPNUM
       AND MST.SEQNUM = HSE.SEQNUM
       AND HSE.CMPCOD = ?
       AND HSE.MSTDOCNUM = ?
       AND HSE.DOCOWRIDR = ?
       AND HSE.DUPNUM = ?
         AND HSE.PARSEQNUM = ?
  ]]>
</QRY:Source>
</QRY:Definition>

<QRY:Definition>
<QRY:Id>26</QRY:Id>
<QRY:Source Name="operations.flthandling.loadplan.findgroupdetailsforcategories" Type="NATIVE">
  <![CDATA[
  
    SELECT POSDTL.POS,
		  POSDTL.POU
		  
		FROM OPRLODPLNPOSDTL POSDTL,
		     OPRLODPLNPOL POL		
		WHERE		
		 POL.CMPCOD = POSDTL.CMPCOD
		 AND POL.FLTCARIDR = POSDTL.FLTCARIDR
		 AND POL.FLTNUM = POSDTL.FLTNUM
		 AND POL.FLTSEQNUM = POSDTL.FLTSEQNUM
	  	 AND POL.CMPCOD = ?
		 AND pol.FLTCARIDR =?
		 AND pol.FLTNUM =?
		 AND pol.FLTSEQNUM =?

  ]]>
</QRY:Source>
</QRY:Definition>


<QRY:Definition>
    <QRY:Id>31</QRY:Id>
    <QRY:Source Name="operations.flthandling.loadplan.findnotocdetailsforloadplanshipmentsatairport" Type="NATIVE">
      <![CDATA[
              SELECT LODPOL.CMPCOD,
                  LODPOL.FLTCARIDR,
                  LODPOL.FLTSEQNUM,
                  LODPOL.FLTNUM,
                  LODSHP.MSTDOCNUM,
                  LODSHP.DUPNUM,
                  LODSHP.SEQNUM,
                  LODSHP.DOCOWNIDR,
                  NVL(ARPDGR.NUMPKG,SHPDGR.NUMPKG) NUMPKG,
                  NVL(ARPDGR.NETQTY,SHPDGR.NETQTY) NETQTY,
                  ARPDGR.SERNUM,
                  NVL(ARPDGR.UNIIDR,SHPDGR.UNIIDR) UNIIDR,
                  LODSHP.ULDNUM,
                  NVL(ARPDGR.SCCCOD,SHPDGR.SCCCOD) SCCCOD,
                  SHPDGR.DGRSEQNUM,
                  SHPDGR.PKGGRP,
                  SHPDGR.PKGINS
                FROM OPRLODPLNPOL LODPOL
                INNER JOIN OPRLODPLNULD LODULD
                ON LODPOL.CMPCOD     = LODULD.CMPCOD
                AND LODPOL.FLTNUM    = LODULD.FLTNUM
                AND LODPOL.FLTSEQNUM = LODULD.FLTSEQNUM
                AND LODPOL.FLTCARIDR = LODULD.FLTCARIDR
                INNER JOIN OPRLODPLNSHP LODSHP
                ON LODULD.CMPCOD     = LODSHP.CMPCOD
                AND LODULD.FLTCARIDR = LODSHP.FLTCARIDR
                AND LODULD.FLTNUM    = LODSHP.FLTNUM
                AND LODULD.FLTSEQNUM = LODSHP.FLTSEQNUM
                AND LODULD.ULDNUM    = LODSHP.ULDNUM
                INNER JOIN OPRSHPDGR SHPDGR
                ON LODSHP.CMPCOD     = SHPDGR.CMPCOD
                AND LODSHP.MSTDOCNUM = SHPDGR.MSTDOCNUM
                AND LODSHP.DUPNUM    = SHPDGR.DUPNUM
                AND LODSHP.DOCOWNIDR = SHPDGR.DOCOWRIDR
                INNER JOIN OPRARPDGR ARPDGR
                ON LODSHP.CMPCOD     = ARPDGR.CMPCOD
                AND LODSHP.MSTDOCNUM = ARPDGR.MSTDOCNUM
                AND LODSHP.DUPNUM    = ARPDGR.DUPNUM
                AND LODSHP.SEQNUM    = ARPDGR.SEQNUM
                AND LODSHP.DOCOWNIDR = ARPDGR.DOCOWRIDR
                AND LODSHP.ULDNUM    = ARPDGR.ULDNUM
                AND ARPDGR.DGRSERNUM = SHPDGR.DGRSEQNUM
                AND ARPDGR.ARPCOD    = LODPOL.POL
                WHERE LODPOL.CMPCOD  = ?
                AND LODPOL.FLTNUM    = ?
                AND LODPOL.FLTCARIDR = ?
                AND LODPOL.FLTSEQNUM = ?
                AND LODPOL.POL       = ?
                ORDER BY LODSHP.CMPCOD,
                  LODSHP.MSTDOCNUM,
                  LODSHP.DUPNUM,
                  LODSHP.SEQNUM,
                  LODSHP.DOCOWNIDR
      ]]>
    </QRY:Source>
    </QRY:Definition>
    
    <QRY:Definition>
<QRY:Id>28</QRY:Id>
<QRY:Source Name="operations.flthandling.loadplan.findnotocdetailsforloadplanshipments" Type="NATIVE">
  <![CDATA[
  
   SELECT LODPOL.CMPCOD,
        LODPOL.FLTCARIDR,
        LODPOL.FLTSEQNUM,
        LODPOL.FLTNUM,
        LODSHP.MSTDOCNUM,
        LODSHP.DUPNUM,
        LODSHP.SEQNUM,
        LODSHP.DOCOWNIDR,
        NVL(ARPDGR.NUMPKG,SHPDGR.NUMPKG) NUMPKG,
        NVL(ARPDGR.NETQTY,SHPDGR.NETQTY) NETQTY,
        ARPDGR.SERNUM,
        NVL(ARPDGR.UNIIDR,SHPDGR.UNIIDR) UNIIDR,
        LODSHP.ULDNUM,
        NVL(ARPDGR.SCCCOD,SHPDGR.SCCCOD) SCCCOD,
        SHPDGR.DGRSEQNUM,
        SHPDGR.PKGGRP,
          SHPDGR.PKGINS
        
      FROM OPRLODPLNPOL LODPOL
      INNER JOIN OPRLODPLNULD LODULD
      ON LODPOL.CMPCOD     = LODULD.CMPCOD
      AND LODPOL.FLTNUM    = LODULD.FLTNUM
      AND LODPOL.FLTSEQNUM = LODULD.FLTSEQNUM
      AND LODPOL.FLTCARIDR = LODULD.FLTCARIDR
      AND LODPOL.CURVER    = LODULD.LODVER
      AND LODPOL.SERNUM    = LODULD.SERNUM
      
      INNER JOIN OPRLODPLNSHP LODSHP
      ON LODULD.CMPCOD     = LODSHP.CMPCOD
      AND LODULD.FLTCARIDR = LODSHP.FLTCARIDR
      AND LODULD.FLTNUM    = LODSHP.FLTNUM
      AND LODULD.FLTSEQNUM = LODSHP.FLTSEQNUM
      AND LODULD.ULDNUM    = LODSHP.ULDNUM
      
      INNER JOIN OPRSHPDGR SHPDGR
      ON LODSHP.CMPCOD     = SHPDGR.CMPCOD
      AND LODSHP.MSTDOCNUM = SHPDGR.MSTDOCNUM
      AND LODSHP.DUPNUM    = SHPDGR.DUPNUM
      AND LODSHP.DOCOWNIDR = SHPDGR.DOCOWRIDR
      
      LEFT OUTER JOIN OPRARPDGR ARPDGR
      ON LODSHP.CMPCOD     = ARPDGR.CMPCOD
      AND LODSHP.MSTDOCNUM = ARPDGR.MSTDOCNUM
      AND LODSHP.DUPNUM    = ARPDGR.DUPNUM
      AND LODSHP.SEQNUM    = ARPDGR.SEQNUM
      AND LODSHP.DOCOWNIDR = ARPDGR.DOCOWRIDR
      AND LODSHP.ULDNUM    = ARPDGR.ULDNUM
      AND ARPDGR.DGRSERNUM = SHPDGR.DGRSEQNUM
      AND ARPDGR.ARPCOD    = LODPOL.POL

      WHERE LODPOL.CMPCOD  = ?
      AND LODPOL.FLTNUM    =  ?
      AND LODPOL.FLTCARIDR =  ?
      AND LODPOL.FLTSEQNUM =  ?
      AND LODPOL.POL       =  ?
      
      ORDER BY LODSHP.CMPCOD,
        LODSHP.MSTDOCNUM,
        LODSHP.DUPNUM,
        LODSHP.SEQNUM,
      LODSHP.DOCOWNIDR
  ]]>
</QRY:Source>
</QRY:Definition> 

<QRY:Definition>
	<QRY:Id>29</QRY:Id>
	<QRY:Source Name="operations.flthandling.loadplan.findloadplanuldsforflight" Type="NATIVE">
	  <![CDATA[
			  SELECT OPRLODPLNULD.ULDNUM FROM OPRLODPLNULD,OPRLODPLNPOL WHERE
				OPRLODPLNPOL.CMPCOD = OPRLODPLNULD.CMPCOD
				AND OPRLODPLNPOL.FLTNUM = OPRLODPLNULD.FLTNUM
				AND OPRLODPLNPOL.FLTCARIDR = OPRLODPLNULD.FLTCARIDR
				AND OPRLODPLNPOL.FLTSEQNUM = OPRLODPLNULD.FLTSEQNUM
				AND OPRLODPLNULD.CMPCOD = ?
				AND OPRLODPLNPOL.FLTNUM = ?
				AND OPRLODPLNULD.FLTCARIDR = ?
				AND OPRLODPLNULD.FLTSEQNUM = ?
	  ]]>
	</QRY:Source>
	</QRY:Definition>
	
	<QRY:Definition>
	<QRY:Id>30</QRY:Id>
	<QRY:Source Name="operations.flthandling.loadplan.findairportdwsulddetails" Type="NATIVE">
	  <![CDATA[
			  SELECT LODPLNULD.CMPCOD,
			    LODPLNULD.FLTCARIDR,
			    LODPLNULD.FLTNUM,
			    LODPLNULD.FLTSEQNUM,
			    LODPLNULD.ULDNUM,
			    LODPLNULD.SEGSERNUM,
			    DWSULD.OVRAFT,
			    DWSULD.OVRFNT,
			    DWSULD.OVRLFT,
			    DWSULD.OVRRGT,
			    DWSULD.SELONE,
			    DWSULD.SELTWO,
			    DWSULD.SELTHR,
			    DWSULD.SELFOR,
			    DWSULD.GRSWTA,
			    DWSULD.GRSWGT,
			    DWSULD.GRSWTB,
			    DWSULD.GSETYP,
			    DWSULD.NETWTA,
			    DWSULD.NETWTB,
			    DWSULD.DLYWGT,
			    DWSULD.PRSNINCHG,
			    DWSULD.RMK,
			    DWSULD.TARWGT,
			    DWSULD.ULDCTG,
			    DWSULD.ULDCTR,
			    DWSULD.ULDHGT,
			    DWSULD.ULDOCP,
			    DWSULD.ULDVOL,
			    DWSULD.WGHSYSIDR
			  FROM OPRLODPLNULD LODPLNULD,
			    OPRARPDWSULD DWSULD

			  WHERE LODPLNULD.CMPCOD = DWSULD.CMPCOD
			  AND LODPLNULD.ULDNUM = DWSULD.ULDNUM
			  AND LODPLNULD.SEGORG = DWSULD.ARPCOD
			  AND LODPLNULD.CMPCOD = ?
			  AND LODPLNULD.FLTNUM = ?
			  AND LODPLNULD.FLTCARIDR = ?
			  AND LODPLNULD.FLTSEQNUM = ?
			  AND LODPLNULD.SEGORG = ?
	  ]]>
	</QRY:Source>
	</QRY:Definition>
	
	<QRY:Definition>
        <QRY:Id>20</QRY:Id>
           <QRY:Source Name="operations.flthandling.loadplan.findAWBDetailsForGroup" Type="NATIVE">
          <![CDATA[            
         SELECT LODPLNPOSDTL.CMPCOD          ,
          LODPLNPOSDTL.FLTNUM               ,
          LODPLNPOSDTL.FLTCARIDR            ,
          LODPLNPOSDTL.FLTSEQNUM            ,
          LODPLNPOSDTL.POS                  ,
          LODPLNSHP.MSTDOCNUM               ,
          SHPMST.DOCOWRIDR                  ,
          LODPLNSHP.DUPNUM                  ,
          LODPLNSHP.SEQNUM                  ,
          LODPLNSHP.PLNPCS                  ,
          LODPLNSHP.PLNWGT                  ,
          LODPLNSHP.PLNVOL                  ,
          LODPLNSHP.POSSERNUM               ,
		  LODPLNSHP.SEGORG POL,
		  LODPLNSHP.SEGDST POU,
          BKGSUM.SHPRMK                  ,
          BKGSUM.BKGPCS                     ,
          BKGSUM.BKGWGT                     ,
          BKGSUM.BKGVOL                     ,
		  BKGSUM.OLDBKGPCS          		,
		  BKGSUM.OLDBLKPOS					, 
		  BKGSUM.OLDCNTPOS					,
		  BKGSUM.OLDLWRPOS					,
		  BKGSUM.OLDMANPOS					,
		  BKGSUM.OLDONTFLT					,
		  BKGSUM.OLDONTFLTCARCOD			,	
		  BKGSUM.OLDONTFLTDAT				,
		  BKGSUM.ONTFLTCARCOD				,
		  BKGSUM.ONTFLTDAT					,
		  BKGSUM.ONTFLTNUM					,
		  BKGSUM.IRRFLG,
		  BKGSUM.MABOLYPLN,
		  BKGSUM.BLKPOS						,
		  BKGSUM.CNTPOS						,
		  BKGSUM.LWRPOS						,
		  BKGSUM.MANPOS						,
          LODPLNSHP.POSNUM                  ,
          SHPMST.SHPPFX                     ,
          SHPMST.ORGCOD      ORG            ,
          SHPMST.DSTCOD      DST            ,
          SHPMST.SCCCOD      SCC            ,
          SHPMST.STDPCS                     ,
          SHPMST.STDWGT                     ,
          SHPMST.SHPDES                     ,
          ARPSHP.BDPPCS                     ,
          ARPSHP.AVLPCS                     ,
          LODPLNSHP.PLNPCS - (ARPSHP.AVLPCS + ARPSHP.BDPPCS) REMPCS,
			  SCC.SCCCOD

          FROM OPRLODPLNPOSDTL LODPLNPOSDTL ,
          OPRLODPLNSHP LODPLNSHP            ,
          OPRLODPLNBKGSUM BKGSUM            ,
          OPRSHPMST SHPMST                  ,
          OPRARPSHP ARPSHP
          WHERE LODPLNSHP.CMPCOD    = LODPLNPOSDTL.CMPCOD
        AND LODPLNSHP.FLTNUM        = LODPLNPOSDTL.FLTNUM
        AND LODPLNSHP.FLTCARIDR     = LODPLNPOSDTL.FLTCARIDR
        AND LODPLNSHP.FLTSEQNUM     = LODPLNPOSDTL.FLTSEQNUM
        AND LODPLNSHP.POSNUM        = LODPLNPOSDTL.POS        
        
        AND SHPMST.CMPCOD           = LODPLNSHP.CMPCOD
        AND SHPMST.MSTDOCNUM        = LODPLNSHP.MSTDOCNUM
        AND SHPMST.DOCOWRIDR        = LODPLNSHP.DOCOWNIDR
        AND SHPMST.DUPNUM           = LODPLNSHP.DUPNUM
        AND SHPMST.SEQNUM           = LODPLNSHP.SEQNUM
        
        AND ARPSHP.CMPCOD(+)           = SHPMST.CMPCOD
        AND ARPSHP.MSTDOCNUM(+)        = SHPMST.MSTDOCNUM
        AND ARPSHP.DOCOWRIDR(+)        = SHPMST.DOCOWRIDR
        AND ARPSHP.DUPNUM(+)      = SHPMST.DUPNUM
        AND ARPSHP.SEQNUM(+)     = SHPMST.SEQNUM
        
		AND SCC.CMPCOD(+)           = SHPMST.CMPCOD
        AND SCC.MSTDOCNUM(+)        = SHPMST.MSTDOCNUM
        AND SCC.DOCOWRIDR(+)        = SHPMST.DOCOWRIDR
        AND SCC.DUPNUM(+)      = SHPMST.DUPNUM
        AND SCC.SEQNUM(+)     = SHPMST.SEQNUM
			  
        AND BKGSUM.CMPCOD           = LODPLNSHP.CMPCOD
        AND BKGSUM.FLTNUM        = LODPLNSHP.FLTNUM        
        AND BKGSUM.FLTCARIDR     = LODPLNSHP.FLTCARIDR     
        AND BKGSUM.FLTSEQNUM     = LODPLNSHP.FLTSEQNUM     
        AND BKGSUM.SEGORG = LODPLNSHP.SEGORG
        AND BKGSUM.SEGDST = LODPLNSHP.SEGDST
        AND BKGSUM.MSTDOCNUM        = LODPLNSHP.MSTDOCNUM
        AND BKGSUM.DOCOWRIDR        = LODPLNSHP.DOCOWNIDR
        AND BKGSUM.DUPNUM           = LODPLNSHP.DUPNUM
        AND BKGSUM.SEQNUM           = LODPLNSHP.SEQNUM
        
        AND LODPLNPOSDTL.CMPCOD = ?
        AND LODPLNPOSDTL.FLTNUM     =  ?
        AND LODPLNPOSDTL.FLTCARIDR  =  ?
        AND LODPLNPOSDTL.FLTSEQNUM  =  ?
        AND LODPLNSHP.POSNUM        =  ?
		
		UNION ALL
 
				
		 
		 SELECT LODPLNPOSDTL.CMPCOD                                ,
		  LODPLNPOSDTL.FLTNUM                                      ,
		  LODPLNPOSDTL.FLTCARIDR                                   ,
		  LODPLNPOSDTL.FLTSEQNUM                                   ,
		  LODPLNPOSDTL.POS                                         ,
		  LODPLNSHP.MSTDOCNUM                                      ,
		  SHPMST.DOCOWRIDR                                         ,
		  LODPLNSHP.DUPNUM                                         ,
		  LODPLNSHP.SEQNUM                                         ,
		  LODPLNSHP.PLNPCS                                         ,
		  LODPLNSHP.PLNWGT                                         ,
		  LODPLNSHP.PLNVOL                                         ,
		  LODPLNSHP.POSSERNUM                                      ,
		   LODPLNSHP.SEGORG POL,
		  LODPLNSHP.SEGDST POU,
		  LYGSHP.SHPRMK                                            ,
		  LYGSHP.lygpcS BKGPCS                                            ,
		  LYGSHP.LYGWGT BKGWGT                                            ,
		  LYGSHP.LYGVOL BKGVOL                                            ,
		  NULL AS OLDBKGPCS                                         ,
		  NULL AS OLDBLKPOS                                         ,
		  NULL AS OLDCNTPOS                                         ,
		  NULL AS OLDLWRPOS                                         ,
		  NULL as OLDMANPOS                                         ,
		 NULL as OLDONTFLT                                         ,
		  NULL as OLDONTFLTCARCOD                                         ,
		  NULL as OLDONTFLTDAT                                      ,
		  LYGSHP.ONTFLTCARCOD                                      ,
		  LYGSHP.ONTFLTDAT                                         ,
		  LYGSHP.ONTFLTNUM                                         ,
		  NULL as IRRFLG                                            ,
		  NULL as MABOLYPLN                                           ,
		  LYGSHP.BLKPOS                                            ,
		  LYGSHP.CNTPOS                                            ,
		  LYGSHP.LWRPOS                                            ,
		  LYGSHP.MANPOS                                            ,
		  LODPLNSHP.POSNUM                                         ,
		  SHPMST.SHPPFX                                            ,
		  SHPMST.ORGCOD ORG                                        ,
		  SHPMST.DSTCOD DST                                        ,
		  SHPMST.SCCCOD SCC                                        ,
		  SHPMST.STDPCS                                            ,
		  SHPMST.STDWGT                                            ,
		  SHPMST.SHPDES                                            ,
		  ARPSHP.BDPPCS                                            ,
		  ARPSHP.AVLPCS                                            ,
		  LODPLNSHP.PLNPCS - (ARPSHP.AVLPCS + ARPSHP.BDPPCS) REMPCS,
		  SCC.SCCCOD
		   FROM OPRLODPLNPOSDTL LODPLNPOSDTL ,
		  OPRLODPLNSHP LODPLNSHP             ,
		  OPRLODPLNLYGSHP LYGSHP             ,
		  OPRSHPMST SHPMST                   ,
		  OPRARPSHP ARPSHP                   ,
		
		  
		  WHERE LODPLNSHP.CMPCOD   = LODPLNPOSDTL.CMPCOD
		AND LODPLNSHP.FLTNUM       = LODPLNPOSDTL.FLTNUM
		AND LODPLNSHP.FLTCARIDR    = LODPLNPOSDTL.FLTCARIDR
		AND LODPLNSHP.FLTSEQNUM    = LODPLNPOSDTL.FLTSEQNUM
		AND LODPLNSHP.POSNUM       = LODPLNPOSDTL.POS
		
		AND SHPMST.CMPCOD          = LODPLNSHP.CMPCOD
		AND SHPMST.MSTDOCNUM       = LODPLNSHP.MSTDOCNUM
		AND SHPMST.DOCOWRIDR       = LODPLNSHP.DOCOWNIDR
		AND SHPMST.DUPNUM          = LODPLNSHP.DUPNUM
		AND SHPMST.SEQNUM          = LODPLNSHP.SEQNUM
		
		AND ARPSHP.CMPCOD(+)       = SHPMST.CMPCOD
		AND ARPSHP.MSTDOCNUM(+)    = SHPMST.MSTDOCNUM
		AND ARPSHP.DOCOWRIDR(+)    = SHPMST.DOCOWRIDR
		AND ARPSHP.DUPNUM(+)       = SHPMST.DUPNUM
		AND ARPSHP.SEQNUM(+)       = SHPMST.SEQNUM
		
		
		AND SCC.CMPCOD(+)          = SHPMST.CMPCOD
		AND SCC.MSTDOCNUM(+)       = SHPMST.MSTDOCNUM
		AND SCC.DOCOWRIDR(+)       = SHPMST.DOCOWRIDR
		AND SCC.DUPNUM(+)          = SHPMST.DUPNUM
		AND SCC.SEQNUM(+)          = SHPMST.SEQNUM
		
		AND LYGSHP.CMPCOD          = LODPLNSHP.CMPCOD
		AND LYGSHP.FLTNUM          = LODPLNSHP.FLTNUM
		AND LYGSHP.FLTCARIDR       = LODPLNSHP.FLTCARIDR
		AND LYGSHP.FLTSEQNUM       = LODPLNSHP.FLTSEQNUM
		AND LYGSHP.SEGORG          = LODPLNSHP.SEGORG
		AND LYGSHP.SEGDST          = LODPLNSHP.SEGDST
		AND LYGSHP.MSTDOCNUM       = LODPLNSHP.MSTDOCNUM
		AND LYGSHP.DOCOWRIDR       = LODPLNSHP.DOCOWNIDR
		AND LYGSHP.DUPNUM          = LODPLNSHP.DUPNUM
		AND LYGSHP.SEQNUM          = LODPLNSHP.SEQNUM
		
		AND LODPLNPOSDTL.CMPCOD    = ?
		AND LODPLNPOSDTL.FLTNUM    = ?
		AND LODPLNPOSDTL.FLTCARIDR = ?
		AND LODPLNPOSDTL.FLTSEQNUM  =  ?
		AND LODPLNSHP.POSNUM        = ?
              
          ]]>
           </QRY:Source>
  </QRY:Definition>
  
    
    <QRY:Definition>  
    <QRY:Id>22</QRY:Id>
        <QRY:Source Name="operations.flthandling.loadplan.findUldAwbsDetailsForBuildupPlan" Type="NATIVE"> 
        <![CDATA[
        
	     SELECT LODULD.ULDNUM,  LODULD.POSNUM,
			  LODULD.SEGORG POL,  LODULD.POU,
			  ARPULD.INTFLG,
			  LODULD.LSTUPDTIM,  LODULD.SEGSERNUM,
			  NULL AS SHPPFX,  NULL AS MSTDOCNUM,
			  NULL AS DOCOWRIDR,  NULL AS SEQNUM,
			  NULL AS CMPCOD,  NULL AS DUPNUM,
			  0 AS NUMPCS,  NULL AS ORGCOD,
			  NULL AS DSTCOD,  0 AS STDPCS,
			  0 AS STDWGT,  NULL AS SHPDES,
			  0 AS NUMPCS,  0 AS WGT
			
			FROM OPRLODPLNULD LODULD
			INNER JOIN OPRLODPLNPOL LODPOL ON
			
			 LODULD.CMPCOD = LODPOL.CMPCOD
			 AND LODULD.FLTCARIDR = LODPOL.FLTCARIDR
			 AND LODULD.FLTNUM = LODPOL.FLTNUM
			 AND LODULD.FLTSEQNUM = LODPOL.FLTSEQNUM
			 AND LODULD.LODVER = LODPOL.CURVER
			 AND LODULD.SERNUM = LODPOL.SERNUM
			 LEFT OUTER JOIN OPRARPULD ARPULD ON   LODULD.CMPCOD = ARPULD.CMPCOD
			 AND  LODULD.ULDNUM = ARPULD.ULDNUM 			
			WHERE LODULD.CMPCOD = ?
			 AND LODULD.FLTCARIDR = ?
			 AND LODULD.FLTSEQNUM = ?
			 AND LODULD.FLTNUM = ?
			
			UNION ALL
			
			SELECT ULDSHP.ULDNUM,  'UNASG' AS POSNUM,
			  ARPULD.ARPCOD AS POL,  BKGSUM.SEGDST POU,
			   ARPULD.INTFLG,
			  NULL AS LSTUPDTIM,  BKGSUM.SEGSERNUM,
			  SHPMST.SHPPFX,  ULDSHP.MSTDOCNUM,
			  ULDSHP.DOCOWRIDR,  ULDSHP.SEQNUM,
			  ULDSHP.CMPCOD,  ULDSHP.DUPNUM,
			  ULDSHP.NUMPCS,  SHPMST.ORGCOD,
			  SHPMST.DSTCOD,  SHPMST.STDPCS,
			  SHPMST.STDWGT,  SHPMST.SHPDES,
			  ULDSHP.NUMPCS,  ULDSHP.WGT
			
			FROM OPRLODPLNBKGSUM BKGSUM
			
			INNER JOIN OPRLODPLNPOL LODPOL ON
			
			 BKGSUM.CMPCOD = LODPOL.CMPCOD
			 AND BKGSUM.SERNUM = LODPOL.SERNUM
			 AND BKGSUM.LODVER = LODPOL.CURVER
			 AND BKGSUM.FLTCARIDR = LODPOL.FLTCARIDR
			 AND BKGSUM.FLTNUM = LODPOL.FLTNUM
			 AND BKGSUM.FLTSEQNUM = LODPOL.FLTSEQNUM
			
			INNER JOIN OPRULDSHP ULDSHP ON
			
			 BKGSUM.CMPCOD = ULDSHP.CMPCOD
			 AND BKGSUM.MSTDOCNUM = ULDSHP.MSTDOCNUM
			 AND BKGSUM.DOCOWRIDR = ULDSHP.DOCOWRIDR
			 AND BKGSUM.DUPNUM = ULDSHP.DUPNUM
			 AND BKGSUM.SEQNUM = ULDSHP.SEQNUM
			
			INNER JOIN OPRSHPMST SHPMST ON
			
			 ULDSHP.MSTDOCNUM = SHPMST.MSTDOCNUM
			 AND ULDSHP.DOCOWRIDR = SHPMST.DOCOWRIDR
			 AND ULDSHP.DUPNUM = SHPMST.DUPNUM
			 AND ULDSHP.CMPCOD = SHPMST.CMPCOD
			 AND ULDSHP.SEQNUM = SHPMST.SEQNUM
			
			INNER JOIN OPRARPULD ARPULD ON
			
			 ARPULD.CMPCOD = ULDSHP.CMPCOD
			 AND ARPULD.ULDNUM = ULDSHP.ULDNUM
			 AND NOT EXISTS
			
			  (SELECT ULDNUM
			   FROM OPRLODPLNULD LODULD
			
			   WHERE LODULD.CMPCOD = ?
			   AND LODULD.FLTCARIDR = ?
			   AND LODULD.FLTNUM = ?
			   AND LODULD.FLTSEQNUM = ?
			   AND LODULD.ULDNUM = ARPULD.ULDNUM)
			
			WHERE BKGSUM.CMPCOD = ?
			 AND BKGSUM.FLTCARIDR = ?
			 AND BKGSUM.FLTSEQNUM = ?
			 AND BKGSUM.FLTNUM = ?
			 AND ULDSHP.ARPCOD = ?
			
			ORDER BY POL,POU,ULDNUM

	     
		 
		 ]]>
        </QRY:Source>
    </QRY:Definition>   
    
	<QRY:Definition>  
    <QRY:Id>23</QRY:Id>
        <QRY:Source Name="operations.flthandling.loadplan.findULDBuildUpDetailsForWS" Type="NATIVE"> 
        <![CDATA[
			SELECT LODSHP.SEGORG POL,
			  LODSHP.SEGDST POU,
			  LODSHP.DOCOWNIDR DOCOWRIDR,
			  LODSHP.MSTDOCNUM MSTDOCNUM,
			  LODSHP.SEQNUM SEQNUM,
			  LODSHP.DUPNUM DUPNUM,
			  LODSHP.UBRNUM UBRNUM,
			  LODSHP.CMPCOD CMPCOD,
			  LODSHP.POSNUM POSNUM,
			  LODSHP.ULDNUM ULDNUM,
			  LODSHP.LODPRY LODPRY,
			  LODSHP.PLNPCS PLNPCS,
			  LODSHP.PLNWGT PLNWGT,
			  LODSHP.PLNVOL PLNVOL,
			  LODSHP.SHPRMK SHPRMK,
			  LODSHP.POSSERNUM POSSERNUM,
			  SHPMST.STDPCS STDPCS,
			  SHPMST.GRSVOL GRSVOL,
			  SHPMST.STDWGT STDWGT,
			  SHPMST.STDWGTCOD STDWGTCOD,
			  SHPMST.AGTNAM AGTNAM,
			  SHPMST.AGTCOD AGTCOD,
			  SHPMST.SHPPFX SHPPFX,
			  SHPMST.SCCCOD SCC,
			  SHPMST.SHPDES SHPDES,
			  SHPMST.ORGCOD ORGCOD,
			  SHPMST.DSTCOD DSTCOD,  
			  0 BDPPCS,
			  0 BDPWGT,
			  0 BDPVOL,
			  ? SHPSRC
			FROM OPRLODPLNVER VER
			INNER JOIN OPRLODPLNPOL POL ON VER.CMPCOD = POL.CMPCOD
			 AND VER.FLTCARIDR = POL.FLTCARIDR
			 AND VER.FLTNUM = POL.FLTNUM
			 AND VER.FLTSEQNUM = POL.FLTSEQNUM
			 AND VER.POL = POL.POL
       			 AND VER.POLVER = POL.POLVER
			INNER JOIN OPRLODPLNSHP LODSHP ON POL.CMPCOD = LODSHP.CMPCOD
			 AND POL.FLTCARIDR = LODSHP.FLTCARIDR
			 AND POL.FLTNUM = LODSHP.FLTNUM
			 AND POL.FLTSEQNUM = LODSHP.FLTSEQNUM
			INNER JOIN OPRSHPMST SHPMST ON SHPMST.MSTDOCNUM = LODSHP.MSTDOCNUM
			 AND SHPMST.DOCOWRIDR = LODSHP.DOCOWNIDR
			 AND SHPMST.DUPNUM = LODSHP.DUPNUM
			 AND SHPMST.SEQNUM = LODSHP.SEQNUM
			 AND SHPMST.CMPCOD = LODSHP.CMPCOD
			WHERE VER.POL = ?
			 AND VER.CMPCOD = ?
			 AND VER.FLTCARIDR = ?
			 AND VER.FLTNUM = ?
			 AND VER.FLTSEQNUM = ?
			 AND VER.POLVER = ?

			UNION 
			SELECT FLTSEG.POL POL,
			  FLTSEG.POU POU,
			  SEGSHP.DOCOWRIDR DOCOWRIDR,
			  SEGSHP.MSTDOCNUM MSTDOCNUM,
			  SEGSHP.SEQNUM SEQNUM,
			  SEGSHP.DUPNUM DUPNUM,
			  NULL UBRNUM,
			  SEGSHP.CMPCOD CMPCOD,
			  SEGULD.ULDPOS POSNUM,
			  ULDSHP.ULDNUM ULDNUM,
			  0 LODPRY,
			  SEGSHP.PLNPCS PLNPCS,
			  SEGSHP.PLNWGT PLNWGT,
			  SEGSHP.PLNVOL PLNVOL,
			  ULDSHP.RMK SHPRMK,
			  0 POSSERNUM,
			  SHPMST.STDPCS STDPCS,
			  SHPMST.GRSVOL GRSVOL,
			  SHPMST.STDWGT STDWGT,
			  SHPMST.STDWGTCOD STDWGTCOD,
			  SHPMST.AGTNAM AGTNAM,
			  SHPMST.AGTCOD AGTCOD,
			  SHPMST.SHPPFX SHPPFX,
			  SHPMST.SCCCOD SCC,
			  SHPMST.SHPDES SHPDES,
			  SHPMST.ORGCOD ORGCOD,
			  SHPMST.DSTCOD DSTCOD,  
			  SEGSHP.BDPPCS BDPPCS,
			  SEGSHP.BDPWGT BDPWGT,
			  SEGSHP.BDPVOL BDPVOL,
			  ? SHPSRC
			FROM OPRARPEXPFLT EXPFLT
			INNER JOIN OPRFLTSEG FLTSEG ON EXPFLT.CMPCOD=FLTSEG.CMPCOD
			 AND EXPFLT.FLTCARIDR = FLTSEG.FLTCARIDR
			 AND EXPFLT.FLTNUM = FLTSEG.FLTNUM
			 AND EXPFLT.FLTSEQNUM = FLTSEG.FLTSEQNUM
			 AND EXPFLT.ARPCOD = FLTSEG.POL
			INNER JOIN OPRSEGULD SEGULD ON FLTSEG.CMPCOD=SEGULD.CMPCOD
			 AND FLTSEG.FLTCARIDR = SEGULD.FLTCARIDR
			 AND FLTSEG.FLTNUM = SEGULD.FLTNUM
			 AND FLTSEG.FLTSEQNUM = SEGULD.FLTSEQNUM
			 AND FLTSEG.SEGSERNUM = SEGULD.SEGSERNUM
			INNER JOIN OPRSEGULDSHP  ULDSHP ON FLTSEG.CMPCOD = ULDSHP.CMPCOD
			 AND FLTSEG.FLTCARIDR = ULDSHP.FLTCARIDR
			 AND FLTSEG.FLTNUM = ULDSHP.FLTNUM
			 AND FLTSEG.FLTSEQNUM = ULDSHP.FLTSEQNUM
			 AND FLTSEG.SEGSERNUM = ULDSHP.SEGSERNUM
			INNER JOIN OPRSEGSHP  SEGSHP ON ULDSHP.CMPCOD = SEGSHP.CMPCOD
			 AND ULDSHP.FLTCARIDR = SEGSHP.FLTCARIDR
			 AND ULDSHP.FLTNUM = SEGSHP.FLTNUM
			 AND ULDSHP.FLTSEQNUM = SEGSHP.FLTSEQNUM
			 AND ULDSHP.SEGSERNUM = SEGSHP.SEGSERNUM
			 AND ULDSHP.DOCOWRIDR = SEGSHP.DOCOWRIDR
			 AND ULDSHP.MSTDOCNUM = SEGSHP.MSTDOCNUM
			 AND ULDSHP.DUPNUM = SEGSHP.DUPNUM
			 AND ULDSHP.SEQNUM = SEGSHP.SEQNUM
			INNER JOIN OPRSHPMST SHPMST ON SEGSHP.CMPCOD = SHPMST.CMPCOD
			 AND SEGSHP.DOCOWRIDR = SHPMST.DOCOWRIDR
			 AND SEGSHP.MSTDOCNUM = SHPMST.MSTDOCNUM
			 AND SEGSHP.DUPNUM = SHPMST.DUPNUM
			 AND SEGSHP.SEQNUM = SHPMST.SEQNUM
			WHERE EXPFLT.ARPCOD= ?
			 AND EXPFLT.CMPCOD = ?
			 AND EXPFLT.FLTCARIDR = ?
			 AND EXPFLT.FLTNUM = ?
			 AND EXPFLT.FLTSEQNUM = ?
		 ]]>
        </QRY:Source>
    </QRY:Definition>
	<!--Added by A-4772 for ICRD-91234 starts here-->
	 <QRY:Definition>  
	  <QRY:Id>24</QRY:Id>
        <QRY:Source Name="operations.flthandling.loadplan.findShipmentsInULD_part1" Type="NATIVE"> 
		 <![CDATA[	
	SELECT Z.MSTDOCNUM MSTDOCNUM,Z.DOCOWRIDR DOCOWRIDR, Z.DUPNUM DUPNUM,
	  	   Z.SEQNUM SEQNUM, Z.CMPCOD CMPCOD,Z.ORGCOD ORG,
	  	   Z.DSTCOD DST,Z.CMDITMNAM COM,
	  	   Z.STDPCS STDPCS,Z.STDWGT STDWGT,Z.GRSVOL GRSVOL,
	  	   Z.SHPDES SHPDES,Z.SCCCOD SCC,Z.SHPPFX SHPPFX,
		   Z.BDPPCS BDPPCS, Z.BDPWGT BDPWGT, Z.BDPVOL BDPVOL,
	  	   Z.PCS PCS,Z.VOL VOL,Z.WGT WGT,Z.OWRCOD OWRCOD,Z.PRDNAM,Z.PRDPRY, Z.PRDCOD, Z.ULDBKGIDR,Z.BUPFLG,Z.ULDCTR,
		   Z.ULDOCP,Z.INRSTWLSS, Z.ACTWGT, Z.TARWGT, Z.POU, Z.BARROWFLG, Z.ULDNUM,
		    Z.BKDPCS,Z.BKDWGT,Z.BKDVOL
	  FROM (
			  SELECT SHPMST.MSTDOCNUM , SHPMST.DOCOWRIDR , SHPMST.DUPNUM ,
			  	   SHPMST.SEQNUM , SHPMST.CMPCOD ,SHPMST.ORGCOD ,
			  	   SHPMST.DSTCOD ,SHPRAT.CMDITMNAM ,
			  	   SHPMST.STDPCS ,SHPMST.STDWGT ,SHPMST.GRSVOL,
			  	   SHPMST.SHPDES ,SHPMST.SCCCOD ,SHPMST.SHPPFX,
			  	   SEGULD.MFTPCS PCS,SEGULD.MFTVOL VOL,SEGULD.MFTWGT WGT,
				   SEGULD.BDPPCS ,SEGULD.BDPWGT ,SEGULD.BDPVOL,
			  	   SHPMST.OWRCOD OWRCOD,BKGMST.PRDNAM,BKGMST.PRDPRY, BKGMST.PRDCOD,
				   OPRSEGULD.ULDBKGIDR ULDBKGIDR,OPRSEGULD.BUPFLG,OPRSEGULD.ULDCTR,OPRSEGULD.ULDOCP,OPRSEGULD.INRSTWLSS, OPRSEGULD.ACTWGT, OPRSEGULD.TARWGT,
				   ULDDTL.POU, OPRSEGULD.BARROWFLG, OPRSEGULD.ULDNUM, BKGFLTDTL.NUMPCS BKDPCS,BKGFLTDTL.WGT BKDWGT,
					BKGFLTDTL.VOL BKDVOL
			  FROM OPRSEGULDSHP SEGULD
				 INNER JOIN OPRSEGULD OPRSEGULD ON
						SEGULD.ULDNUM = OPRSEGULD.ULDNUM AND
						SEGULD.FLTSEQNUM = OPRSEGULD.FLTSEQNUM AND
						SEGULD.SEGSERNUM = OPRSEGULD.SEGSERNUM  AND
						SEGULD.FLTNUM = OPRSEGULD.FLTNUM AND
						SEGULD.FLTCARIDR = OPRSEGULD.FLTCARIDR AND
						SEGULD.CMPCOD = OPRSEGULD.CMPCOD
			  	 INNER JOIN OPRSHPMST SHPMST ON
			  	 	   		SEGULD.MSTDOCNUM = SHPMST.MSTDOCNUM AND
			  	  			SEGULD.DOCOWRIDR =  SHPMST.DOCOWRIDR AND
			  	  			SEGULD.DUPNUM =  SHPMST.DUPNUM AND
			  	  			SEGULD.SEQNUM =  SHPMST.SEQNUM AND
			  	  			SEGULD.CMPCOD =  SHPMST.CMPCOD
			  	 LEFT OUTER JOIN OPRSHPRATDTL SHPRAT ON
			   				SHPMST.CMPCOD = SHPRAT.CMPCOD AND
			   				SHPMST.DOCOWRIDR = SHPRAT.DOCOWRIDR AND
			   				SHPMST.MSTDOCNUM = SHPRAT.MSTDOCNUM AND
			   				SHPMST.DUPNUM = SHPRAT.DUPNUM AND
			   				SHPMST.SEQNUM = SHPRAT.SEQNUM 
				 LEFT OUTER JOIN CAPBKGMST BKGMST ON
				 		SHPMST.CMPCOD = BKGMST.CMPCOD AND
				 		SHPMST.DOCOWRIDR =  BKGMST.DOCOWRIDR AND 
				 		SHPMST.MSTDOCNUM = BKGMST.MSTDOCNUM AND 
				 		SHPMST.DUPNUM = BKGMST.DUPNUM AND
				 		SHPMST.SEQNUM = BKGMST.SEQNUM AND
				 		SHPMST.UBRNUM = BKGMST.UBRNUM			                                                                      
					 LEFT OUTER JOIN CAPBKGFLTDTL BKGFLTDTL 
					  ON SEGULD.FLTSEQNUM = BKGFLTDTL.FLTSEQNUM
					  AND SEGULD.SEGSERNUM = BKGFLTDTL.SEGSERNUM
					  AND SEGULD.FLTNUM    = BKGFLTDTL.FLTNUM
					  AND SEGULD.FLTCARIDR = BKGFLTDTL.FLTCARIDR
					  and SEGULD.CMPCOD    = BKGFLTDTL.CMPCOD   
					  and BKGMST.UBRNUM    = BKGMST.UBRNUM	
					 AND BKGMST.DOCOWRIDR = BKGFLTDTL.DOCOWRIDR
					  AND BKGMST.MSTDOCNUM = BKGFLTDTL.MSTDOCNUM
					  and BKGMST.DUPNUM    = BKGFLTDTL.DUPNUM
					  AND BKGMST.SEQNUM    = BKGFLTDTL.SEQNUM					  
				LEFT OUTER JOIN OPRULDDTL ULDDTL ON
						SEGULD.ULDNUM = ULDDTL.ULDNUM AND
						SEGULD.CMPCOD = ULDDTL.CMPCOD						
			 	WHERE  
			  	 SEGULD.CMPCOD = ? 
				 ]]> 		 
			
        </QRY:Source>
    </QRY:Definition>  
	 <QRY:Definition>  
	  <QRY:Id>25</QRY:Id>
        <QRY:Source Name="operations.flthandling.loadplan.findShipmentsInULD_part2" Type="NATIVE"> 
		 <![CDATA[		
	SELECT SHPMST.MSTDOCNUM MSTDOCNUM, SHPMST.DOCOWRIDR DOCOWRIDR, SHPMST.DUPNUM DUPNUM,
			  	   SHPMST.SEQNUM SEQNUM, SHPMST.CMPCOD CMPCOD,SHPMST.ORGCOD ORG,
			  	   SHPMST.DSTCOD DST,SHPRAT.CMDITMNAM COM,
			  	   SHPMST.STDPCS STDPCS,SHPMST.STDWGT STDWGT,SHPMST.GRSVOL GRSVOL,
			  	   SHPMST.SHPDES SHPDES,SHPMST.SCCCOD SCC,SHPMST.SHPPFX,
			  	   ULDSHP.NUMPCS PCS,ULDSHP.VOL VOL,ULDSHP.WGT WGT,
				   0 DPCS,0 DVOL,0 DWGT,
			  	   SHPMST.OWRCOD OWRCOD,BKGMST.PRDNAM,BKGMST.PRDPRY,BKGMST.PRDCOD,
				    Arpuld.Uldbkgidr Uldbkgidr,Arpuld.Bupflg Bupflg,Arpuld.Uldctr  Uldctr,
					Arpuld.Uldocp Uldocp,NULL Inrstwlss,Arpuld.Actwgt Actwgt,Arpuld.Tarwgt Tarwgt,
					Arpuld.POU POU,ARPULD.BRWFLG BARROWFLG, ARPULD.ULDNUM,0 BKDPCS,0 BKDWGT,0 BKDVOL
			  FROM OPRULDSHP ULDSHP
			  	 INNER JOIN OPRSHPMST SHPMST ON
			  	 	   		ULDSHP.MSTDOCNUM = SHPMST.MSTDOCNUM AND
			  	  			ULDSHP.DOCOWRIDR =  SHPMST.DOCOWRIDR AND
			  	  			ULDSHP.DUPNUM =  SHPMST.DUPNUM AND
			  	  			ULDSHP.SEQNUM =  SHPMST.SEQNUM AND
			  	  			ULDSHP.CMPCOD =  SHPMST.CMPCOD
				 INNER JOIN OPRARPULD ARPULD
						    ON ULDSHP.CMPCOD  = ARPULD.CMPCOD
						    AND ULDSHP.ARPCOD = ARPULD.ARPCOD
						    AND ULDSHP.ULDNUM = ARPULD.ULDNUM
			  	 LEFT OUTER JOIN OPRSHPRATDTL SHPRAT ON
			   				SHPMST.CMPCOD = SHPRAT.CMPCOD AND
			   				SHPMST.DOCOWRIDR = SHPRAT.DOCOWRIDR AND
			   				SHPMST.MSTDOCNUM = SHPRAT.MSTDOCNUM AND
			   				SHPMST.DUPNUM = SHPRAT.DUPNUM AND
			   				SHPMST.SEQNUM = SHPRAT.SEQNUM 
			   	LEFT OUTER JOIN CAPBKGMST BKGMST ON 
							SHPMST.CMPCOD = BKGMST.CMPCOD AND 
							SHPMST.DOCOWRIDR = BKGMST.DOCOWRIDR AND
							SHPMST.MSTDOCNUM = BKGMST.MSTDOCNUM AND
							SHPMST.DUPNUM = BKGMST.DUPNUM AND
							SHPMST.SEQNUM = BKGMST.SEQNUM AND
							SHPMST.UBRNUM = BKGMST.UBRNUM
			 WHERE   
			  	  ULDSHP.CMPCOD = ? 	  	  
	  	   ]]> 	
        </QRY:Source>
    </QRY:Definition>  
	<!--Added by A-4772 for ICRD-91234 ends here-->
	<QRY:Definition>
		<QRY:Id>123</QRY:Id>
		<QRY:Source Name="operations.flthandling.loadplan.findpositionpols" Type="NATIVE">SELECT positionPOL from
				LoadPlanPositionPOL as positionPOL
				WHERE
				positionPOL.loadPlanPositionPOLPK.companyCode= ?  AND
				positionPOL.loadPlanPositionPOLPK.flightCarrierIdentifier= ? AND
				positionPOL.loadPlanPositionPOLPK.flightNumber =  ? AND
				positionPOL.loadPlanPositionPOLPK.flightSequenceNumber= ?  AND
				positionPOL.loadPlanPositionPOLPK.pol = ?</QRY:Source>
	</QRY:Definition>
	<QRY:Definition>
		<QRY:Id>125</QRY:Id>
		<QRY:Source Name="operations.flthandling.loadplan.findpositionpolsversion" Type="NATIVE">SELECT positionPOL from
				LoadPlanPOLPositionVersion as positionPOL
				WHERE
				positionPOL.loadPlanPOLPositionVersionPK.companyCode= ?  AND
				positionPOL.loadPlanPOLPositionVersionPK.flightCarrierIdentifier= ? AND
				positionPOL.loadPlanPOLPositionVersionPK.flightNumber =  ? AND
				positionPOL.loadPlanPOLPositionVersionPK.flightSequenceNumber= ?  AND
				positionPOL.loadPlanPOLPositionVersionPK.pol = ? AND
				positionPOL.loadPlanPOLPositionVersionPK.version = ?</QRY:Source>
	</QRY:Definition>
	<QRY:Definition>
		<QRY:Id>126</QRY:Id>
		<QRY:Source Name="operations.flthandling.loadplan.findactualuldDetails" Type="NATIVE">
			<![CDATA[
SELECT * FROM ( SELECT SUM(ULDSHP.WGT) OVER ( PARTITION BY ULDSHP.ULDNUM,ULDSHP.CMPCOD) ULDWGT,
    SUM(ULDSHP.NUMPCS) 
OVER ( PARTITION BY ULDSHP.ULDNUM, ULDSHP.CMPCOD) ULDPCS,
	SUM(ULDSHP.VOL) OVER ( PARTITION BY ULDSHP.ULDNUM, 
ULDSHP.CMPCOD) ULDVOL,
    ULD.ULDNUM,
    ULD.CMPCOD,
    ULDSHP.DOCOWRIDR,
    ULDSHP.MSTDOCNUM,
    
    ULDSHP.DUPNUM,
    ULDSHP.SEQNUM,
    ULD.ULDCTR,
    NULL FLTCARCOD,
    NULL FLTNUM,
    NULL STA,
    
    NULL ETA,
    NULL ATA,
  STU.CURLOCCOD,
  ULD.ACTWGT
    FROM OPRARPULD ULD
    INNER JOIN OPRULDSHP 
ULDSHP
    ON ULDSHP.ULDNUM  = ULD.ULDNUM
    AND ULDSHP.ARPCOD = ULD.ARPCOD
    AND ULDSHP.CMPCOD = 
ULD.CMPCOD
INNER JOIN OPRLODPLNSHP LODSHP
ON ULDSHP.CMPCOD     = LODSHP.CMPCOD
AND ULDSHP.DOCOWRIDR = 
LODSHP.DOCOWNIDR
AND ULDSHP.MSTDOCNUM = LODSHP.MSTDOCNUM
AND ULDSHP.DUPNUM    = LODSHP.DUPNUM
AND ULDSHP.SEQNUM    
= LODSHP.SEQNUM
   INNER JOIN
  (SELECT SUBSTR ( CSVULD , DECODE(LEVEL, 1, 1, INSTR(CSVULD, DELIMITER, 
1, LEVEL -1)+1) , INSTR(CSVULD, DELIMITER, 1, LEVEL) - DECODE(LEVEL, 1, 1 , INSTR(CSVULD, DELIMITER, 
1, LEVEL-1)+1) ) ULDNUM
  FROM
    ( SELECT ? AS CSVULD, ',' AS DELIMITER FROM DUAL
    )
    CONNECT 
BY INSTR(CSVULD, DELIMITER, 1, LEVEL)> 1
  ) ULDVAL
   ON ULDVAL.ULDNUM=ULD.ULDNUM
   LEFT OUTER JOIN 
WHSSTUMST STU
ON STU.CMPCOD        = ULD.CMPCOD
AND STU.ARPCOD       = ULD.ARPCOD
AND STU.STUCOD       
= ULD.ULDNUM
WHERE ULD.CMPCOD     = ?
AND ULD.ARPCOD       = ?
AND LODSHP.FLTCARIDR = ?
AND LODSHP.FLTNUM    
= ?
AND LODSHP.FLTSEQNUM =?
   UNION 
   SELECT SUM(ULD.BDPWGT) OVER ( PARTITION BY ULD.ULDNUM,ULD.CMPCOD) 
ULDWGT,
  SUM(ULD.BDPPCS) OVER ( PARTITION BY ULD.ULDNUM,ULD.CMPCOD) ULDPCS,
   SUM(ULD.BDPVOL) OVER 
( PARTITION BY ULD.ULDNUM, ULD.CMPCOD) ULDVOL,
  ULD.ULDNUM,
  ULD.CMPCOD,
  ULD.DOCOWRIDR,
  ULD.MSTDOCNUM,
  
  ULD.DUPNUM,
  ULD.SEQNUM,
  SEGULD.ULDCTR,
  ARL.TWOAPHCOD FLTCARCOD,
  FLTLEG.FLTNUM,
  FLTLEG.STA,
  
  FLTLEG.ETA,
  FLTLEG.ATA,
  STU.CURLOCCOD,
  SEGULD.ACTWGT
  FROM OPRSEGULDSHP ULD
  INNER JOIN OPRLODPLNSHP 
LODSHP
  ON ULD.CMPCOD     = LODSHP.CMPCOD
  AND ULD.DOCOWRIDR = LODSHP.DOCOWNIDR
  AND ULD.MSTDOCNUM 
= LODSHP.MSTDOCNUM
  AND ULD.DUPNUM    = LODSHP.DUPNUM
  AND ULD.SEQNUM    = LODSHP.SEQNUM
  INNER JOIN 
OPRSEGULD SEGULD
  ON SEGULD.CMPCOD     =ULD.CMPCOD
  AND SEGULD.FLTNUM    =ULD.FLTNUM
  AND SEGULD.FLTCARIDR 
=ULD.FLTCARIDR
  AND SEGULD.FLTSEQNUM =ULD.FLTSEQNUM
  AND SEGULD.SEGSERNUM =ULD.SEGSERNUM
  AND SEGULD.ULDNUM    
=ULD.ULDNUM
  INNER JOIN
  (SELECT SUBSTR ( CSVULD , DECODE(LEVEL, 1, 1, INSTR(CSVULD, DELIMITER, 1, 
LEVEL -1)+1) , INSTR(CSVULD, DELIMITER, 1, LEVEL) - DECODE(LEVEL, 1, 1 , INSTR(CSVULD, DELIMITER, 1, 
LEVEL-1)+1) ) ULDNUM
  FROM
    ( SELECT ? AS CSVULD, ',' AS DELIMITER FROM DUAL
    )
    CONNECT BY 
INSTR(CSVULD, DELIMITER, 1, LEVEL)> 1
    ) ULDVAL
    ON ULDVAL.ULDNUM=SEGULD.ULDNUM
    INNER JOIN 
FLTOPRLEG FLTLEG
    ON FLTLEG.CMPCOD     = ULD.CMPCOD
    AND FLTLEG.FLTNUM    = ULD.FLTNUM
    AND 
FLTLEG.FLTCARIDR = ULD.FLTCARIDR
    AND FLTLEG.FLTSEQNUM = ULD.FLTSEQNUM
INNER JOIN SHRARLMST ARL
ON 
FLTLEG.CMPCOD     = ARL.CMPCOD
    AND FLTLEG.FLTCARIDR =ARL.ARLIDR
    LEFT OUTER JOIN WHSSTUMST STU
    
    ON STU.CMPCOD        = ULD.CMPCOD
    AND STU.ARPCOD       = FLTLEG.LEGDST
    AND STU.STUCOD       = 
SEGULD.ULDNUM
    WHERE ULD.CMPCOD     = ?
    AND FLTLEG.LEGDST    = ?
    AND LODSHP.FLTCARIDR = ?
    
    AND LODSHP.FLTNUM    = ?
    AND LODSHP.FLTSEQNUM = ?
	)
ORDER BY FLTCARCOD,FLTNUM
			]]>
		</QRY:Source>
	</QRY:Definition>
	<QRY:Definition>  
	<QRY:Id>124</QRY:Id>
        <QRY:Source Name="operations.flthandling.loadplan.findflightforulds" Type="NATIVE"> 
        <![CDATA[
			SELECT ACTULD.* FROM (SELECT ULD.ACTULDNUM,
  ULD.FLTNUM,
  ULD.FLTSEQNUM,
  ARL.TWOAPHCOD FLTCARCOD,
  POL.FLTDAT,
  ULD.ULDREFNUM ,
  POL.POL,
  Flt.Fltcaridr
FROM OPRLODPLNULD ULD
INNER JOIN OPRLODPLNPOL POL
ON ULD.CMPCOD     =POL.CMPCOD
AND ULD.FLTNUM    =POL.FLTNUM
AND ULD.FLTSEQNUM = POL.FLTSEQNUM
AND ULD.FLTCARIDR = POL.FLTCARIDR
INNER JOIN OPRLODPLNSHP LODPLNSHP
ON ULD.CMPCOD     =LODPLNSHP.CMPCOD
AND ULD.FLTNUM    =LODPLNSHP.FLTNUM
AND ULD.FLTSEQNUM = LODPLNSHP.FLTSEQNUM
AND ULD.FLTCARIDR = LODPLNSHP.FLTCARIDR
AND ULD.ULDREFNUM = LODPLNSHP.ULDREFNUM
AND ULD.SEGORG    = LODPLNSHP.SEGORG
AND ULD.SEGDST    = LODPLNSHP.SEGDST
INNER JOIN FLTOPRLEG FLT
ON POL.CMPCOD     =FLT.CMPCOD
AND POL.FLTNUM    =FLT.FLTNUM
AND POL.FLTSEQNUM = FLT.FLTSEQNUM
AND POL.FLTCARIDR = FLT.FLTCARIDR
AND POL.POL       = FLT.LEGORG
INNER JOIN SHRARLMST ARL
ON FLT.CMPCOD     = ARL.CMPCOD
AND FLT.FLTCARIDR =ARL.ARLIDR
WHERE ULD.CMPCOD  = ?
AND FLT.LEGSTA   <> ?
AND POL.POL       = ?
AND EXISTS
  (SELECT 1
  FROM
    (SELECT SUBSTR(AWB, 1,INSTR(AWB,'|',1,1)-1) ULDNUM,
  SUBSTR(AWB, INSTR(AWB,'|',1,1)        +1,INSTR(AWB,'|',1,2)-INSTR(AWB,'|',1,1)-1) MSTDOCNUM,
  SUBSTR(AWB, INSTR(AWB,'|',1,2)        +1,INSTR(AWB,'|',1,3)-INSTR(AWB,'|',1,2)-1) DOCOWRIDR,
  SUBSTR(AWB, INSTR(AWB,'|',1,3)        +1,INSTR(AWB,'|',1,4)-INSTR(AWB,'|',1,3)-1) DUPNUM,
  SUBSTR(AWB, INSTR(AWB,'|',1,4)        +1) SEQNUM
FROM
  (SELECT SUBSTR ( CSVAWB , DECODE(LEVEL, 1, 1, INSTR(CSVAWB, DELIMITER, 1, LEVEL-1)+1) , INSTR(CSVAWB, DELIMITER, 1, LEVEL) - DECODE(LEVEL, 1, 1, INSTR(CSVAWB, DELIMITER, 1, LEVEL-1)+1) ) AWB
  FROM
    (SELECT ? AS CSVAWB, ',' AS DELIMITER FROM DUAL
    )
    CONNECT BY INSTR(CSVAWB, DELIMITER, 1, LEVEL)> 0
  )
    )SHP 
  WHERE SHP.ULDNUM  = ULD.ACTULDNUM
  AND SHP.MSTDOCNUM = LODPLNSHP.MSTDOCNUM
  AND SHP.DOCOWRIDR = LODPLNSHP.DOCOWNIDR
  AND SHP.DUPNUM    = LODPLNSHP.DUPNUM
  AND SHP.SEQNUM    = LODPLNSHP.SEQNUM
))
ACTULD 
WHERE (ACTULD.FLTNUM <> ?
OR ACTULD.FLTSEQNUM <> ?
OR ACTULD.Fltcaridr <> ?)
		 ]]>
        </QRY:Source>
    </QRY:Definition>
	<QRY:Definition>  
	<QRY:Id>125</QRY:Id>
        <QRY:Source Name="operations.flthandling.loadplan.prebuildup.findLatestPreBuildupShipmentDetForFlights" Type="NATIVE"> 
        <![CDATA[
			SELECT LDPPOL.FLTNUM ,LDPPOL.FLTSEQNUM ,LDPPOL.FLTCARIDR,SHPMST.SHPPFX AWBPFX,SHPMST.MSTDOCNUM AWBNUM,
					  SHPMST.DUPNUM,
					  CONFLTDTL.CONFLTNUM SHPCONFLTNUM,
					  CONFLTDTL.CONFLTDAT SHPCONFLTDAT,
					  CONFLTDTL.CONFLTCARCOD SHPCONFLTCARCOD,
					  CONFLTDTL.CONFLTCARIDR SHPCONFLTCARIDR,
					  CONFLTDTL.CONFLTSEQNUM SHPCONFLTSEQNUM,
					  CONFLTDTL.CONFLTORG SHPCONFLTORG,
					  CONFLTDTL.CONFLTDST SHPCONFLTDST,
					  CONFLTDTL.PLNPCS SHPCONFLTPCS,
					  CONFLTDTL.PLNWGT SHPCONFLTWGT,
					  CONFLTDTL.PLNVOL SHPCONFLTVOL,
					  SHPULDCAT.ULDCATCOD SHPULDCATCOD,
					  SHPULDCAT.NUMULD SHPNUMULD,
					  LDPSHP.SEGDST POU,
					  LDPPOL.POL,
					  LDPSHP.SHPORG ORG,
					  LDPSHP.SHPDST DST,
					  LDPSHP.AVLPCS,
					  LDPPOL.RMK,
					  LDPSHP.SHPAGTCOD,
					  LDPSHP.STDPCS,
					  SHPMST.SEQNUM,
					  SHPMST.DOCOWRIDR,
					  SHPMST.GRSVOL,
					  LDPSHP.SHPDES,
					  LDPPOL.CMPCOD,
					  LDPSHP.DIMDTL,
					  LDPSHP.PLNSCC,
					  LDPSHP.SERNUM,
					  LDPSHP.LODVER,
					  LDPSHP.POSSERNUM,
					  LDPSHP.SHPSRC,
					  LDPSHP.SHPRMK,
					  LDPSHP.SEGSERNUM,
					  LDPSHP.PLNPCS,
					  LDPSHP.PLNWGT,
					  LDPSHP.PLNVOL,
					  LDPSHP.BKGPCS,
					  LDPSHP.BKGWGT,
					  LDPSHP.BKGVOL,
					  LDPPOL.BKGRTVTIM,
					  LDPPOL.HUBFLG,
					  LDPPOL.ULDCFGNAM,
					  LDPPOL.LODPLNSTA,
					  LDPSHP.GRPCOD,
					  LDPSHP.PRDCOD,
					  LDPSHP.CAPTYP,
					  LDPSHP.STNCOD,		  
					  FLTSEG.SEGSERNUM FLTSEGSERNUM,
					  FLTSEG.SEGDST FLTPOU,
					  FLTCAP.DISWGT,
					  FLTCAP.DISVOL,
					  FLTCAP.ULDCFGNAM AS ULDCATCFG,
					  LDPSHP.LSTUPDTIM LDPSHPLSTUPDTIM,
					  LDPSHP.LSTUPDUSR LDPSHPLSTUPDUSR,
					  LDPPOL.LSTUPDTIM LDPPOLLSTUPDTIM,
					  LDPPOL.LSTUPDUSR LDPPOLLSTUPDUSR,
					  LDPPOL.LODPLNUPDDATGMT,
					  FLTMST.FLTROU
					FROM OPRPREBLDLODPLNPOL LDPPOL,
					  OPRPREBLDLODPLNSHP LDPSHP,
					  OPRSHPMST SHPMST,
					  FLTOPRSEG FLTSEG,
					  FLTOPRLEG FLTLEG,
					  FLTOPRCAP FLTCAP,
					  FLTOPRMST FLTMST,
					  OPRPREBLDLODPLNSHPCONFLT CONFLTDTL,
					  OPRPREBLDLODPLNSHPULDCAT SHPULDCAT
					WHERE LDPPOL.CMPCOD  = LDPSHP.CMPCOD(+)
					AND LDPPOL.FLTCARIDR = LDPSHP.FLTCARIDR (+)
					AND LDPPOL.FLTNUM    = LDPSHP.FLTNUM (+)
					AND LDPPOL.FLTSEQNUM = LDPSHP.FLTSEQNUM (+)
					AND LDPPOL.SERNUM    = LDPSHP.SERNUM(+)
					AND LDPSHP.CMPCOD     = CONFLTDTL.CMPCOD(+)
					AND LDPSHP.FLTCARIDR  = CONFLTDTL.FLTCARIDR(+)
					AND LDPSHP.FLTNUM     = CONFLTDTL.FLTNUM(+)
					AND LDPSHP.FLTSEQNUM  = CONFLTDTL.FLTSEQNUM(+)
					AND LDPSHP.SERNUM     = CONFLTDTL.SERNUM(+)
					AND LDPSHP.SEGORG     = CONFLTDTL.SEGORG(+)
					AND LDPSHP.SEGDST     = CONFLTDTL.SEGDST(+)
					AND LDPSHP.LODVER     = CONFLTDTL.LODVER(+)
					AND LDPSHP.DOCOWRIDR  = CONFLTDTL.DOCOWRIDR(+)
					AND LDPSHP.MSTDOCNUM  = CONFLTDTL.MSTDOCNUM(+)
					AND LDPSHP.SEQNUM     = CONFLTDTL.SEQNUM(+)
					AND LDPSHP.DUPNUM     = CONFLTDTL.DUPNUM(+)
					AND LDPSHP.POSSERNUM  = CONFLTDTL.POSSERNUM(+)
					AND LDPSHP.CMPCOD     = SHPULDCAT.CMPCOD(+)
					AND LDPSHP.FLTCARIDR  = SHPULDCAT.FLTCARIDR(+)
					AND LDPSHP.FLTNUM     = SHPULDCAT.FLTNUM(+)
					AND LDPSHP.FLTSEQNUM  = SHPULDCAT.FLTSEQNUM(+)
					AND LDPSHP.SERNUM     = SHPULDCAT.SERNUM(+)
					AND LDPSHP.SEGORG     = SHPULDCAT.SEGORG(+)
					AND LDPSHP.SEGDST     = SHPULDCAT.SEGDST(+)
					AND LDPSHP.LODVER     = SHPULDCAT.LODVER(+)
					AND LDPSHP.DOCOWRIDR  = SHPULDCAT.DOCOWRIDR(+)
					AND LDPSHP.MSTDOCNUM  = SHPULDCAT.MSTDOCNUM(+)
					AND LDPSHP.SEQNUM     = SHPULDCAT.SEQNUM(+)
					AND LDPSHP.DUPNUM     = SHPULDCAT.DUPNUM(+)
					AND LDPSHP.POSSERNUM  = SHPULDCAT.POSSERNUM(+)
					AND LDPSHP.CMPCOD    = SHPMST.CMPCOD (+)
					AND LDPSHP.MSTDOCNUM = SHPMST.MSTDOCNUM (+)
					AND LDPSHP.DUPNUM    = SHPMST.DUPNUM(+)
					AND LDPSHP.DOCOWRIDR = SHPMST.DOCOWRIDR(+)
					AND LDPSHP.SEQNUM    = SHPMST.SEQNUM(+)
					AND LDPPOL.CMPCOD    = FLTSEG.CMPCOD
					AND LDPPOL.FLTCARIDR = FLTSEG.FLTCARIDR
					AND LDPPOL.FLTNUM    = FLTSEG.FLTNUM
					AND LDPPOL.FLTSEQNUM = FLTSEG.FLTSEQNUM
					AND FLTSEG.CMPCOD    = FLTLEG.CMPCOD
					AND FLTSEG.FLTCARIDR = FLTLEG.FLTCARIDR
					AND FLTSEG.FLTNUM    = FLTLEG.FLTNUM
					AND FLTSEG.FLTSEQNUM = FLTLEG.FLTSEQNUM
					AND FLTCAP.CAPIDR 	 = FLTLEG.CAPIDR
					AND FLTCAP.CMPCOD    = FLTLEG.CMPCOD
					AND FLTCAP.FLTCARIDR = FLTLEG.FLTCARIDR
					AND FLTCAP.FLTNUM    = FLTLEG.FLTNUM
					AND FLTCAP.FLTSEQNUM = FLTLEG.FLTSEQNUM
					AND FLTSEG.CMPCOD    = FLTMST.CMPCOD
					AND FLTSEG.FLTCARIDR = FLTMST.FLTCARIDR
					AND FLTSEG.FLTNUM    = FLTMST.FLTNUM
					AND FLTSEG.FLTSEQNUM = FLTMST.FLTSEQNUM
					AND FLTSEG.SEGSTA    = 'O' 
					AND LDPPOL.CMPCOD    = ?
				  AND LDPPOL.FLTCARIDR = ?
					AND LDPPOL.FLTNUM    = ?
					AND LDPPOL.FLTSEQNUM = ?
				  AND LDPPOL.POL       = ?
				  AND FLTSEG.SEGORG    = ?
				  AND FLTLEG.LEGORG    = ?  ]]>
		</QRY:Source>
		</QRY:Definition>
		<QRY:Definition>
			<QRY:Id>126</QRY:Id>
			<QRY:Source Name="operations.flthandling.loadplan.prebuildup.findLatestPreBuildupGroupDetForFlights" Type="NATIVE"> 
				<![CDATA[
					SELECT 
					  LDPPOL.CMPCOD,
					  LDPPOL.FLTNUM ,
					  LDPPOL.FLTSEQNUM ,
					  LDPPOL.FLTCARIDR,
					  POSDTL.GRPSERNUM,
					  POSDTL.GRPCOD POSGRPCOD,
					  POSDTL.POU POSPOU,
					  POSDTL.GRPCATCOD,
					  POSDTL.ULDVOL,
					  POSDTL.SHPVOL,
					  POSDTL.ULDWGT,
					  POSDTL.CONFLTCARCOD,
					  POSDTL.CONFLTNUM,
					  POSDTL.CONFLTCARIDR,
					  POSDTL.CONFLTSEQNUM,
					  POSDTL.CONFLTDAT,
					  POSDTL.CONPOU,
					  POSDTL.CONPOL,
					  POSDTL.PRDCOD POSPRDCOD,
					  (SELECT PRDNAM FROM PRDMST WHERE CMPCOD =POSDTL.CMPCOD AND PRDCOD= POSDTL.PRDCOD) AS POSPRDNAM,
					  POSDTL.SCCCOD POSSCCCOD,
					  POSDTL.STNCOD GRPSTNCOD,
					  POSDTL.CONFLTGRPCOD,
					  POSDTL.GRPRMK POSGRPRMK,
					  POSDTL.GRPULDWGT,
					  POSDTL.LSTUPDTIM POSDTLLSTUPDTIM,
					  POSDTL.LSTUPDUSR POSDTLLSTUPDUSR,
					  FLTSEG.SEGDST FLTPOU,
					  FLTSEG.SEGSERNUM FLTSEGSERNUM,
					  POSULD.ULDTYP,
					  POSULD.ULDSERNUM,
					  POSULD.ULDCNT,
					  POSULD.ULDREQCNT,
					  POSULD.ULDAPRCNT,
					  POSULD.STKCNT,
					  POSULD.INTFLG,
					  POSULD.RMK ULDRMK,
					  SHRCATMST.LSTUPDTIM LSTUPDTIM_ULDTYP,
					  SHRCATMST.ULDCATPRY PRIORITY
					FROM OPRPREBLDLODPLNPOL LDPPOL,
					  OPRPREBLDLODPLNPOSDTL POSDTL,
					  OPRPREBLDLODPLNPOSULDDTL POSULD, 
					  FLTOPRSEG FLTSEG,
					  FLTOPRLEG FLTLEG,
					  SHRULDCATMST SHRCATMST
					WHERE 
					LDPPOL.CMPCOD    = POSDTL.CMPCOD(+)
					AND LDPPOL.FLTCARIDR = POSDTL.FLTCARIDR(+)
					AND LDPPOL.FLTNUM    = POSDTL.FLTNUM(+)
					AND LDPPOL.FLTSEQNUM = POSDTL.FLTSEQNUM(+)
					AND LDPPOL.SERNUM    = POSDTL.SERNUM(+)
					AND POSDTL.CMPCOD    = POSULD.CMPCOD(+)
					AND POSDTL.FLTCARIDR = POSULD.FLTCARIDR(+)
					AND POSDTL.FLTNUM    = POSULD.FLTNUM(+)
					AND POSDTL.FLTSEQNUM = POSULD.FLTSEQNUM(+)
					AND POSDTL.SERNUM    = POSULD.SERNUM(+)
					AND POSDTL.GRPSERNUM = POSULD.GRPSERNUM(+)
					AND POSULD.CMPCOD    = SHRCATMST.CMPCOD(+)
					AND POSULD.ULDTYP    = SHRCATMST.ULDCATCOD(+)
					AND LDPPOL.CMPCOD    = FLTSEG.CMPCOD
					AND LDPPOL.FLTCARIDR = FLTSEG.FLTCARIDR
					AND LDPPOL.FLTNUM    = FLTSEG.FLTNUM
					AND LDPPOL.FLTSEQNUM = FLTSEG.FLTSEQNUM
					AND FLTSEG.CMPCOD    = FLTLEG.CMPCOD
					AND FLTSEG.FLTCARIDR = FLTLEG.FLTCARIDR
					AND FLTSEG.FLTNUM    = FLTLEG.FLTNUM
					AND FLTSEG.FLTSEQNUM = FLTLEG.FLTSEQNUM
					AND FLTSEG.SEGSTA    = 'O'
					AND LDPPOL.CMPCOD    = ?
					AND LDPPOL.FLTCARIDR = ?
					AND LDPPOL.FLTNUM    = ?
					AND LDPPOL.FLTSEQNUM = ?
					AND LDPPOL.POL       = ?
					AND FLTSEG.SEGORG    = ?
					AND FLTLEG.LEGORG    = ?  ]]>
			</QRY:Source>
		</QRY:Definition>
		<QRY:Definition>
	        <QRY:Id>127</QRY:Id>
	 	   <QRY:Source Name="operations.flthandling.loadplan.prebuildup.findFlightLegVolumeAndWeight" Type="NATIVE">
	 		<![CDATA[
	 				SELECT CAP.DISWGT DISWGT ,
	 					   CAP.DISVOL DISVOL
	 				FROM FLTOPRLEG LEG,
	 					 FLTOPRCAP CAP
	 				WHERE CAP.CMPCOD = LEG.CMPCOD
	 					AND CAP.FLTCARIDR  = LEG.FLTCARIDR
	 					AND CAP.FLTNUM     = LEG.FLTNUM
	 					AND CAP.FLTSEQNUM  = LEG.FLTSEQNUM
	 					AND CAP.CAPIDR     = LEG.CAPIDR
	 					AND LEG.CMPCOD     = ?
	 					AND LEG.FLTCARIDR  = ?
	 					AND LEG.FLTNUM     = ?
	 					AND LEG.FLTSEQNUM  = ?
	 					AND LEG.LEGORG     = ?
		 ]]>
        </QRY:Source>
    </QRY:Definition>
	<QRY:Definition>
	        <QRY:Id>128</QRY:Id>
	 	   <QRY:Source Name="operations.flthandling.loadplan.prebuildup.checkifprebuilduphubflight" Type="NATIVE">
	 		<![CDATA[
	 				SELECT PREPOL.HUBFLG
					FROM OPRPREBLDLODPLNPOL PREPOL
					WHERE PREPOL.CMPCOD = ?
						AND PREPOL.FLTCARIDR = ?
						AND PREPOL.FLTNUM   = ?
						AND PREPOL.FLTSEQNUM = ?
						AND PREPOL.POL      = ?
		 ]]>
        </QRY:Source>
    </QRY:Definition>
     <QRY:Definition>
    	       <QRY:Id>128</QRY:Id>
    		   <QRY:Source Name="operations.flthandling.loadplan.listAvailablePositions" Type="NATIVE">
    			<![CDATA[
    				SELECT CMPCOD,FLTCARIDR,FLTNUM,
    				FLTSEQNUM,CFGSERNUM,POS, POL, POU, LODPRY
    				FROM OPRLODPLNPOSDTL POSDTL
    				WHERE 
    				POSDTL.CMPCOD=?
    				AND POSDTL.FLTCARIDR=?
    				AND POSDTL.FLTNUM=?
    				AND POSDTL.FLTSEQNUM=?
    			]]>
    		  </QRY:Source>
     </QRY:Definition>
     <QRY:Definition>  
    	  <QRY:Id>129</QRY:Id>
            <QRY:Source Name="operations.flthandling.loadplan.findLoadPlanConfigForAllPols" Type="NATIVE"> 
            	<![CDATA[
    			SELECT POL.CMPCOD,
    			  POL.FLTCARIDR,
    			  POL.FLTNUM,
    			  POL.FLTSEQNUM,
    			  POL.POLVER,
    			  POL.CFGSERNUM,
    			  POL.POL
    			FROM OPRLODPLNPOL POL
    			WHERE POL.CMPCOD  = ?
    			AND POL.FLTCARIDR = ?
    			AND POL.FLTNUM    = ?
    			AND POL.FLTSEQNUM = ?	
    			]]>
    		 </QRY:Source>
	 </QRY:Definition>
	 <QRY:Definition>
	   <QRY:Id>130</QRY:Id>
	   <QRY:Source Name="operations.flthandling.cto.findinboundflightforlodplnshipmnt" Type="NATIVE">
			<![CDATA[
				SELECT CMPCOD,FLTNUM,FLTCARIDR,FLTSEQNUM,DOCOWRIDR,MSTDOCNUM,DUPNUM,SEQNUM,ULDNUM,PCS,WGT,VOL,
				SEGORG,SEGDST,LEGDST,ATA,ETA,STA,FLTTYP,ACRTYP,TALNUM,SRC FROM (
				SELECT BKGFLT.CMPCOD,BKGFLT.FLTNUM,BKGFLT.FLTCARIDR,BKGFLT.FLTSEQNUM,BKGFLT.DOCOWRIDR,
				BKGFLT.MSTDOCNUM,BKGFLT.DUPNUM,BKGFLT.SEQNUM,NULL ULDNUM,BKGFLT.NUMPCS PCS,
				BKGFLT.WGT WGT,BKGFLT.VOL VOL,BKGFLT.FLTORG SEGORG,BKGFLT.FLTDST SEGDST,FLTLEG.LEGDST,
				FLTLEG.ATA,FLTLEG.ETA,FLTLEG.STA,FLTMST.FLTTYP,FLTLEG.ACRTYP,FLTLEG.TALNUM,'LODPLN' SRC FROM 
				CAPBKGFLTDTL BKGFLT INNER JOIN FLTOPRLEG FLTLEG ON
				BKGFLT.CMPCOD = FLTLEG.CMPCOD AND
				BKGFLT.FLTNUM = FLTLEG.FLTNUM AND
				BKGFLT.FLTCARIDR = FLTLEG.FLTCARIDR AND
				BKGFLT.FLTSEQNUM = FLTLEG.FLTSEQNUM AND
				BKGFLT.FLTDST = FLTLEG.LEGDST INNER JOIN FLTOPRMST FLTMST ON
				FLTLEG.CMPCOD = FLTMST.CMPCOD AND
				FLTLEG.FLTNUM = FLTMST.FLTNUM AND
				FLTLEG.FLTCARIDR = FLTMST.FLTCARIDR AND
				FLTLEG.FLTSEQNUM = FLTMST.FLTSEQNUM INNER JOIN SHRACRTYPMST ACRTYP ON
				FLTLEG.CMPCOD = ACRTYP.CMPCOD AND
				FLTLEG.ACRTYP = ACRTYP.ACRTYPCOD AND
				FLTMST.FLTTYP = ACRTYP.FLTTYP 
				INNER JOIN OPRSHPMST SHPMST ON
				BKGFLT.CMPCOD = SHPMST.CMPCOD AND
				BKGFLT.MSTDOCNUM = SHPMST.MSTDOCNUM AND
				BKGFLT.DOCOWRIDR = SHPMST.DOCOWRIDR AND
				BKGFLT.SEQNUM = SHPMST.SEQNUM AND
				BKGFLT.DUPNUM = SHPMST.DUPNUM
				WHERE BKGFLT.CMPCOD= ? AND BKGFLT.DOCOWRIDR= ?
				AND BKGFLT.MSTDOCNUM= ? AND	BKGFLT.SEQNUM = ?
				AND BKGFLT.DUPNUM = ? AND BKGFLT.FLTDST =?
				UNION
				SELECT SEGSHP.CMPCOD,SEGSHP.FLTNUM,SEGSHP.FLTCARIDR,SEGSHP.FLTSEQNUM,SEGSHP.DOCOWRIDR,
				SEGSHP.MSTDOCNUM,SEGSHP.DUPNUM,SEGSHP.SEQNUM,SEGSHP.ULDNUM,
				SEGSHP.MFTPCS PCS,SEGSHP.MFTWGT WGT,SEGSHP.MFTVOL VOL,FLTSEG.POL SEGORG,
				FLTSEG.POU SEGDST,FLTLEG.LEGDST,FLTLEG.ATA,FLTLEG.ETA,FLTLEG.STA,FLTMST.FLTTYP,
				FLTLEG.ACRTYP,FLTLEG.TALNUM,'IMPMFT' SRC FROM OPRSEGULDSHP SEGSHP INNER JOIN OPRFLTSEG FLTSEG 
				ON SEGSHP.CMPCOD = FLTSEG.CMPCOD 
				AND SEGSHP.FLTNUM = FLTSEG.FLTNUM 
				AND SEGSHP.FLTCARIDR = FLTSEG.FLTCARIDR 
				AND SEGSHP.FLTSEQNUM = FLTSEG.FLTSEQNUM 
				AND SEGSHP.SEGSERNUM = FLTSEG.SEGSERNUM INNER JOIN FLTOPRLEG FLTLEG ON
				FLTSEG.CMPCOD = FLTLEG.CMPCOD AND
				FLTSEG.FLTNUM = FLTLEG.FLTNUM AND
				FLTSEG.FLTCARIDR = FLTLEG.FLTCARIDR AND
				FLTSEG.FLTSEQNUM = FLTLEG.FLTSEQNUM AND
				FLTSEG.POU = FLTLEG.LEGDST  INNER JOIN FLTOPRMST FLTMST ON
				FLTSEG.CMPCOD = FLTMST.CMPCOD AND
				FLTSEG.FLTNUM = FLTMST.FLTNUM AND
				FLTSEG.FLTCARIDR = FLTMST.FLTCARIDR AND
				FLTSEG.FLTSEQNUM = FLTMST.FLTSEQNUM  INNER JOIN SHRACRTYPMST ACRTYP ON
				FLTLEG.CMPCOD = ACRTYP.CMPCOD AND
				FLTLEG.ACRTYP = ACRTYP.ACRTYPCOD AND
				FLTMST.FLTTYP = ACRTYP.FLTTYP  WHERE 
				SEGSHP.CMPCOD=? AND	SEGSHP.DOCOWRIDR=? AND SEGSHP.MSTDOCNUM=? AND
				SEGSHP.SEQNUM =? AND SEGSHP.DUPNUM =? AND FLTSEG.POU =? AND SEGSHP.MFTPCS >0) 
				ORDER BY STA,SRC
		 ]]>
        </QRY:Source>
    </QRY:Definition>
	 <QRY:Definition>
	       <QRY:Id>131</QRY:Id>
		   <QRY:Source Name="operations.flthandling.loadplan.findLoadPlanGroupDetails" Type="NATIVE">
			<![CDATA[
				SELECT LODPOL.CMPCOD,LODPOL.FLTNUM,LODPOL.FLTSEQNUM,LODPOL.FLTCARIDR,
				GRPDTL.GRPIDR,GRPDTL.GRPASGUSR,GRPDTL.GRPSTA,GRPDTL.GRPTYP,GRPDTL.DUEDAT,GRPDTL.AUTGRPFLG,
				GRPDTL.FCLIDR,GRPDTL.LSTUPDTIM,GRPDTL.LSTUPDUSR,GRPDTL.POL,GRPDTL.POU,GRPDTL.SPLINS
				FROM OPRLODPLNGRPDTL GRPDTL INNER JOIN OPRLODPLNPOL LODPOL ON
				GRPDTL.CMPCOD = LODPOL.CMPCOD AND
				GRPDTL.FLTCARIDR = LODPOL.FLTCARIDR AND
				GRPDTL.FLTNUM = LODPOL.FLTNUM AND
				GRPDTL.FLTSEQNUM = LODPOL.FLTSEQNUM AND
				GRPDTL.POL = LODPOL.POL WHERE
				LODPOL.CMPCOD 		= ?  
				AND LODPOL.FLTCARIDR	= ?  
				AND LODPOL.FLTNUM 		= ?  
				AND LODPOL.FLTSEQNUM 	= ? 
				AND LODPOL.POL 			= ?  ORDER BY TO_NUMBER(SUBSTR(GRPIDR,6))
			]]>
		  </QRY:Source>
	 </QRY:Definition>	
	 <QRY:Definition>
    <QRY:Id>132</QRY:Id>
	<QRY:Source Name="operations.flthandling.loadplan.findShipmentGroupDetails" Type="NATIVE">
	 <![CDATA[
		SELECT lodgrp.fltnum,
	  lodgrp.fltseqnum,
	  lodgrp.fltcaridr,
	  lodgrp.pol,
	  lodgrp.grpidr,
	  lodgrp.cmpcod,
	  lodshp.mstdocnum,
	  lodshp.dupnum,
	  lodshp.seqnum,
	  lodshp.docownidr ,
	  lodshp.lodpry,
	  lodshp.plnpcs,
	  lodshp.plnwgt,
	  lodshp.plnvol,
	  lodshp.segorg,
	  lodshp.segdst,
	  shpmst.stdpcs,
	  shpmst.stdwgt,
	  shpmst.stdwgtcod,
	  shpmst.grsvol,
	  shpmst.dstcod,
	  shpmst.shppfx,
	  shpmst.orgcod,
	  shpmst.shpsta,
	  aprshp.avlpcs,
	  aprshp.avlwgt,
	  aprshp.avlvol,
	  aprshp.bdppcs totbdppcs,
	  aprshp.bdpwgt totbdpwgt,
	  shpmst.scccod,
     (SELECT DISTINCT  blksta
        FROM oprshpblk blk
        WHERE blk.mstdocnum = lodshp.mstdocnum
       AND blk.docowridr = lodshp.docownidr
       AND blk.dupnum = lodshp.dupnum
       AND blk.seqnum = lodshp.seqnum
       AND blk.cmpcod = lodshp.cmpcod
       AND blk.arpcod=lodgrp.pol
	   AND blk.blkaut not in('DGB')
		  AND blksta          = 'B'
		  )blksta,
		  (SELECT DISTINCT  blksta
        FROM oprshpblk blk
        WHERE blk.mstdocnum = lodshp.mstdocnum
       AND blk.docowridr = lodshp.docownidr
       AND blk.dupnum = lodshp.dupnum
       AND blk.seqnum = lodshp.seqnum
       AND blk.cmpcod = lodshp.cmpcod
       AND blk.arpcod=lodgrp.pol
	   AND blk.blkaut ='DGB'
		  AND blksta  = 'B'
		  )dgblksta,
		  (SELECT DISTINCT(1)
		From oprdmgdis dmgshp
		WHERE dmgshp.cmpcod     = lodshp.cmpcod
		AND dmgshp.mstdocnum = lodshp.mstdocnum
		AND dmgshp.seqnum    = lodshp.seqnum
		AND dmgshp.dupnum    = lodshp.dupnum
		AND dmgshp.docowridr = lodshp.docownidr
		AND dmgshp.arpcod    = lodshp.segorg
		AND dmgshp.dissta    ='O'
		)dmgindc,
	  shploc.loccod,
	  shploc.whscod,
	  shploc.stucod,
	  shploc.locpcs,
	  shploc.locwgt,
	  shploc.txnpcs,
	  shploc.arpcod,
	  shploc.stgstrtim,
	  uldshp.uldnum uldshpuld
	FROM oprlodplngrpdtl lodgrp
	INNER JOIN oprlodplnshp lodshp
	ON lodgrp.cmpcod     = lodshp.cmpcod
	AND lodgrp.fltnum    = lodshp.fltnum
	AND lodgrp.fltseqnum = lodshp.fltseqnum
	AND lodgrp.fltcaridr = lodshp.fltcaridr
	AND lodgrp.pol       = lodshp.segorg
	AND lodgrp.grpidr    = lodshp.grpidr
	INNER JOIN oprshpmst shpmst
	ON lodshp.cmpcod     = shpmst.cmpcod
	AND lodshp.mstdocnum = shpmst.mstdocnum
	AND lodshp.seqnum    = shpmst.seqnum
	AND lodshp.dupnum    = shpmst.dupnum
	AND lodshp.docownidr = shpmst.docowridr
	INNER JOIN oprarpshp aprshp
	ON lodshp.cmpcod     = aprshp.cmpcod
	AND lodshp.mstdocnum = aprshp.mstdocnum
	AND lodshp.seqnum    = aprshp.seqnum
	AND lodshp.dupnum    = aprshp.dupnum
	AND lodshp.docownidr = aprshp.docowridr
	AND lodshp.segorg    = aprshp.arpcod
	INNER JOIN fltoprleg fltleg
	ON lodgrp.cmpcod     = fltleg.cmpcod
	AND lodgrp.fltnum    = fltleg.fltnum
	AND lodgrp.fltseqnum = fltleg.fltseqnum
	AND lodgrp.fltcaridr = fltleg.fltcaridr
	AND lodgrp.pol       = fltleg.legorg
	LEFT OUTER JOIN whsoprshploc shploc
	ON shploc.cmpcod     = lodshp.cmpcod
	AND shploc.mstdocnum = lodshp.mstdocnum
	AND shploc.seqnum    = lodshp.seqnum
	AND shploc.dupnum    = lodshp.dupnum
	AND shploc.docowridr = lodshp.docownidr
	AND shploc.arpcod    = lodshp.segorg
	LEFT OUTER JOIN opruldshp uldshp
	ON shploc.cmpcod     = uldshp.cmpcod
	AND shploc.mstdocnum = uldshp.mstdocnum
	AND shploc.seqnum    = uldshp.seqnum
	AND shploc.dupnum    = uldshp.dupnum
	AND shploc.docowridr = uldshp.docowridr
	AND shploc.stucod    = uldshp.uldnum
    LEFT OUTER JOIN oprarpexpflt expflt
	ON  fltleg.cmpcod = expflt.cmpcod
	AND fltleg.fltnum = expflt.fltnum
	AND  fltleg.fltseqnum = expflt.fltseqnum
    AND  fltleg.fltcaridr = expflt.fltcaridr
	AND  fltleg.legsernum = expflt.legsernum
	AND  fltleg.legorg = expflt.arpcod
	WHERE lodgrp.cmpcod     = ?
	AND lodgrp.pol     = ?
]]>
        </QRY:Source>
 </QRY:Definition>
 <QRY:Definition>
    <QRY:Id>133</QRY:Id>
			<QRY:Source Name="operations.flthandling.loadplan.findTaskDetails" Type="NATIVE">
			<![CDATA[
				SELECT lodmst.fltcarcod,
			  lodgrp.cmpcod,
			  lodgrp.fltnum,
			  lodgrp.fltseqnum,
			  lodgrp.fltcaridr,
			  lodgrp.pol,
			  lodgrp.pou,
			  expflt.fltoprsta,
			   fltmst.fltsta ,
			  lodgrp.grpidr,
			  lodgrp.fclidr,
			  lodgrp.grpsta,
			  lodgrp.grptyp,
			  lodgrp.splins,
			  nvl(lodgrp.duedat,fltleg.std) duedat,
			  fltleg.std,
			  fltleg.etd,
			  fltleg.atd,
			  fltleg.legorg,
			  fltleg.legdst,
			  fltleg.legsernum,
			  (SELECT RTRIM ( XMLAGG ( XMLELEMENT ( LEG, legorg || ':' || acrtyp
			      || ',' ) ) .EXTRACT ( '//text()' ), ',' ) legacrtyp
			    FROM fltoprleg leg
			    WHERE lodpol.cmpcod  = leg.cmpcod
			    AND lodpol.fltnum    = leg.fltnum
			    AND lodpol.fltseqnum = leg.fltseqnum
			    AND lodpol.fltcaridr = leg.fltcaridr
  			  ) acrtyp,
  			   (SELECT MAX(postyp)
 				 from shruldtypacrcbt uldtyp
  				where uldtyp.cmpcod  = pospol.cmpcod
  				and uldtyp.acrtyp    = fltleg.acrtyp
 				 and uldtyp.uldtypcod = substr(pospol.pos,1,3)
 			 	) postyp,
			  fltleg.talnum,
			  fltmst.fltrou,
			  fltmst.fltdat,
			  fltmst.flttyp,
			  pospol.pos ,
      --  loduld.uldnum,
			  --loduld.posnum uldpos,
			  --loduld.barrowflg,
        seguldshp.uldnum seguldnum,
			  seguldshp.mstdocnum,
			  seguldshp.dupnum,
			  shpmst.shppfx,
			  shpmst.orgcod,
				shpmst.dstcod,
			  seguldshp.seqnum,
        seguld.uldnum,
		seguld.barrowflg,
        seguld.uldpos uldpos,
		seguld.plnpos plnuldpos,
		seguld.bdpcmpsta,
	    seguld.uldsta,
        seguld.grswgt GRSWGT,
			  seguld.netwgt NETWGT,
			  seguld.tarwgt TARWGT,
			  seguld.actwgt ACTWGT,
			  seguldshp.docowridr ,
			  seguldshp.bdppcs,
			  seguldshp.bdpwgt,
			  seguldshp.bdpvol,
			  seguldshp.mftpcs shpmftpcs,
			  seguldshp.mftwgt shpmftwgt,
			  seguldshp.mftvol shpmftvol,
  CASE
    WHEN seguld.BSEFLG = 'Y'
    THEN
      (SELECT sum(SEG.TARWGT)
      FROM OPRSEGULD SEG
      WHERE seguld.CMPCOD  = SEG.CMPCOD
      AND seguld.FLTNUM    = SEG.FLTNUM
      AND seguld.FLTSEQNUM = SEG.FLTSEQNUM
      AND seguld.FLTCARIDR = SEG.FLTCARIDR
      AND seguld.ULDNUM    = SEG.BSEPLT
      AND seguld.SEGSERNUM = SEG.SEGSERNUM
      AND SEG.BSEFLG       = 'N'
      )
    ELSE 0
  END PLTSTKWGT
			FROM oprlodplngrpdtl lodgrp
			INNER JOIN oprlodplnmst lodmst
			ON lodgrp.fltnum     = lodmst.fltnum
			AND lodgrp.fltcaridr = lodmst.fltcaridr
      AND lodgrp.fltseqnum = lodmst.fltseqnum
			AND lodgrp.cmpcod    = lodmst.cmpcod
			INNER JOIN oprlodplnpol lodpol
			ON lodgrp.cmpcod     = lodpol.cmpcod
			AND lodgrp.fltnum    = lodpol.fltnum
			AND lodgrp.fltseqnum = lodpol.fltseqnum
			AND lodgrp.fltcaridr = lodpol.fltcaridr
			AND lodgrp.pol       = lodpol.pol
      INNER JOIN fltoprleg fltleg
			ON lodpol.cmpcod     = fltleg.cmpcod
			AND lodpol.fltnum    = fltleg.fltnum
			AND lodpol.fltseqnum = fltleg.fltseqnum
			AND lodpol.fltcaridr = fltleg.fltcaridr
			AND lodpol.pol       = fltleg.legorg
			INNER JOIN fltoprmst fltmst
			ON fltleg.cmpcod     = fltmst.cmpcod
			AND fltleg.fltnum    = fltmst.fltnum
			AND fltleg.fltseqnum = fltmst.fltseqnum
			AND fltleg.fltcaridr = fltmst.fltcaridr
			INNER JOIN oprlodplnpospol pospol
			ON lodgrp.cmpcod     = pospol.cmpcod
			AND lodgrp.fltnum    = pospol.fltnum
			AND lodgrp.fltseqnum = pospol.fltseqnum
			AND lodgrp.fltcaridr = pospol.fltcaridr
			AND lodgrp.pol       = pospol.pol
			AND lodgrp.grpidr    = pospol.grpidr
      LEFT OUTER JOIN oprfltseg fltseg
			ON  lodgrp.cmpcod    = fltseg.cmpcod
			AND lodgrp.fltnum    = fltseg.fltnum
			AND lodgrp.fltseqnum = fltseg.fltseqnum
			AND lodgrp.fltcaridr = fltseg.fltcaridr
			AND lodgrp.pol       = fltseg.pol
			AND lodgrp.pou       = fltseg.pou
		--  LEFT OUTER JOIN oprlodplnuld loduld
			--ON pospol.cmpcod     = loduld.cmpcod
		--	AND pospol.fltnum    = loduld.fltnum
			--AND pospol.fltseqnum = loduld.fltseqnum
			--AND pospol.fltcaridr = loduld.fltcaridr
		--	AND pospol.pol       = loduld.segorg
			--AND pospol.pos       = loduld.uldnum
			LEFT OUTER JOIN oprseguld seguld
			ON fltseg.cmpcod     = seguld.cmpcod
			AND fltseg.fltnum    = seguld.fltnum
			AND fltseg.fltseqnum = seguld.fltseqnum
			AND fltseg.fltcaridr = seguld.fltcaridr
			AND pospol.pos    = seguld.plnpos
			AND fltseg.segsernum = seguld.segsernum
			LEFT OUTER JOIN oprseguldshp seguldshp
			ON seguld.cmpcod     = seguldshp.cmpcod
			AND seguld.fltnum    = seguldshp.fltnum
			AND seguld.fltseqnum = seguldshp.fltseqnum
			AND seguld.fltcaridr = seguldshp.fltcaridr
			AND seguld.uldnum    = seguldshp.uldnum
			AND seguld.segsernum = fltseg.segsernum
			LEFT OUTER JOIN oprshpmst shpmst
			ON seguldshp.cmpcod     = shpmst.cmpcod
			AND seguldshp.mstdocnum = shpmst.mstdocnum
			AND seguldshp.seqnum    = shpmst.seqnum
			AND seguldshp.dupnum    = shpmst.dupnum
			AND seguldshp.docowridr = shpmst.docowridr
			LEFT OUTER JOIN oprarpexpflt expflt
			ON  fltleg.cmpcod = expflt.cmpcod
			AND fltleg.fltnum = expflt.fltnum
			AND  fltleg.fltseqnum = expflt.fltseqnum
			AND  fltleg.fltcaridr = expflt.fltcaridr
			AND  fltleg.legsernum = expflt.legsernum
			AND  fltleg.legorg = expflt.arpcod]]>
		  </QRY:Source>
    </QRY:Definition>
	<QRY:Definition>
	       <QRY:Id>134</QRY:Id>
		   <QRY:Source Name="operations.flthandling.loadplan.findLoadPlanDetails" Type="NATIVE">
			<![CDATA[ SELECT LODMST.CMPCOD,LODMST.FLTCARIDR,LODMST.FLTNUM,LODMST.FLTSEQNUM,LODMST.FLTCARCOD,FLTLEG.LEGSERNUM,FLTLEG.ATD,
                LODPOL.CFGSERNUM,LODPOL.POLVER,LODPOL.RELVER,LODPOL.POL,LODSHP.DOCOWNIDR,LODSHP.MSTDOCNUM,LODSHP.DUPNUM,LODSHP.SEQNUM,
			    LODSHP.GRPIDR,LODSHP.LODPRY,LODSHP.PLNPCS,LODSHP.PLNVOL,LODSHP.PLNWGT,LODSHP.POSNUM,
				LODSHP.RELPCS,LODSHP.RELVOL,LODSHP.RELWGT,LODSHP.SEGDST,LODSHP.SEGORG,
				LODSHP.SHPSRC,LODSHP.UBRNUM,LODSHP.LSTUPDTIM LODSHPLSTUPDTIM,LODSHP.ULDNUM,
				LODSHP.LSTUPDUSR LODSHPLSTUPDUSR,FLTSEG.SEGSERNUM,FLTLEG.STD FLTDAT
				FROM OPRLODPLNSHP LODSHP INNER JOIN OPRLODPLNPOL LODPOL 
				ON	LODSHP.CMPCOD    = LODPOL.CMPCOD
				AND LODSHP.FLTCARIDR = LODPOL.FLTCARIDR
				AND LODSHP.FLTNUM    = LODPOL.FLTNUM
				AND LODSHP.FLTSEQNUM = LODPOL.FLTSEQNUM
				AND LODSHP.SEGORG    = LODPOL.POL INNER JOIN OPRLODPLNMST LODMST
				ON	LODPOL.CMPCOD    = LODMST.CMPCOD
				AND LODPOL.FLTCARIDR = LODMST.FLTCARIDR
				AND LODPOL.FLTNUM    = LODMST.FLTNUM
				AND LODPOL.FLTSEQNUM = LODMST.FLTSEQNUM INNER JOIN FLTOPRMST FLTMST
				ON	LODMST.CMPCOD    = FLTMST.CMPCOD
				AND LODMST.FLTCARIDR = FLTMST.FLTCARIDR
				AND LODMST.FLTNUM    = FLTMST.FLTNUM
				AND LODMST.FLTSEQNUM = FLTMST.FLTSEQNUM INNER JOIN FLTOPRSEG FLTSEG
				ON	LODSHP.CMPCOD    = FLTSEG.CMPCOD
				AND LODSHP.FLTCARIDR = FLTSEG.FLTCARIDR
				AND LODSHP.FLTNUM    = FLTSEG.FLTNUM
				AND LODSHP.FLTSEQNUM = FLTSEG.FLTSEQNUM
				AND LODSHP.SEGORG = FLTSEG.SEGORG
				AND LODSHP.SEGDST = FLTSEG.SEGDST INNER JOIN FLTOPRLEG FLTLEG
				ON	LODPOL.CMPCOD    = FLTLEG.CMPCOD
				AND LODPOL.FLTCARIDR = FLTLEG.FLTCARIDR
				AND LODPOL.FLTNUM    = FLTLEG.FLTNUM
				AND LODPOL.FLTSEQNUM = FLTLEG.FLTSEQNUM
				AND LODPOL.POL = FLTLEG.LEGORG   
				WHERE LODSHP.CMPCOD = ? ]]>
        </QRY:Source>
    </QRY:Definition>
    </QRY:Definitions>